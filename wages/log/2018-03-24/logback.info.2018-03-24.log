Starting WagesApplication on SKY-20171023NXB with PID 6092 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@13b27f48: startup date [Sat Mar 24 10:07:10 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$cfb421a2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_131\bin;D:\java\apache-maven-3.5.2\bin;C:\Program Files (x86)\Git\cmd;%ZOOKEEPER_HOME%\bin;.]
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 2385 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.2.14.Final}
HHH000206: hibernate.properties not found
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@13b27f48: startup date [Sat Mar 24 10:07:10 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/findStaffsByPage]}" onto public org.springframework.data.domain.Page<com.jiemin.wages.domain.Staff> com.jiemin.wages.controller.HelloController.findStaffPage()
Mapped "{[/findStaffs]}" onto public java.util.List<com.jiemin.wages.domain.Staff> com.jiemin.wages.controller.HelloController.findStaff()
Mapped "{[/say]}" onto public java.lang.String com.jiemin.wages.controller.HelloController.sayHi()
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in exceptionHandle
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http) with context path ''
Started WagesApplication in 8.252 seconds (JVM running for 9.794)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 106 ms
===========开始请求com.jiemin.wages.controller.HelloController.findStaffPage============
===========请求时间:2018-03-24 10:07:31==========================
url=http://localhost:8088/findStaffsByPage
method=GET
ip=0:0:0:0:0:0:0:1
class_method=com.jiemin.wages.controller.HelloController.findStaffPage
args={}
=============结束请求时间:2018-03-24 10:07:31======================
Resolved exception caused by Handler execution: org.springframework.data.mapping.PropertyReferenceException: No property id found for type Staff! Did you mean 'gid'?
Starting WagesApplication on SKY-20171023NXB with PID 576 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@ebcc4df: startup date [Sat Mar 24 10:08:00 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$9fcf998] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_131\bin;D:\java\apache-maven-3.5.2\bin;C:\Program Files (x86)\Git\cmd;%ZOOKEEPER_HOME%\bin;.]
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 2620 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.2.14.Final}
HHH000206: hibernate.properties not found
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@ebcc4df: startup date [Sat Mar 24 10:08:00 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/findStaffs]}" onto public java.util.List<com.jiemin.wages.domain.Staff> com.jiemin.wages.controller.HelloController.findStaff()
Mapped "{[/say]}" onto public java.lang.String com.jiemin.wages.controller.HelloController.sayHi()
Mapped "{[/findStaffsByPage]}" onto public org.springframework.data.domain.Page<com.jiemin.wages.domain.Staff> com.jiemin.wages.controller.HelloController.findStaffPage()
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in exceptionHandle
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http) with context path ''
Started WagesApplication in 6.56 seconds (JVM running for 7.403)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 20 ms
===========开始请求com.jiemin.wages.controller.HelloController.findStaffPage============
===========请求时间:2018-03-24 10:08:09==========================
url=http://localhost:8088/findStaffsByPage
method=GET
ip=0:0:0:0:0:0:0:1
class_method=com.jiemin.wages.controller.HelloController.findStaffPage
args={}
HHH000397: Using ASTQueryTranslatorFactory
=============结束请求时间:2018-03-24 10:08:10======================
response=Page 2 of 1 containing UNKNOWN instances
===========开始请求com.jiemin.wages.controller.HelloController.findStaffPage============
===========请求时间:2018-03-24 10:09:11==========================
url=http://localhost:8088/findStaffsByPage
method=GET
ip=0:0:0:0:0:0:0:1
class_method=com.jiemin.wages.controller.HelloController.findStaffPage
args={}
=============结束请求时间:2018-03-24 10:09:11======================
response=Page 2 of 1 containing UNKNOWN instances
Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@ebcc4df: startup date [Sat Mar 24 10:08:00 CST 2018]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting WagesApplication on SKY-20171023NXB with PID 576 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@707caa41: startup date [Sat Mar 24 10:10:13 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$9fcf998] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 838 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@707caa41: startup date [Sat Mar 24 10:10:13 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in exceptionHandle
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http) with context path ''
Started WagesApplication in 2.136 seconds (JVM running for 136.486)
Condition evaluation unchanged
Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@707caa41: startup date [Sat Mar 24 10:10:13 CST 2018]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting WagesApplication on SKY-20171023NXB with PID 576 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5ad83f20: startup date [Sat Mar 24 10:11:22 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$9fcf998] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 981 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'exceptionHandle': Lookup method resolution failed; nested exception is java.lang.IllegalStateException: Failed to introspect Class [com.jiemin.wages.handle.ExceptionHandle] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@4a0c0c07]
Closing JPA EntityManagerFactory for persistence unit 'default'
Stopping service [Tomcat]


Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
Starting WagesApplication on SKY-20171023NXB with PID 576 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4a4ef41d: startup date [Sat Mar 24 10:11:27 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$9fcf998] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 798 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4a4ef41d: startup date [Sat Mar 24 10:11:27 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http) with context path ''
Started WagesApplication in 2.141 seconds (JVM running for 209.845)
Condition evaluation unchanged
Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4a4ef41d: startup date [Sat Mar 24 10:11:27 CST 2018]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting WagesApplication on SKY-20171023NXB with PID 80 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@18cf97ae: startup date [Sat Mar 24 10:17:43 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$5a732bfa] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_131\bin;D:\java\apache-maven-3.5.2\bin;C:\Program Files (x86)\Git\cmd;%ZOOKEEPER_HOME%\bin;.]
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 2155 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.2.14.Final}
HHH000206: hibernate.properties not found
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@18cf97ae: startup date [Sat Mar 24 10:17:43 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/findStaffsByPage]}" onto public com.jiemin.wages.domain.Result com.jiemin.wages.controller.HelloController.findStaffPage()
Mapped "{[/say]}" onto public java.lang.String com.jiemin.wages.controller.HelloController.sayHi()
Mapped "{[/findStaffs]}" onto public java.util.List<com.jiemin.wages.domain.Staff> com.jiemin.wages.controller.HelloController.findStaff()
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in exceptionHandle
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http) with context path ''
Started WagesApplication in 6.18 seconds (JVM running for 6.995)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 21 ms
===========开始请求com.jiemin.wages.controller.HelloController.findStaffPage============
===========请求时间:2018-03-24 10:17:56==========================
url=http://localhost:8088/findStaffsByPage
method=GET
ip=0:0:0:0:0:0:0:1
class_method=com.jiemin.wages.controller.HelloController.findStaffPage
args={}
HHH000397: Using ASTQueryTranslatorFactory
=============结束请求时间:2018-03-24 10:17:56======================
response=Result(code=200, msg=成功, data=Page 2 of 1 containing UNKNOWN instances)
Starting WagesApplication on SKY-20171023NXB with PID 5784 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7774c4f: startup date [Sat Mar 24 10:20:44 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b3547e1f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_131\bin;D:\java\apache-maven-3.5.2\bin;C:\Program Files (x86)\Git\cmd;%ZOOKEEPER_HOME%\bin;.]
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 2480 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.2.14.Final}
HHH000206: hibernate.properties not found
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7774c4f: startup date [Sat Mar 24 10:20:44 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/say]}" onto public java.lang.String com.jiemin.wages.controller.HelloController.sayHi()
Mapped "{[/findStaffs]}" onto public java.util.List<com.jiemin.wages.domain.Staff> com.jiemin.wages.controller.HelloController.findStaff()
Mapped "{[/findStaffsByPage]}" onto public com.jiemin.wages.domain.Result com.jiemin.wages.controller.HelloController.findStaffPage()
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in exceptionHandle
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http) with context path ''
Started WagesApplication in 7.418 seconds (JVM running for 8.912)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 26 ms
===========开始请求com.jiemin.wages.controller.HelloController.findStaffPage============
===========请求时间:2018-03-24 10:20:53==========================
url=http://localhost:8088/findStaffsByPage
method=GET
ip=0:0:0:0:0:0:0:1
class_method=com.jiemin.wages.controller.HelloController.findStaffPage
args={}
HHH000397: Using ASTQueryTranslatorFactory
=============结束请求时间:2018-03-24 10:21:34======================
response=Result(code=200, msg=成功, data=Page 2 of 1 containing UNKNOWN instances)
Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7774c4f: startup date [Sat Mar 24 10:20:44 CST 2018]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting WagesApplication on SKY-20171023NXB with PID 5784 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2a36540b: startup date [Sat Mar 24 10:21:43 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b3547e1f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 1070 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2a36540b: startup date [Sat Mar 24 10:21:43 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/say]}" onto public java.lang.String com.jiemin.wages.controller.HelloController.sayHi()
Mapped "{[/findStaffs]}" onto public java.util.List<com.jiemin.wages.domain.Staff> com.jiemin.wages.controller.HelloController.findStaff()
Mapped "{[/findStaffsByPage]}" onto public com.jiemin.wages.domain.Result com.jiemin.wages.controller.HelloController.findStaffPage()
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in exceptionHandle
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http) with context path ''
Started WagesApplication in 2.651 seconds (JVM running for 64.487)
Condition evaluation unchanged
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 8 ms
===========开始请求com.jiemin.wages.controller.HelloController.findStaffPage============
===========请求时间:2018-03-24 10:21:48==========================
url=http://localhost:8088/findStaffsByPage
method=GET
ip=0:0:0:0:0:0:0:1
class_method=com.jiemin.wages.controller.HelloController.findStaffPage
args={}
HHH000397: Using ASTQueryTranslatorFactory
=============结束请求时间:2018-03-24 10:21:48======================
response=Result(code=200, msg=成功, data=Page 1 of 1 containing com.jiemin.wages.domain.Staff instances)
Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2a36540b: startup date [Sat Mar 24 10:21:43 CST 2018]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting WagesApplication on SKY-20171023NXB with PID 5784 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7180c14: startup date [Sat Mar 24 10:22:29 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b3547e1f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 1133 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7180c14: startup date [Sat Mar 24 10:22:29 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/say]}" onto public java.lang.String com.jiemin.wages.controller.HelloController.sayHi()
Mapped "{[/findStaffs]}" onto public java.util.List<com.jiemin.wages.domain.Staff> com.jiemin.wages.controller.HelloController.findStaff()
Mapped "{[/findStaffsByPage]}" onto public com.jiemin.wages.domain.Result com.jiemin.wages.controller.HelloController.findStaffPage()
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in exceptionHandle
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http) with context path ''
Started WagesApplication in 2.631 seconds (JVM running for 109.814)
Condition evaluation unchanged
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 8 ms
===========开始请求com.jiemin.wages.controller.HelloController.findStaffPage============
===========请求时间:2018-03-24 10:22:44==========================
url=http://localhost:8088/findStaffsByPage
method=GET
ip=0:0:0:0:0:0:0:1
class_method=com.jiemin.wages.controller.HelloController.findStaffPage
args={}
HHH000397: Using ASTQueryTranslatorFactory
=============结束请求时间:2018-03-24 10:22:44======================
response=Result(code=200, msg=成功, data=Page 1 of 2 containing com.jiemin.wages.domain.Staff instances)
Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7180c14: startup date [Sat Mar 24 10:22:29 CST 2018]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting WagesApplication on SKY-20171023NXB with PID 5784 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@62f985c: startup date [Sat Mar 24 10:23:16 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b3547e1f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 924 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@62f985c: startup date [Sat Mar 24 10:23:16 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/say]}" onto public java.lang.String com.jiemin.wages.controller.HelloController.sayHi()
Mapped "{[/findStaffs]}" onto public java.util.List<com.jiemin.wages.domain.Staff> com.jiemin.wages.controller.HelloController.findStaff()
Mapped "{[/findStaffsByPage]}" onto public com.jiemin.wages.domain.Result com.jiemin.wages.controller.HelloController.findStaffPage()
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in exceptionHandle
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http) with context path ''
Started WagesApplication in 3.211 seconds (JVM running for 157.604)
Condition evaluation unchanged
Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@62f985c: startup date [Sat Mar 24 10:23:16 CST 2018]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting WagesApplication on SKY-20171023NXB with PID 5784 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5b446c07: startup date [Sat Mar 24 10:23:21 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b3547e1f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 929 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5b446c07: startup date [Sat Mar 24 10:23:21 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/say]}" onto public java.lang.String com.jiemin.wages.controller.HelloController.sayHi()
Mapped "{[/findStaffs]}" onto public java.util.List<com.jiemin.wages.domain.Staff> com.jiemin.wages.controller.HelloController.findStaff()
Mapped "{[/findStaffsByPage]}" onto public com.jiemin.wages.domain.Result com.jiemin.wages.controller.HelloController.findStaffPage()
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in exceptionHandle
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http) with context path ''
Started WagesApplication in 2.361 seconds (JVM running for 161.523)
Condition evaluation unchanged
Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5b446c07: startup date [Sat Mar 24 10:23:21 CST 2018]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting WagesApplication on SKY-20171023NXB with PID 5784 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@56924f2f: startup date [Sat Mar 24 10:24:32 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b3547e1f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 982 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@56924f2f: startup date [Sat Mar 24 10:24:32 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in exceptionHandle
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http) with context path ''
Started WagesApplication in 2.376 seconds (JVM running for 232.666)
Condition evaluation unchanged
Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@56924f2f: startup date [Sat Mar 24 10:24:32 CST 2018]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting WagesApplication on SKY-20171023NXB with PID 5784 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@bc3e1ba: startup date [Sat Mar 24 10:27:50 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b3547e1f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 975 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@bc3e1ba: startup date [Sat Mar 24 10:27:50 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in exceptionHandle
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http) with context path ''
Started WagesApplication in 2.381 seconds (JVM running for 430.844)
Condition evaluation unchanged
Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@bc3e1ba: startup date [Sat Mar 24 10:27:50 CST 2018]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting WagesApplication on SKY-20171023NXB with PID 5784 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@14a4530f: startup date [Sat Mar 24 10:28:11 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b3547e1f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 1130 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@14a4530f: startup date [Sat Mar 24 10:28:11 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in exceptionHandle
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http) with context path ''
Started WagesApplication in 3.636 seconds (JVM running for 453.179)
Condition evaluation unchanged
Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@14a4530f: startup date [Sat Mar 24 10:28:11 CST 2018]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting WagesApplication on SKY-20171023NXB with PID 5784 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@59a8e045: startup date [Sat Mar 24 10:28:19 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b3547e1f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 1110 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@59a8e045: startup date [Sat Mar 24 10:28:19 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in exceptionHandle
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http) with context path ''
Started WagesApplication in 3.248 seconds (JVM running for 460.644)
Condition evaluation unchanged
Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@59a8e045: startup date [Sat Mar 24 10:28:19 CST 2018]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting WagesApplication on SKY-20171023NXB with PID 5784 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@55a8fd00: startup date [Sat Mar 24 10:28:27 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b3547e1f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 1334 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@55a8fd00: startup date [Sat Mar 24 10:28:27 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in exceptionHandle
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http) with context path ''
Started WagesApplication in 2.906 seconds (JVM running for 468.719)
Condition evaluation unchanged
Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@55a8fd00: startup date [Sat Mar 24 10:28:27 CST 2018]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting WagesApplication on SKY-20171023NXB with PID 5784 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@61ad7de4: startup date [Sat Mar 24 10:28:57 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b3547e1f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 1189 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@61ad7de4: startup date [Sat Mar 24 10:28:57 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in exceptionHandle
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http) with context path ''
Started WagesApplication in 3.106 seconds (JVM running for 498.181)
Condition evaluation unchanged
Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@61ad7de4: startup date [Sat Mar 24 10:28:57 CST 2018]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting WagesApplication on SKY-20171023NXB with PID 5784 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1ccbea64: startup date [Sat Mar 24 10:29:02 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b3547e1f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 735 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1ccbea64: startup date [Sat Mar 24 10:29:02 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/say]}" onto public java.lang.String com.jiemin.wages.controller.HelloController.sayHi()
Mapped "{[/findStaffs]}" onto public java.util.List<com.jiemin.wages.domain.Staff> com.jiemin.wages.controller.HelloController.findStaff()
Mapped "{[/findStaffsByPage]}" onto public com.jiemin.wages.domain.Result com.jiemin.wages.controller.HelloController.findStaffPage(com.jiemin.wages.domain.Pages)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in exceptionHandle
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http) with context path ''
Started WagesApplication in 2.176 seconds (JVM running for 503.136)
Condition evaluation unchanged
Starting WagesApplication on SKY-20171023NXB with PID 2300 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@371ac82a: startup date [Sat Mar 24 10:31:19 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$4504b0e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_131\bin;D:\java\apache-maven-3.5.2\bin;C:\Program Files (x86)\Git\cmd;%ZOOKEEPER_HOME%\bin;.]
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 3267 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.2.14.Final}
HHH000206: hibernate.properties not found
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@371ac82a: startup date [Sat Mar 24 10:31:19 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/findStaffsByPage]}" onto public com.jiemin.wages.domain.Result com.jiemin.wages.controller.HelloController.findStaffPage(com.jiemin.wages.domain.Pages)
Mapped "{[/findStaffs]}" onto public java.util.List<com.jiemin.wages.domain.Staff> com.jiemin.wages.controller.HelloController.findStaff()
Mapped "{[/say]}" onto public java.lang.String com.jiemin.wages.controller.HelloController.sayHi()
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in exceptionHandle
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http) with context path ''
Started WagesApplication in 8.161 seconds (JVM running for 9.528)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 30 ms
===========开始请求com.jiemin.wages.controller.HelloController.findStaffPage============
===========请求时间:2018-03-24 10:31:39==========================
url=http://localhost:8088/findStaffsByPage
method=GET
ip=0:0:0:0:0:0:0:1
class_method=com.jiemin.wages.controller.HelloController.findStaffPage
args=Pages(pageSize=2, pageNumber=1, pageCount=null, totalPage=null, targetPage=null)
HHH000397: Using ASTQueryTranslatorFactory
=============结束请求时间:2018-03-24 10:31:39======================
response=Result(code=200, msg=成功, data=Page 2 of 1 containing UNKNOWN instances)
Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@371ac82a: startup date [Sat Mar 24 10:31:19 CST 2018]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting WagesApplication on SKY-20171023NXB with PID 2300 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@24025d6f: startup date [Sat Mar 24 10:32:06 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$4504b0e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 1343 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@24025d6f: startup date [Sat Mar 24 10:32:06 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in exceptionHandle
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http) with context path ''
Started WagesApplication in 3.643 seconds (JVM running for 52.551)
Condition evaluation unchanged
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 9 ms
Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@24025d6f: startup date [Sat Mar 24 10:32:06 CST 2018]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting WagesApplication on SKY-20171023NXB with PID 2300 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6f66c884: startup date [Sat Mar 24 10:33:37 CST 2018]; root of context hierarchy
Starting WagesApplication on SKY-20171023NXB with PID 4232 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@64dbe7a3: startup date [Sat Mar 24 10:33:41 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$77bf4fc2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_131\bin;D:\java\apache-maven-3.5.2\bin;C:\Program Files (x86)\Git\cmd;%ZOOKEEPER_HOME%\bin;.]
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 2881 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.2.14.Final}
HHH000206: hibernate.properties not found
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@64dbe7a3: startup date [Sat Mar 24 10:33:41 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/say]}" onto public java.lang.String com.jiemin.wages.controller.HelloController.sayHi()
Mapped "{[/findStaffs]}" onto public java.util.List<com.jiemin.wages.domain.Staff> com.jiemin.wages.controller.HelloController.findStaff()
Mapped "{[/findStaffsByPage]}" onto public com.jiemin.wages.domain.Result com.jiemin.wages.controller.HelloController.findStaffPage(com.jiemin.wages.domain.Pages)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in exceptionHandle
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http) with context path ''
Started WagesApplication in 8.221 seconds (JVM running for 9.09)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 31 ms
Resolved exception caused by Handler execution: org.springframework.web.bind.MissingServletRequestParameterException: Required Pages parameter 'page' is not present
Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@64dbe7a3: startup date [Sat Mar 24 10:33:41 CST 2018]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting WagesApplication on SKY-20171023NXB with PID 4232 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@244c502c: startup date [Sat Mar 24 10:37:05 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$77bf4fc2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 1097 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@244c502c: startup date [Sat Mar 24 10:37:05 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/say]}" onto public java.lang.String com.jiemin.wages.controller.HelloController.sayHi()
Mapped "{[/findStaffs]}" onto public java.util.List<com.jiemin.wages.domain.Staff> com.jiemin.wages.controller.HelloController.findStaff()
Mapped "{[/findStaffsByPage]}" onto public com.jiemin.wages.domain.Result com.jiemin.wages.controller.HelloController.findStaffPage(com.jiemin.wages.domain.Pages)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in exceptionHandle
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http) with context path ''
Started WagesApplication in 2.801 seconds (JVM running for 208.424)
Condition evaluation unchanged
Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@244c502c: startup date [Sat Mar 24 10:37:05 CST 2018]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting WagesApplication on SKY-20171023NXB with PID 4232 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2a2e45ff: startup date [Sat Mar 24 10:40:02 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$77bf4fc2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 910 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2a2e45ff: startup date [Sat Mar 24 10:40:02 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in exceptionHandle
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http) with context path ''
Started WagesApplication in 2.349 seconds (JVM running for 384.832)
Condition evaluation unchanged
Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2a2e45ff: startup date [Sat Mar 24 10:40:02 CST 2018]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting WagesApplication on SKY-20171023NXB with PID 4232 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@65c3dc92: startup date [Sat Mar 24 10:40:29 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$77bf4fc2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 741 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@65c3dc92: startup date [Sat Mar 24 10:40:29 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/say]}" onto public java.lang.String com.jiemin.wages.controller.HelloController.sayHi()
Mapped "{[/findStaffs]}" onto public java.util.List<com.jiemin.wages.domain.Staff> com.jiemin.wages.controller.HelloController.findStaff()
Mapped "{[/findStaffsByPage]}" onto public com.jiemin.wages.domain.Result com.jiemin.wages.controller.HelloController.findStaffPage(java.lang.Integer,java.lang.Integer)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in exceptionHandle
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http) with context path ''
Started WagesApplication in 2.255 seconds (JVM running for 412.034)
Condition evaluation unchanged
Starting WagesApplication on SKY-20171023NXB with PID 5016 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5880daae: startup date [Sat Mar 24 10:40:41 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$f15afc89] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_131\bin;D:\java\apache-maven-3.5.2\bin;C:\Program Files (x86)\Git\cmd;%ZOOKEEPER_HOME%\bin;.]
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 2119 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.2.14.Final}
HHH000206: hibernate.properties not found
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5880daae: startup date [Sat Mar 24 10:40:41 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/findStaffs]}" onto public java.util.List<com.jiemin.wages.domain.Staff> com.jiemin.wages.controller.HelloController.findStaff()
Mapped "{[/say]}" onto public java.lang.String com.jiemin.wages.controller.HelloController.sayHi()
Mapped "{[/findStaffsByPage]}" onto public com.jiemin.wages.domain.Result com.jiemin.wages.controller.HelloController.findStaffPage(java.lang.Integer,java.lang.Integer)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in exceptionHandle
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http) with context path ''
Started WagesApplication in 6.263 seconds (JVM running for 7.092)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 20 ms
===========开始请求com.jiemin.wages.controller.HelloController.findStaffPage============
===========请求时间:2018-03-24 10:40:51==========================
url=http://localhost:8088/findStaffsByPage
method=GET
ip=0:0:0:0:0:0:0:1
class_method=com.jiemin.wages.controller.HelloController.findStaffPage
args=1
HHH000397: Using ASTQueryTranslatorFactory
=============结束请求时间:2018-03-24 10:40:51======================
response=Result(code=200, msg=成功, data=Page 1 of 1 containing com.jiemin.wages.domain.Staff instances)
Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5880daae: startup date [Sat Mar 24 10:40:41 CST 2018]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting WagesApplication on SKY-20171023NXB with PID 5016 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4977e22b: startup date [Sat Mar 24 10:41:54 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$f15afc89] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 881 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4977e22b: startup date [Sat Mar 24 10:41:54 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/findStaffs]}" onto public java.util.List<com.jiemin.wages.domain.Staff> com.jiemin.wages.controller.HelloController.findStaff()
Mapped "{[/say]}" onto public java.lang.String com.jiemin.wages.controller.HelloController.sayHi()
Mapped "{[/findStaffsByPage]}" onto public com.jiemin.wages.domain.Result com.jiemin.wages.controller.HelloController.findStaffPage(java.lang.Integer,java.lang.Integer)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in exceptionHandle
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http) with context path ''
Started WagesApplication in 2.048 seconds (JVM running for 76.346)
Condition evaluation unchanged
Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4977e22b: startup date [Sat Mar 24 10:41:54 CST 2018]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting WagesApplication on SKY-20171023NXB with PID 5016 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@251f94b1: startup date [Sat Mar 24 10:42:22 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$f15afc89] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 581 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@251f94b1: startup date [Sat Mar 24 10:42:22 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in exceptionHandle
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http) with context path ''
Started WagesApplication in 1.748 seconds (JVM running for 103.658)
Condition evaluation unchanged
Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@251f94b1: startup date [Sat Mar 24 10:42:22 CST 2018]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting WagesApplication on SKY-20171023NXB with PID 5016 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1f516798: startup date [Sat Mar 24 10:42:26 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$f15afc89] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 680 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1f516798: startup date [Sat Mar 24 10:42:26 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/findStaffs]}" onto public java.util.List<com.jiemin.wages.domain.Staff> com.jiemin.wages.controller.HelloController.findStaff()
Mapped "{[/say]}" onto public java.lang.String com.jiemin.wages.controller.HelloController.sayHi()
Mapped "{[/findStaffsByPage]}" onto public com.jiemin.wages.domain.Result com.jiemin.wages.controller.HelloController.findStaffPage(java.lang.Integer,java.lang.Integer)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in exceptionHandle
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http) with context path ''
Started WagesApplication in 1.8 seconds (JVM running for 108.203)
Condition evaluation unchanged
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 8 ms
===========开始请求com.jiemin.wages.controller.HelloController.findStaffPage============
===========请求时间:2018-03-24 10:44:15==========================
url=http://localhost:8088/findStaffsByPage
method=GET
ip=0:0:0:0:0:0:0:1
class_method=com.jiemin.wages.controller.HelloController.findStaffPage
args=1
HHH000397: Using ASTQueryTranslatorFactory
=============结束请求时间:2018-03-24 10:44:15======================
response=Result(code=200, msg=成功, data=Page 1 of 2 containing com.jiemin.wages.domain.Staff instances)
Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1f516798: startup date [Sat Mar 24 10:42:26 CST 2018]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting WagesApplication on SKY-20171023NXB with PID 5016 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@540254db: startup date [Sat Mar 24 10:45:43 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$f15afc89] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 738 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@540254db: startup date [Sat Mar 24 10:45:43 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in exceptionHandle
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http) with context path ''
Started WagesApplication in 2.011 seconds (JVM running for 305.384)
Condition evaluation unchanged
Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@540254db: startup date [Sat Mar 24 10:45:43 CST 2018]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting WagesApplication on SKY-20171023NXB with PID 5016 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@77a7e739: startup date [Sat Mar 24 10:45:48 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$f15afc89] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 642 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@77a7e739: startup date [Sat Mar 24 10:45:48 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in exceptionHandle
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http) with context path ''
Started WagesApplication in 1.963 seconds (JVM running for 310.304)
Condition evaluation unchanged
Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@77a7e739: startup date [Sat Mar 24 10:45:48 CST 2018]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting WagesApplication on SKY-20171023NXB with PID 5016 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@754a5171: startup date [Sat Mar 24 10:45:55 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$f15afc89] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 525 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@754a5171: startup date [Sat Mar 24 10:45:55 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/findStaffs]}" onto public java.util.List<com.jiemin.wages.domain.Staff> com.jiemin.wages.controller.HelloController.findStaff()
Mapped "{[/say]}" onto public java.lang.String com.jiemin.wages.controller.HelloController.sayHi()
Mapped "{[/findStaffsByPage]}" onto public com.jiemin.wages.domain.Result com.jiemin.wages.controller.HelloController.findStaffPage(java.lang.Integer,java.lang.Integer)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in exceptionHandle
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http) with context path ''
Started WagesApplication in 1.606 seconds (JVM running for 316.793)
Condition evaluation unchanged
Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@754a5171: startup date [Sat Mar 24 10:45:55 CST 2018]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting WagesApplication on SKY-20171023NXB with PID 5016 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7d86a9ad: startup date [Sat Mar 24 10:46:02 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$f15afc89] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 619 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7d86a9ad: startup date [Sat Mar 24 10:46:02 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/findStaffs]}" onto public java.util.List<com.jiemin.wages.domain.Staff> com.jiemin.wages.controller.HelloController.findStaff()
Mapped "{[/say]}" onto public java.lang.String com.jiemin.wages.controller.HelloController.sayHi()
Mapped "{[/findStaffsByPage]}" onto public com.jiemin.wages.domain.Result com.jiemin.wages.controller.HelloController.findStaffPage(java.lang.Integer,java.lang.Integer)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in exceptionHandle
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http) with context path ''
Started WagesApplication in 1.894 seconds (JVM running for 323.621)
Condition evaluation unchanged
Starting WagesApplication on SKY-20171023NXB with PID 3468 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@364f0314: startup date [Sat Mar 24 11:40:36 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b6df1f8b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_131\bin;D:\java\apache-maven-3.5.2\bin;C:\Program Files (x86)\Git\cmd;%ZOOKEEPER_HOME%\bin;.]
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 2030 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.2.14.Final}
HHH000206: hibernate.properties not found
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@364f0314: startup date [Sat Mar 24 11:40:36 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/say]}" onto public java.lang.String com.jiemin.wages.controller.HelloController.sayHi()
Mapped "{[/findStaffs]}" onto public java.util.List<com.jiemin.wages.domain.Staff> com.jiemin.wages.controller.HelloController.findStaff()
Mapped "{[/findStaffsByPage]}" onto public com.jiemin.wages.domain.Result com.jiemin.wages.controller.HelloController.findStaffPage(java.lang.Integer,java.lang.Integer)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in exceptionHandle
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http) with context path ''
Started WagesApplication in 6.214 seconds (JVM running for 7.009)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 22 ms
===========开始请求com.jiemin.wages.controller.HelloController.findStaffPage============
===========请求时间:2018-03-24 11:40:46==========================
url=http://localhost:8088/findStaffsByPage
method=GET
ip=0:0:0:0:0:0:0:1
class_method=com.jiemin.wages.controller.HelloController.findStaffPage
args=1
HHH000397: Using ASTQueryTranslatorFactory
=============结束请求时间:2018-03-24 11:40:46======================
response=Result(code=200, msg=成功, data=[Staff(gid=13, userName=zhangsan, userSex=1, userTel=18888888888, emergencyName=lisi, emergencyTel=18888888889, bankCard=31231231231)], page=Pages(first=true, last=false, pageSize=null, pageNumber=null, totalCount=2, totalPage=2))
Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@364f0314: startup date [Sat Mar 24 11:40:36 CST 2018]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting WagesApplication on SKY-20171023NXB with PID 3468 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@11af03b6: startup date [Sat Mar 24 11:42:39 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b6df1f8b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 924 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@11af03b6: startup date [Sat Mar 24 11:42:39 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/say]}" onto public java.lang.String com.jiemin.wages.controller.HelloController.sayHi()
Mapped "{[/findStaffs]}" onto public java.util.List<com.jiemin.wages.domain.Staff> com.jiemin.wages.controller.HelloController.findStaff()
Mapped "{[/findStaffsByPage]}" onto public com.jiemin.wages.domain.Result com.jiemin.wages.controller.HelloController.findStaffPage(java.lang.Integer,java.lang.Integer)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in exceptionHandle
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http) with context path ''
Started WagesApplication in 2.178 seconds (JVM running for 126.931)
Condition evaluation unchanged
Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@11af03b6: startup date [Sat Mar 24 11:42:39 CST 2018]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting WagesApplication on SKY-20171023NXB with PID 3468 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@32543893: startup date [Sat Mar 24 11:42:44 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b6df1f8b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 771 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@32543893: startup date [Sat Mar 24 11:42:44 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/say]}" onto public java.lang.String com.jiemin.wages.controller.HelloController.sayHi()
Mapped "{[/findStaffs]}" onto public java.util.List<com.jiemin.wages.domain.Staff> com.jiemin.wages.controller.HelloController.findStaff()
Mapped "{[/findStaffsByPage]}" onto public com.jiemin.wages.domain.Result com.jiemin.wages.controller.HelloController.findStaffPage(java.lang.Integer,java.lang.Integer)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in exceptionHandle
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http) with context path ''
Started WagesApplication in 2.089 seconds (JVM running for 131.885)
Condition evaluation unchanged
Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@32543893: startup date [Sat Mar 24 11:42:44 CST 2018]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting WagesApplication on SKY-20171023NXB with PID 3468 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@b1c83a5: startup date [Sat Mar 24 11:42:49 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b6df1f8b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 767 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@b1c83a5: startup date [Sat Mar 24 11:42:49 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/say]}" onto public java.lang.String com.jiemin.wages.controller.HelloController.sayHi()
Mapped "{[/findStaffs]}" onto public java.util.List<com.jiemin.wages.domain.Staff> com.jiemin.wages.controller.HelloController.findStaff()
Mapped "{[/findStaffsByPage]}" onto public com.jiemin.wages.domain.Result com.jiemin.wages.controller.HelloController.findStaffPage(java.lang.Integer,java.lang.Integer)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in exceptionHandle
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http) with context path ''
Started WagesApplication in 1.929 seconds (JVM running for 136.669)
Condition evaluation unchanged
Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@b1c83a5: startup date [Sat Mar 24 11:42:49 CST 2018]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting WagesApplication on SKY-20171023NXB with PID 3468 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1d93726b: startup date [Sat Mar 24 11:43:11 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b6df1f8b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 559 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1d93726b: startup date [Sat Mar 24 11:43:11 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/say]}" onto public java.lang.String com.jiemin.wages.controller.HelloController.sayHi()
Mapped "{[/findStaffs]}" onto public java.util.List<com.jiemin.wages.domain.Staff> com.jiemin.wages.controller.HelloController.findStaff()
Mapped "{[/findStaffsByPage]}" onto public com.jiemin.wages.domain.Result com.jiemin.wages.controller.HelloController.findStaffPage(java.lang.Integer,java.lang.Integer)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in exceptionHandle
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http) with context path ''
Started WagesApplication in 1.681 seconds (JVM running for 158.255)
Condition evaluation unchanged
Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1d93726b: startup date [Sat Mar 24 11:43:11 CST 2018]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting WagesApplication on SKY-20171023NXB with PID 3468 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@20c8b124: startup date [Sat Mar 24 11:43:42 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b6df1f8b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 1055 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@20c8b124: startup date [Sat Mar 24 11:43:42 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in exceptionHandle
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http) with context path ''
Started WagesApplication in 2.274 seconds (JVM running for 190.007)
Condition evaluation unchanged
Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@20c8b124: startup date [Sat Mar 24 11:43:42 CST 2018]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting WagesApplication on SKY-20171023NXB with PID 3468 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@35305347: startup date [Sat Mar 24 11:43:53 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b6df1f8b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 733 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@35305347: startup date [Sat Mar 24 11:43:53 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/say]}" onto public java.lang.String com.jiemin.wages.controller.HelloController.sayHi()
Mapped "{[/findStaffs]}" onto public java.util.List<com.jiemin.wages.domain.Staff> com.jiemin.wages.controller.HelloController.findStaff()
Mapped "{[/findStaffsByPage]}" onto public com.jiemin.wages.domain.Result com.jiemin.wages.controller.HelloController.findStaffPage(java.lang.Integer,java.lang.Integer)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in exceptionHandle
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http) with context path ''
Started WagesApplication in 1.843 seconds (JVM running for 200.136)
Condition evaluation unchanged
Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@35305347: startup date [Sat Mar 24 11:43:53 CST 2018]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting WagesApplication on SKY-20171023NXB with PID 3468 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6cfae7db: startup date [Sat Mar 24 11:44:51 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b6df1f8b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 857 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6cfae7db: startup date [Sat Mar 24 11:44:51 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in exceptionHandle
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http) with context path ''
Started WagesApplication in 2.204 seconds (JVM running for 258.686)
Condition evaluation unchanged
Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6cfae7db: startup date [Sat Mar 24 11:44:51 CST 2018]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting WagesApplication on SKY-20171023NXB with PID 3468 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@557ff94: startup date [Sat Mar 24 11:45:12 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b6df1f8b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 836 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@557ff94: startup date [Sat Mar 24 11:45:12 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in exceptionHandle
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http) with context path ''
Started WagesApplication in 2.14 seconds (JVM running for 279.74)
Condition evaluation unchanged
Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@557ff94: startup date [Sat Mar 24 11:45:12 CST 2018]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting WagesApplication on SKY-20171023NXB with PID 3468 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5e67ff17: startup date [Sat Mar 24 11:45:16 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b6df1f8b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 858 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'exceptionHandle': Lookup method resolution failed; nested exception is java.lang.IllegalStateException: Failed to introspect Class [com.jiemin.wages.handle.ExceptionHandle] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@542a8dc5]
Closing JPA EntityManagerFactory for persistence unit 'default'
Stopping service [Tomcat]


Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
Starting WagesApplication on SKY-20171023NXB with PID 3468 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@14ce9d32: startup date [Sat Mar 24 11:45:22 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b6df1f8b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 601 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@14ce9d32: startup date [Sat Mar 24 11:45:22 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http) with context path ''
Started WagesApplication in 1.899 seconds (JVM running for 289.24)
Condition evaluation unchanged
Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@14ce9d32: startup date [Sat Mar 24 11:45:22 CST 2018]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting WagesApplication on SKY-20171023NXB with PID 3468 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@304064ff: startup date [Sat Mar 24 11:45:48 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b6df1f8b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 619 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@304064ff: startup date [Sat Mar 24 11:45:48 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/say]}" onto public java.lang.String com.jiemin.wages.controller.HelloController.sayHi()
Mapped "{[/findStaffs]}" onto public java.util.List<com.jiemin.wages.domain.Staff> com.jiemin.wages.controller.HelloController.findStaff()
Mapped "{[/findStaffsByPage]}" onto public com.jiemin.wages.domain.Result com.jiemin.wages.controller.HelloController.findStaffPage(java.lang.Integer,java.lang.Integer)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in exceptionHandle
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http) with context path ''
Started WagesApplication in 1.709 seconds (JVM running for 315.087)
Condition evaluation unchanged
Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@304064ff: startup date [Sat Mar 24 11:45:48 CST 2018]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting WagesApplication on SKY-20171023NXB with PID 3468 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3ee7272e: startup date [Sat Mar 24 11:45:52 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b6df1f8b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 681 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3ee7272e: startup date [Sat Mar 24 11:45:52 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/say]}" onto public java.lang.String com.jiemin.wages.controller.HelloController.sayHi()
Mapped "{[/findStaffs]}" onto public java.util.List<com.jiemin.wages.domain.Staff> com.jiemin.wages.controller.HelloController.findStaff()
Mapped "{[/findStaffsByPage]}" onto public com.jiemin.wages.domain.Result com.jiemin.wages.controller.HelloController.findStaffPage(java.lang.Integer,java.lang.Integer)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in exceptionHandle
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http) with context path ''
Started WagesApplication in 2.38 seconds (JVM running for 319.738)
Condition evaluation unchanged
Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3ee7272e: startup date [Sat Mar 24 11:45:52 CST 2018]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting WagesApplication on SKY-20171023NXB with PID 3468 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2d798bb8: startup date [Sat Mar 24 11:46:04 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b6df1f8b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 713 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2d798bb8: startup date [Sat Mar 24 11:46:04 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/say]}" onto public java.lang.String com.jiemin.wages.controller.HelloController.sayHi()
Mapped "{[/findStaffs]}" onto public java.util.List<com.jiemin.wages.domain.Staff> com.jiemin.wages.controller.HelloController.findStaff()
Mapped "{[/findStaffsByPage]}" onto public com.jiemin.wages.domain.Result com.jiemin.wages.controller.HelloController.findStaffPage(java.lang.Integer,java.lang.Integer)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in exceptionHandle
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http) with context path ''
Started WagesApplication in 2.173 seconds (JVM running for 331.212)
Condition evaluation unchanged
Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2d798bb8: startup date [Sat Mar 24 11:46:04 CST 2018]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting WagesApplication on SKY-20171023NXB with PID 3468 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@33687e4f: startup date [Sat Mar 24 11:46:27 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b6df1f8b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 707 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@33687e4f: startup date [Sat Mar 24 11:46:27 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/say]}" onto public java.lang.String com.jiemin.wages.controller.HelloController.sayHi()
Mapped "{[/findStaffs]}" onto public java.util.List<com.jiemin.wages.domain.Staff> com.jiemin.wages.controller.HelloController.findStaff()
Mapped "{[/findStaffsByPage]}" onto public com.jiemin.wages.domain.Result com.jiemin.wages.controller.HelloController.findStaffPage(java.lang.Integer,java.lang.Integer)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in exceptionHandle
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http) with context path ''
Started WagesApplication in 1.817 seconds (JVM running for 354.274)
Condition evaluation unchanged
Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@33687e4f: startup date [Sat Mar 24 11:46:27 CST 2018]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting WagesApplication on SKY-20171023NXB with PID 3468 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@8658ffe: startup date [Sat Mar 24 11:50:53 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b6df1f8b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 662 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@8658ffe: startup date [Sat Mar 24 11:50:53 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/say]}" onto public java.lang.String com.jiemin.wages.controller.HelloController.sayHi()
Mapped "{[/findStaffs]}" onto public java.util.List<com.jiemin.wages.domain.Staff> com.jiemin.wages.controller.HelloController.findStaff()
Mapped "{[/findStaffsByPage]}" onto public com.jiemin.wages.domain.Result com.jiemin.wages.controller.HelloController.findStaffPage(java.lang.Integer,java.lang.Integer)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in exceptionHandle
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http) with context path ''
Started WagesApplication in 2.031 seconds (JVM running for 620.586)
Condition evaluation unchanged
Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@8658ffe: startup date [Sat Mar 24 11:50:53 CST 2018]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting WagesApplication on SKY-20171023NXB with PID 3468 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7685d140: startup date [Sat Mar 24 11:51:07 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b6df1f8b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 767 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7685d140: startup date [Sat Mar 24 11:51:07 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/say]}" onto public java.lang.String com.jiemin.wages.controller.HelloController.sayHi()
Mapped "{[/findStaffs]}" onto public java.util.List<com.jiemin.wages.domain.Staff> com.jiemin.wages.controller.HelloController.findStaff()
Mapped "{[/findStaffsByPage]}" onto public com.jiemin.wages.domain.Result com.jiemin.wages.controller.HelloController.findStaffPage(java.lang.Integer,java.lang.Integer)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in exceptionHandle
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http) with context path ''
Started WagesApplication in 2.392 seconds (JVM running for 634.958)
Condition evaluation unchanged
Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7685d140: startup date [Sat Mar 24 11:51:07 CST 2018]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting WagesApplication on SKY-20171023NXB with PID 3468 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1a3fef64: startup date [Sat Mar 24 11:51:12 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b6df1f8b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 560 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1a3fef64: startup date [Sat Mar 24 11:51:12 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/say]}" onto public java.lang.String com.jiemin.wages.controller.HelloController.sayHi()
Mapped "{[/findStaffs]}" onto public java.util.List<com.jiemin.wages.domain.Staff> com.jiemin.wages.controller.HelloController.findStaff()
Mapped "{[/findStaffsByPage]}" onto public com.jiemin.wages.domain.Result com.jiemin.wages.controller.HelloController.findStaffPage(java.lang.Integer,java.lang.Integer)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in exceptionHandle
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http) with context path ''
Started WagesApplication in 2.265 seconds (JVM running for 640.051)
Condition evaluation unchanged
Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1a3fef64: startup date [Sat Mar 24 11:51:12 CST 2018]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting WagesApplication on SKY-20171023NXB with PID 3468 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3f3ee750: startup date [Sat Mar 24 11:51:17 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b6df1f8b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 641 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3f3ee750: startup date [Sat Mar 24 11:51:17 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/say]}" onto public java.lang.String com.jiemin.wages.controller.HelloController.sayHi()
Mapped "{[/findStaffs]}" onto public java.util.List<com.jiemin.wages.domain.Staff> com.jiemin.wages.controller.HelloController.findStaff()
Mapped "{[/findStaffsByPage]}" onto public com.jiemin.wages.domain.Result com.jiemin.wages.controller.HelloController.findStaffPage(java.lang.Integer,java.lang.Integer)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in exceptionHandle
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http) with context path ''
Started WagesApplication in 1.816 seconds (JVM running for 644.603)
Condition evaluation unchanged
Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3f3ee750: startup date [Sat Mar 24 11:51:17 CST 2018]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting WagesApplication on SKY-20171023NXB with PID 3468 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@13adb910: startup date [Sat Mar 24 11:51:40 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b6df1f8b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 670 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@13adb910: startup date [Sat Mar 24 11:51:40 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/say]}" onto public java.lang.String com.jiemin.wages.controller.HelloController.sayHi()
Mapped "{[/findStaffs]}" onto public java.util.List<com.jiemin.wages.domain.Staff> com.jiemin.wages.controller.HelloController.findStaff()
Mapped "{[/findStaffsByPage]}" onto public com.jiemin.wages.domain.Result com.jiemin.wages.controller.HelloController.findStaffPage(java.lang.Integer,java.lang.Integer)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in exceptionHandle
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http) with context path ''
Started WagesApplication in 2.284 seconds (JVM running for 667.913)
Condition evaluation unchanged
Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@13adb910: startup date [Sat Mar 24 11:51:40 CST 2018]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting WagesApplication on SKY-20171023NXB with PID 3468 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@68692046: startup date [Sat Mar 24 11:51:44 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b6df1f8b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 625 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@68692046: startup date [Sat Mar 24 11:51:44 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/say]}" onto public java.lang.String com.jiemin.wages.controller.HelloController.sayHi()
Mapped "{[/findStaffs]}" onto public java.util.List<com.jiemin.wages.domain.Staff> com.jiemin.wages.controller.HelloController.findStaff()
Mapped "{[/findStaffsByPage]}" onto public com.jiemin.wages.domain.Result com.jiemin.wages.controller.HelloController.findStaffPage(java.lang.Integer,java.lang.Integer)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in exceptionHandle
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http) with context path ''
Started WagesApplication in 2.018 seconds (JVM running for 671.633)
Condition evaluation unchanged
Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@68692046: startup date [Sat Mar 24 11:51:44 CST 2018]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting WagesApplication on SKY-20171023NXB with PID 3468 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@55662011: startup date [Sat Mar 24 11:51:50 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b6df1f8b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 879 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@55662011: startup date [Sat Mar 24 11:51:50 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/say]}" onto public java.lang.String com.jiemin.wages.controller.HelloController.sayHi()
Mapped "{[/findStaffs]}" onto public java.util.List<com.jiemin.wages.domain.Staff> com.jiemin.wages.controller.HelloController.findStaff()
Mapped "{[/findStaffsByPage]}" onto public com.jiemin.wages.domain.Result com.jiemin.wages.controller.HelloController.findStaffPage(java.lang.Integer,java.lang.Integer)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in exceptionHandle
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http) with context path ''
Started WagesApplication in 1.999 seconds (JVM running for 677.895)
Condition evaluation unchanged
Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@55662011: startup date [Sat Mar 24 11:51:50 CST 2018]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting WagesApplication on SKY-20171023NXB with PID 3468 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@43911886: startup date [Sat Mar 24 11:52:01 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b6df1f8b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 836 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@43911886: startup date [Sat Mar 24 11:52:01 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/say]}" onto public java.lang.String com.jiemin.wages.controller.HelloController.sayHi()
Mapped "{[/findStaffs]}" onto public java.util.List<com.jiemin.wages.domain.Staff> com.jiemin.wages.controller.HelloController.findStaff()
Mapped "{[/findStaffsByPage]}" onto public com.jiemin.wages.domain.Result com.jiemin.wages.controller.HelloController.findStaffPage(java.lang.Integer,java.lang.Integer)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in exceptionHandle
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http) with context path ''
Started WagesApplication in 2.454 seconds (JVM running for 688.475)
Condition evaluation unchanged
Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@43911886: startup date [Sat Mar 24 11:52:01 CST 2018]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting WagesApplication on SKY-20171023NXB with PID 3468 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@79281792: startup date [Sat Mar 24 11:52:18 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b6df1f8b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 683 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@79281792: startup date [Sat Mar 24 11:52:18 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/say]}" onto public java.lang.String com.jiemin.wages.controller.HelloController.sayHi()
Mapped "{[/findStaffs]}" onto public java.util.List<com.jiemin.wages.domain.Staff> com.jiemin.wages.controller.HelloController.findStaff()
Mapped "{[/findStaffsByPage]}" onto public com.jiemin.wages.domain.Result com.jiemin.wages.controller.HelloController.findStaffPage(java.lang.Integer,java.lang.Integer)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in exceptionHandle
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http) with context path ''
Started WagesApplication in 2.022 seconds (JVM running for 705.07)
Condition evaluation unchanged
Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@79281792: startup date [Sat Mar 24 11:52:18 CST 2018]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting WagesApplication on SKY-20171023NXB with PID 3468 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2ed35e8a: startup date [Sat Mar 24 11:52:43 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b6df1f8b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 799 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2ed35e8a: startup date [Sat Mar 24 11:52:43 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in exceptionHandle
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http) with context path ''
Started WagesApplication in 2.468 seconds (JVM running for 730.72)
Condition evaluation unchanged
Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2ed35e8a: startup date [Sat Mar 24 11:52:43 CST 2018]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting WagesApplication on SKY-20171023NXB with PID 3468 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5a07ffa6: startup date [Sat Mar 24 11:52:50 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b6df1f8b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 670 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5a07ffa6: startup date [Sat Mar 24 11:52:50 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/say]}" onto public java.lang.String com.jiemin.wages.controller.HelloController.sayHi()
Mapped "{[/findStaffs]}" onto public java.util.List<com.jiemin.wages.domain.Staff> com.jiemin.wages.controller.HelloController.findStaff()
Mapped "{[/findStaffsByPage]}" onto public com.jiemin.wages.domain.Result com.jiemin.wages.controller.HelloController.findStaffPage(java.lang.Integer,java.lang.Integer)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in exceptionHandle
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http) with context path ''
Started WagesApplication in 2.263 seconds (JVM running for 737.992)
Condition evaluation unchanged
Starting WagesApplication on SKY-20171023NXB with PID 8676 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6b723556: startup date [Sat Mar 24 11:53:32 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$24443a2b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_131\bin;D:\java\apache-maven-3.5.2\bin;C:\Program Files (x86)\Git\cmd;%ZOOKEEPER_HOME%\bin;.]
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 2127 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.2.14.Final}
HHH000206: hibernate.properties not found
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6b723556: startup date [Sat Mar 24 11:53:32 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/findStaffs]}" onto public java.util.List<com.jiemin.wages.domain.Staff> com.jiemin.wages.controller.HelloController.findStaff()
Mapped "{[/say]}" onto public java.lang.String com.jiemin.wages.controller.HelloController.sayHi()
Mapped "{[/findStaffsByPage]}" onto public com.jiemin.wages.domain.Result com.jiemin.wages.controller.HelloController.findStaffPage(java.lang.Integer,java.lang.Integer)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in exceptionHandle
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http) with context path ''
Started WagesApplication in 6.248 seconds (JVM running for 7.006)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 23 ms
===========开始请求com.jiemin.wages.controller.HelloController.findStaffPage============
===========请求时间:2018-03-24 11:53:43==========================
url=http://localhost:8088/findStaffsByPage
method=GET
ip=0:0:0:0:0:0:0:1
class_method=com.jiemin.wages.controller.HelloController.findStaffPage
args=1
HHH000397: Using ASTQueryTranslatorFactory
=============结束请求时间:2018-03-24 11:53:43======================
response=Result(code=200, msg=成功, data=[Staff(gid=13, userName=zhangsan, userSex=1, userTel=18888888888, emergencyName=lisi, emergencyTel=18888888889, bankCard=31231231231)], page=Pages(first=true, last=false, pageSize=null, pageNumber=null, totalCount=2, totalPage=2))
Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6b723556: startup date [Sat Mar 24 11:53:32 CST 2018]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting WagesApplication on SKY-20171023NXB with PID 8676 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4fc9df3d: startup date [Sat Mar 24 12:24:21 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$24443a2b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 716 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4fc9df3d: startup date [Sat Mar 24 12:24:21 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in exceptionHandle
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http) with context path ''
Started WagesApplication in 2.716 seconds (JVM running for 1853.047)
Condition evaluation unchanged
Starting WagesApplication on SKY-20171023NXB with PID 424 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@71b667fc: startup date [Sat Mar 24 12:58:20 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$66bc28e5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_131\bin;D:\java\apache-maven-3.5.2\bin;C:\Program Files (x86)\Git\cmd;%ZOOKEEPER_HOME%\bin;.]
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 2216 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.2.14.Final}
HHH000206: hibernate.properties not found
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@71b667fc: startup date [Sat Mar 24 12:58:20 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/findStaffsByPage]}" onto public com.jiemin.wages.domain.Result com.jiemin.wages.controller.HelloController.findStaffPage(java.lang.Integer,java.lang.Integer)
Mapped "{[/findStaffs]}" onto public java.util.List<com.jiemin.wages.domain.Staff> com.jiemin.wages.controller.HelloController.findStaff()
Mapped "{[/say]}" onto public java.lang.String com.jiemin.wages.controller.HelloController.sayHi()
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in exceptionHandle
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http) with context path ''
Started WagesApplication in 6.294 seconds (JVM running for 7.155)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 20 ms
===========开始请求com.jiemin.wages.controller.HelloController.findStaffPage============
===========请求时间:2018-03-24 12:58:31==========================
url=http://localhost:8088/findStaffsByPage
method=GET
ip=0:0:0:0:0:0:0:1
class_method=com.jiemin.wages.controller.HelloController.findStaffPage
args=1
HHH000397: Using ASTQueryTranslatorFactory
=============结束请求时间:2018-03-24 12:58:31======================
response=Result(code=200, msg=成功, data=[Staff(gid=13, userName=zhangsan, userSex=1, userTel=18888888888, emergencyName=lisi, emergencyTel=18888888889, bankCard=31231231231)], page=Pages(first=true, last=false, pageSize=1, pageNumber=1, totalCount=2, totalPage=2))
===========开始请求com.jiemin.wages.controller.HelloController.findStaffPage============
===========请求时间:2018-03-24 12:58:38==========================
url=http://localhost:8088/findStaffsByPage
method=GET
ip=0:0:0:0:0:0:0:1
class_method=com.jiemin.wages.controller.HelloController.findStaffPage
args=1
=============结束请求时间:2018-03-24 12:58:38======================
response=Result(code=200, msg=成功, data=[Staff(gid=13, userName=zhangsan, userSex=1, userTel=18888888888, emergencyName=lisi, emergencyTel=18888888889, bankCard=31231231231), Staff(gid=12, userName=zhangsan, userSex=1, userTel=18888888888, emergencyName=lisi, emergencyTel=18888888889, bankCard=31231231231)], page=Pages(first=true, last=true, pageSize=2, pageNumber=1, totalCount=2, totalPage=1))
Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@71b667fc: startup date [Sat Mar 24 12:58:20 CST 2018]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting WagesApplication on SKY-20171023NXB with PID 424 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1e6d48b2: startup date [Sat Mar 24 13:37:47 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$66bc28e5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 756 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1e6d48b2: startup date [Sat Mar 24 13:37:47 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/findStaffsByPage]}" onto public com.jiemin.wages.domain.Result com.jiemin.wages.controller.HelloController.findStaffPage(java.lang.Integer,java.lang.Integer)
Mapped "{[/say]}" onto public java.lang.String com.jiemin.wages.controller.HelloController.sayHi()
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in exceptionHandle
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http) with context path ''
Started WagesApplication in 2.385 seconds (JVM running for 2370.455)
Condition evaluation unchanged
Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1e6d48b2: startup date [Sat Mar 24 13:37:47 CST 2018]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting WagesApplication on SKY-20171023NXB with PID 424 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@34945120: startup date [Sat Mar 24 13:43:27 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$66bc28e5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 675 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@34945120: startup date [Sat Mar 24 13:43:27 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/say]}" onto public java.lang.String com.jiemin.wages.controller.HelloController.sayHi()
Mapped "{[/findStaffsByPage]}" onto public com.jiemin.wages.domain.Result com.jiemin.wages.controller.HelloController.findStaffByPage(java.lang.Integer,java.lang.Integer)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in exceptionHandle
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http) with context path ''
Started WagesApplication in 2.051 seconds (JVM running for 2710.425)
Condition evaluation unchanged
Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@34945120: startup date [Sat Mar 24 13:43:27 CST 2018]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting WagesApplication on SKY-20171023NXB with PID 424 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@55b8fa14: startup date [Sat Mar 24 13:51:44 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$66bc28e5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 690 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@55b8fa14: startup date [Sat Mar 24 13:51:44 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/say]}" onto public java.lang.String com.jiemin.wages.controller.HelloController.sayHi()
Mapped "{[/findStaffsByPage]}" onto public com.jiemin.wages.domain.Result com.jiemin.wages.controller.HelloController.findStaffByPage(java.lang.Integer,java.lang.Integer,java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in exceptionHandle
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http) with context path ''
Started WagesApplication in 2.347 seconds (JVM running for 3206.896)
Condition evaluation unchanged
Starting WagesApplication on SKY-20171023NXB with PID 6584 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7e557c50: startup date [Sat Mar 24 13:55:17 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$21e7b291] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_131\bin;D:\java\apache-maven-3.5.2\bin;C:\Program Files (x86)\Git\cmd;%ZOOKEEPER_HOME%\bin;.]
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 2094 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.2.14.Final}
HHH000206: hibernate.properties not found
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'helloController': Unsatisfied dependency expressed through field 'staffRepository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'staffRepository': Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract org.springframework.data.domain.Page com.jiemin.wages.domain.StaffRepository.queryByStaffNameLike(java.lang.String,org.springframework.data.domain.Pageable)! No property staffName found for type Staff!
Closing JPA EntityManagerFactory for persistence unit 'default'
Stopping service [Tomcat]


Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
Starting WagesApplication on SKY-20171023NXB with PID 9936 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7ca8e787: startup date [Sat Mar 24 13:56:42 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$88880535] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_131\bin;D:\java\apache-maven-3.5.2\bin;C:\Program Files (x86)\Git\cmd;%ZOOKEEPER_HOME%\bin;.]
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 2078 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.2.14.Final}
HHH000206: hibernate.properties not found
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7ca8e787: startup date [Sat Mar 24 13:56:42 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/say]}" onto public java.lang.String com.jiemin.wages.controller.HelloController.sayHi()
Mapped "{[/findStaffsByPage]}" onto public com.jiemin.wages.domain.Result com.jiemin.wages.controller.HelloController.findStaffByPage(java.lang.Integer,java.lang.Integer,java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in exceptionHandle
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http) with context path ''
Started WagesApplication in 6.151 seconds (JVM running for 6.933)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 26 ms
===========开始请求com.jiemin.wages.controller.HelloController.findStaffByPage============
===========请求时间:2018-03-24 13:56:52==========================
url=http://localhost:8088/findStaffsByPage
method=GET
ip=0:0:0:0:0:0:0:1
class_method=com.jiemin.wages.controller.HelloController.findStaffByPage
args=1
HHH000397: Using ASTQueryTranslatorFactory
=============结束请求时间:2018-03-24 13:56:52======================
Resolved exception caused by Handler execution: org.springframework.dao.InvalidDataAccessApiUsageException: Value must not be null!; nested exception is java.lang.IllegalArgumentException: Value must not be null!
===========开始请求com.jiemin.wages.controller.HelloController.findStaffByPage============
===========请求时间:2018-03-24 13:57:16==========================
url=http://localhost:8088/findStaffsByPage
method=GET
ip=0:0:0:0:0:0:0:1
class_method=com.jiemin.wages.controller.HelloController.findStaffByPage
args=1
=============结束请求时间:2018-03-24 13:57:16======================
response=Result(code=200, msg=成功, data=[], page=Pages(first=true, last=true, pageSize=2, pageNumber=1, totalCount=0, totalPage=0))
===========开始请求com.jiemin.wages.controller.HelloController.findStaffByPage============
===========请求时间:2018-03-24 14:08:54==========================
url=http://localhost:8088/findStaffsByPage
method=GET
ip=0:0:0:0:0:0:0:1
class_method=com.jiemin.wages.controller.HelloController.findStaffByPage
args=1
=============结束请求时间:2018-03-24 14:08:54======================
response=Result(code=200, msg=成功, data=[], page=Pages(first=true, last=true, pageSize=2, pageNumber=1, totalCount=0, totalPage=0))
===========开始请求com.jiemin.wages.controller.HelloController.findStaffByPage============
===========请求时间:2018-03-24 14:08:59==========================
url=http://localhost:8088/findStaffsByPage
method=GET
ip=0:0:0:0:0:0:0:1
class_method=com.jiemin.wages.controller.HelloController.findStaffByPage
args=1
=============结束请求时间:2018-03-24 14:08:59======================
response=Result(code=200, msg=成功, data=[], page=Pages(first=true, last=true, pageSize=2, pageNumber=1, totalCount=0, totalPage=0))
===========开始请求com.jiemin.wages.controller.HelloController.findStaffByPage============
===========请求时间:2018-03-24 14:10:43==========================
url=http://localhost:8088/findStaffsByPage
method=GET
ip=0:0:0:0:0:0:0:1
class_method=com.jiemin.wages.controller.HelloController.findStaffByPage
args=1
=============结束请求时间:2018-03-24 14:10:43======================
response=Result(code=200, msg=成功, data=[], page=Pages(first=true, last=true, pageSize=1, pageNumber=1, totalCount=0, totalPage=0))
Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7ca8e787: startup date [Sat Mar 24 13:56:42 CST 2018]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting WagesApplication on SKY-20171023NXB with PID 9936 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5a4ee907: startup date [Sat Mar 24 14:11:38 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$88880535] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 688 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5a4ee907: startup date [Sat Mar 24 14:11:38 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in exceptionHandle
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http) with context path ''
Started WagesApplication in 2.203 seconds (JVM running for 899.754)
Condition evaluation unchanged
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 6 ms
Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5a4ee907: startup date [Sat Mar 24 14:11:38 CST 2018]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting WagesApplication on SKY-20171023NXB with PID 9936 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7568c5d1: startup date [Sat Mar 24 14:11:53 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$88880535] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 777 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7568c5d1: startup date [Sat Mar 24 14:11:53 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in exceptionHandle
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http) with context path ''
Started WagesApplication in 2.619 seconds (JVM running for 914.857)
Condition evaluation unchanged
Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7568c5d1: startup date [Sat Mar 24 14:11:53 CST 2018]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting WagesApplication on SKY-20171023NXB with PID 9936 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2c0b1199: startup date [Sat Mar 24 14:12:03 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$88880535] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 590 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2c0b1199: startup date [Sat Mar 24 14:12:03 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/say]}" onto public java.lang.String com.jiemin.wages.controller.HelloController.sayHi()
Mapped "{[/findStaffsByPage]}" onto public com.jiemin.wages.domain.Result com.jiemin.wages.controller.HelloController.findStaffByPage(java.lang.Integer,java.lang.Integer,java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in exceptionHandle
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http) with context path ''
Started WagesApplication in 1.721 seconds (JVM running for 923.659)
Condition evaluation unchanged
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 7 ms
===========开始请求com.jiemin.wages.controller.HelloController.findStaffByPage============
===========请求时间:2018-03-24 14:12:09==========================
url=http://localhost:8088/findStaffsByPage
method=GET
ip=0:0:0:0:0:0:0:1
class_method=com.jiemin.wages.controller.HelloController.findStaffByPage
args=1
HHH000397: Using ASTQueryTranslatorFactory
=============结束请求时间:2018-03-24 14:12:09======================
response=Result(code=200, msg=成功, data=[], page=Pages(first=true, last=true, pageSize=1, pageNumber=1, totalCount=0, totalPage=0))
===========开始请求com.jiemin.wages.controller.HelloController.findStaffByPage============
===========请求时间:2018-03-24 14:12:40==========================
url=http://localhost:8088/findStaffsByPage
method=GET
ip=0:0:0:0:0:0:0:1
class_method=com.jiemin.wages.controller.HelloController.findStaffByPage
args=1
=============结束请求时间:2018-03-24 14:12:40======================
response=Result(code=200, msg=成功, data=[Staff(gid=13, userName=lisi, userSex=1, userTel=18888888888, emergencyName=lisi, emergencyTel=18888888889, bankCard=31231231231)], page=Pages(first=true, last=true, pageSize=1, pageNumber=1, totalCount=1, totalPage=1))
Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2c0b1199: startup date [Sat Mar 24 14:12:03 CST 2018]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting WagesApplication on SKY-20171023NXB with PID 9936 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@523d325b: startup date [Sat Mar 24 14:16:29 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$88880535] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 811 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@523d325b: startup date [Sat Mar 24 14:16:29 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in exceptionHandle
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http) with context path ''
Started WagesApplication in 2.03 seconds (JVM running for 1190.376)
Condition evaluation unchanged
Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@523d325b: startup date [Sat Mar 24 14:16:29 CST 2018]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting WagesApplication on SKY-20171023NXB with PID 9936 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7a02d6d5: startup date [Sat Mar 24 14:16:35 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$88880535] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 723 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7a02d6d5: startup date [Sat Mar 24 14:16:35 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/say]}" onto public java.lang.String com.jiemin.wages.controller.HelloController.sayHi()
Mapped "{[/findStaffsByPage]}" onto public com.jiemin.wages.domain.Result com.jiemin.wages.controller.HelloController.findStaffByPage(java.lang.Integer,java.lang.Integer,java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in exceptionHandle
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http) with context path ''
Started WagesApplication in 2.082 seconds (JVM running for 1196.325)
Condition evaluation unchanged
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 7 ms
===========开始请求com.jiemin.wages.controller.HelloController.findStaffByPage============
===========请求时间:2018-03-24 14:16:45==========================
url=http://localhost:8088/findStaffsByPage
method=GET
ip=0:0:0:0:0:0:0:1
class_method=com.jiemin.wages.controller.HelloController.findStaffByPage
args=1
=============结束请求时间:2018-03-24 14:16:45======================
Resolved exception caused by Handler execution: java.util.NoSuchElementException
Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7a02d6d5: startup date [Sat Mar 24 14:16:35 CST 2018]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting WagesApplication on SKY-20171023NXB with PID 9936 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@35258f11: startup date [Sat Mar 24 14:17:04 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Starting WagesApplication on SKY-20171023NXB with PID 9656 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3cb332da: startup date [Sat Mar 24 14:17:15 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$6a1aa459] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_131\bin;D:\java\apache-maven-3.5.2\bin;C:\Program Files (x86)\Git\cmd;%ZOOKEEPER_HOME%\bin;.]
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 2084 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.2.14.Final}
HHH000206: hibernate.properties not found
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3cb332da: startup date [Sat Mar 24 14:17:15 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/say]}" onto public java.lang.String com.jiemin.wages.controller.HelloController.sayHi()
Mapped "{[/findStaffsByPage]}" onto public com.jiemin.wages.domain.Result com.jiemin.wages.controller.HelloController.findStaffByPage(java.lang.Integer,java.lang.Integer,java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in exceptionHandle
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http) with context path ''
Started WagesApplication in 6.187 seconds (JVM running for 6.963)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 27 ms
===========开始请求com.jiemin.wages.controller.HelloController.findStaffByPage============
===========请求时间:2018-03-24 14:17:25==========================
url=http://localhost:8088/findStaffsByPage
method=GET
ip=0:0:0:0:0:0:0:1
class_method=com.jiemin.wages.controller.HelloController.findStaffByPage
args=1
HHH000397: Using ASTQueryTranslatorFactory
=============结束请求时间:2018-03-24 14:17:25======================
response=Result(code=200, msg=成功, data=[Staff(gid=12, userName=zhangsan, userSex=1, userTel=18888888888, emergencyName=lisi, emergencyTel=18888888889, bankCard=31231231231)], page=Pages(first=true, last=true, pageSize=1, pageNumber=1, totalCount=1, totalPage=1))
===========开始请求com.jiemin.wages.controller.HelloController.findStaffByPage============
===========请求时间:2018-03-24 14:17:41==========================
url=http://localhost:8088/findStaffsByPage
method=GET
ip=0:0:0:0:0:0:0:1
class_method=com.jiemin.wages.controller.HelloController.findStaffByPage
args=1
=============结束请求时间:2018-03-24 14:17:41======================
response=Result(code=200, msg=成功, data=[Staff(gid=13, userName=lisi, userSex=1, userTel=18888888888, emergencyName=lisi, emergencyTel=18888888889, bankCard=31231231231)], page=Pages(first=true, last=true, pageSize=1, pageNumber=1, totalCount=1, totalPage=1))
===========开始请求com.jiemin.wages.controller.HelloController.findStaffByPage============
===========请求时间:2018-03-24 14:18:11==========================
url=http://localhost:8088/findStaffsByPage
method=GET
ip=0:0:0:0:0:0:0:1
class_method=com.jiemin.wages.controller.HelloController.findStaffByPage
args=1
=============结束请求时间:2018-03-24 14:18:11======================
Resolved exception caused by Handler execution: org.springframework.dao.InvalidDataAccessApiUsageException: Value must not be null!; nested exception is java.lang.IllegalArgumentException: Value must not be null!
Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3cb332da: startup date [Sat Mar 24 14:17:15 CST 2018]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting WagesApplication on SKY-20171023NXB with PID 9656 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1879f26e: startup date [Sat Mar 24 14:18:50 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$6a1aa459] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 782 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'helloController' defined in file [D:\project\project\wages\target\classes\com\jiemin\wages\controller\HelloController.class]: Post-processing of merged bean definition failed; nested exception is java.lang.IllegalStateException: Failed to introspect Class [com.jiemin.wages.controller.HelloController] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@2df4bd9d]
Closing JPA EntityManagerFactory for persistence unit 'default'
Stopping service [Tomcat]


Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
Starting WagesApplication on SKY-20171023NXB with PID 9656 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@434c0811: startup date [Sat Mar 24 14:18:55 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$6a1aa459] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 884 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@434c0811: startup date [Sat Mar 24 14:18:55 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/say]}" onto public java.lang.String com.jiemin.wages.controller.HelloController.sayHi()
Mapped "{[/findStaffsByPage]}" onto public com.jiemin.wages.domain.Result com.jiemin.wages.controller.HelloController.findStaffByPage(java.lang.Integer,java.lang.Integer,java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in exceptionHandle
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http) with context path ''
Started WagesApplication in 2.565 seconds (JVM running for 104.547)
Condition evaluation unchanged
Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@434c0811: startup date [Sat Mar 24 14:18:55 CST 2018]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting WagesApplication on SKY-20171023NXB with PID 9656 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@432bceba: startup date [Sat Mar 24 14:19:06 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$6a1aa459] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 622 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@432bceba: startup date [Sat Mar 24 14:19:06 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/say]}" onto public java.lang.String com.jiemin.wages.controller.HelloController.sayHi()
Mapped "{[/findStaffsByPage]}" onto public com.jiemin.wages.domain.Result com.jiemin.wages.controller.HelloController.findStaffByPage(java.lang.Integer,java.lang.Integer,java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in exceptionHandle
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http) with context path ''
Started WagesApplication in 1.908 seconds (JVM running for 114.725)
Condition evaluation unchanged
Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@432bceba: startup date [Sat Mar 24 14:19:06 CST 2018]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting WagesApplication on SKY-20171023NXB with PID 9656 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1cc7f5d0: startup date [Sat Mar 24 14:19:46 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$6a1aa459] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 619 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1cc7f5d0: startup date [Sat Mar 24 14:19:46 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/say]}" onto public java.lang.String com.jiemin.wages.controller.HelloController.sayHi()
Mapped "{[/findStaffsByPage]}" onto public com.jiemin.wages.domain.Result com.jiemin.wages.controller.HelloController.findStaffByPage(java.lang.Integer,java.lang.Integer,java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in exceptionHandle
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http) with context path ''
Started WagesApplication in 1.724 seconds (JVM running for 154.658)
Condition evaluation unchanged
Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1cc7f5d0: startup date [Sat Mar 24 14:19:46 CST 2018]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting WagesApplication on SKY-20171023NXB with PID 9656 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5946e202: startup date [Sat Mar 24 14:19:54 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$6a1aa459] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 608 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5946e202: startup date [Sat Mar 24 14:19:54 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/say]}" onto public java.lang.String com.jiemin.wages.controller.HelloController.sayHi()
Mapped "{[/findStaffsByPage]}" onto public com.jiemin.wages.domain.Result com.jiemin.wages.controller.HelloController.findStaffByPage(java.lang.Integer,java.lang.Integer,java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in exceptionHandle
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http) with context path ''
Started WagesApplication in 2.075 seconds (JVM running for 162.784)
Condition evaluation unchanged
Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5946e202: startup date [Sat Mar 24 14:19:54 CST 2018]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting WagesApplication on SKY-20171023NXB with PID 9656 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@32f2037d: startup date [Sat Mar 24 14:20:26 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$6a1aa459] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 800 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@32f2037d: startup date [Sat Mar 24 14:20:26 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/say]}" onto public java.lang.String com.jiemin.wages.controller.HelloController.sayHi()
Mapped "{[/findStaffsByPage]}" onto public com.jiemin.wages.domain.Result com.jiemin.wages.controller.HelloController.findStaffByPage(java.lang.Integer,java.lang.Integer,java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in exceptionHandle
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http) with context path ''
Started WagesApplication in 2.429 seconds (JVM running for 194.683)
Condition evaluation unchanged
Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@32f2037d: startup date [Sat Mar 24 14:20:26 CST 2018]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting WagesApplication on SKY-20171023NXB with PID 9656 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1d63b61: startup date [Sat Mar 24 14:22:25 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$6a1aa459] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 772 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1d63b61: startup date [Sat Mar 24 14:22:25 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/say]}" onto public java.lang.String com.jiemin.wages.controller.HelloController.sayHi()
Mapped "{[/findStaffsByPage]}" onto public com.jiemin.wages.domain.Result com.jiemin.wages.controller.HelloController.findStaffByPage(java.lang.Integer,java.lang.Integer,java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in exceptionHandle
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http) with context path ''
Started WagesApplication in 1.907 seconds (JVM running for 313.5)
Condition evaluation unchanged
Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1d63b61: startup date [Sat Mar 24 14:22:25 CST 2018]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting WagesApplication on SKY-20171023NXB with PID 9656 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@424c3cf7: startup date [Sat Mar 24 14:22:36 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$6a1aa459] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 908 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@424c3cf7: startup date [Sat Mar 24 14:22:36 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in exceptionHandle
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http) with context path ''
Started WagesApplication in 3.405 seconds (JVM running for 326.141)
Condition evaluation unchanged
Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@424c3cf7: startup date [Sat Mar 24 14:22:36 CST 2018]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting WagesApplication on SKY-20171023NXB with PID 9656 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@35e2b38d: startup date [Sat Mar 24 14:24:53 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$6a1aa459] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Starting WagesApplication on SKY-20171023NXB with PID 5000 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@70530f8f: startup date [Sat Mar 24 14:24:56 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$f38dd978] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_131\bin;D:\java\apache-maven-3.5.2\bin;C:\Program Files (x86)\Git\cmd;%ZOOKEEPER_HOME%\bin;.]
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 2501 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.2.14.Final}
HHH000206: hibernate.properties not found
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@70530f8f: startup date [Sat Mar 24 14:24:56 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/findStaffsByPage]}" onto public com.jiemin.wages.domain.Result com.jiemin.wages.controller.HelloController.findStaffByPage(java.lang.Integer,java.lang.Integer,java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in exceptionHandle
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http) with context path ''
Started WagesApplication in 6.729 seconds (JVM running for 7.561)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 20 ms
===========开始请求com.jiemin.wages.controller.HelloController.findStaffByPage============
===========请求时间:2018-03-24 14:25:10==========================
url=http://localhost:8088/findStaffsByPage
method=GET
ip=0:0:0:0:0:0:0:1
class_method=com.jiemin.wages.controller.HelloController.findStaffByPage
args=1
HHH000397: Using ASTQueryTranslatorFactory
=============结束请求时间:2018-03-24 14:25:11======================
response=Result(code=200, msg=成功, data=[Staff(gid=13, userName=lisi, userSex=1, userTel=18888888888, emergencyName=lisi, emergencyTel=18888888889, bankCard=31231231231)], page=Pages(first=true, last=true, pageSize=1, pageNumber=1, totalCount=1, totalPage=1))
===========开始请求com.jiemin.wages.controller.HelloController.findStaffByPage============
===========请求时间:2018-03-24 14:25:15==========================
url=http://localhost:8088/findStaffsByPage
method=GET
ip=0:0:0:0:0:0:0:1
class_method=com.jiemin.wages.controller.HelloController.findStaffByPage
args=1
=============结束请求时间:2018-03-24 14:25:15======================
response=Result(code=200, msg=成功, data=[Staff(gid=13, userName=lisi, userSex=1, userTel=18888888888, emergencyName=lisi, emergencyTel=18888888889, bankCard=31231231231)], page=Pages(first=true, last=false, pageSize=1, pageNumber=1, totalCount=2, totalPage=2))
===========开始请求com.jiemin.wages.controller.HelloController.findStaffByPage============
===========请求时间:2018-03-24 14:25:18==========================
url=http://localhost:8088/findStaffsByPage
method=GET
ip=0:0:0:0:0:0:0:1
class_method=com.jiemin.wages.controller.HelloController.findStaffByPage
args=1
=============结束请求时间:2018-03-24 14:25:18======================
response=Result(code=200, msg=成功, data=[Staff(gid=13, userName=lisi, userSex=1, userTel=18888888888, emergencyName=lisi, emergencyTel=18888888889, bankCard=31231231231)], page=Pages(first=true, last=false, pageSize=1, pageNumber=1, totalCount=2, totalPage=2))
===========开始请求com.jiemin.wages.controller.HelloController.findStaffByPage============
===========请求时间:2018-03-24 14:25:19==========================
url=http://localhost:8088/findStaffsByPage
method=GET
ip=0:0:0:0:0:0:0:1
class_method=com.jiemin.wages.controller.HelloController.findStaffByPage
args=1
=============结束请求时间:2018-03-24 14:25:19======================
response=Result(code=200, msg=成功, data=[Staff(gid=13, userName=lisi, userSex=1, userTel=18888888888, emergencyName=lisi, emergencyTel=18888888889, bankCard=31231231231)], page=Pages(first=true, last=false, pageSize=1, pageNumber=1, totalCount=2, totalPage=2))
===========开始请求com.jiemin.wages.controller.HelloController.findStaffByPage============
===========请求时间:2018-03-24 14:25:23==========================
url=http://localhost:8088/findStaffsByPage
method=GET
ip=0:0:0:0:0:0:0:1
class_method=com.jiemin.wages.controller.HelloController.findStaffByPage
args=1
=============结束请求时间:2018-03-24 14:25:23======================
response=Result(code=200, msg=成功, data=[Staff(gid=13, userName=lisi, userSex=1, userTel=18888888888, emergencyName=lisi, emergencyTel=18888888889, bankCard=31231231231), Staff(gid=12, userName=zhangsan, userSex=1, userTel=18888888888, emergencyName=lisi, emergencyTel=18888888889, bankCard=31231231231)], page=Pages(first=true, last=true, pageSize=2, pageNumber=1, totalCount=2, totalPage=1))
===========开始请求com.jiemin.wages.controller.HelloController.findStaffByPage============
===========请求时间:2018-03-24 14:25:28==========================
url=http://localhost:8088/findStaffsByPage
method=GET
ip=0:0:0:0:0:0:0:1
class_method=com.jiemin.wages.controller.HelloController.findStaffByPage
args=1
=============结束请求时间:2018-03-24 14:25:28======================
response=Result(code=200, msg=成功, data=[Staff(gid=13, userName=lisi, userSex=1, userTel=18888888888, emergencyName=lisi, emergencyTel=18888888889, bankCard=31231231231)], page=Pages(first=true, last=false, pageSize=1, pageNumber=1, totalCount=2, totalPage=2))
===========开始请求com.jiemin.wages.controller.HelloController.findStaffByPage============
===========请求时间:2018-03-24 14:25:32==========================
url=http://localhost:8088/findStaffsByPage
method=GET
ip=0:0:0:0:0:0:0:1
class_method=com.jiemin.wages.controller.HelloController.findStaffByPage
args=2
=============结束请求时间:2018-03-24 14:25:32======================
response=Result(code=200, msg=成功, data=[Staff(gid=12, userName=zhangsan, userSex=1, userTel=18888888888, emergencyName=lisi, emergencyTel=18888888889, bankCard=31231231231)], page=Pages(first=false, last=true, pageSize=1, pageNumber=2, totalCount=2, totalPage=2))
Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@70530f8f: startup date [Sat Mar 24 14:24:56 CST 2018]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting WagesApplication on SKY-20171023NXB with PID 5000 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5d896cab: startup date [Sat Mar 24 14:25:53 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$f38dd978] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 747 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5d896cab: startup date [Sat Mar 24 14:25:53 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/findStaffsByPage]}" onto public com.jiemin.wages.domain.Result com.jiemin.wages.controller.HelloController.findStaffByPage(java.lang.Integer,java.lang.Integer,java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in exceptionHandle
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http) with context path ''
Started WagesApplication in 2.605 seconds (JVM running for 60.821)
Condition evaluation unchanged
Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5d896cab: startup date [Sat Mar 24 14:25:53 CST 2018]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting WagesApplication on SKY-20171023NXB with PID 5000 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@222d1d8f: startup date [Sat Mar 24 14:25:58 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$f38dd978] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 690 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@222d1d8f: startup date [Sat Mar 24 14:25:58 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/findStaffsByPage]}" onto public com.jiemin.wages.domain.Result com.jiemin.wages.controller.HelloController.findStaffByPage(java.lang.Integer,java.lang.Integer,java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in exceptionHandle
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
LiveReload server is running on port 35729
Starting WagesApplication on SKY-20171023NXB with PID 2884 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@63b6a7f0: startup date [Sat Mar 24 14:36:01 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$f2159ff5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_131\bin;D:\java\apache-maven-3.5.2\bin;C:\Program Files (x86)\Git\cmd;%ZOOKEEPER_HOME%\bin;.]
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 2110 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.2.14.Final}
HHH000206: hibernate.properties not found
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@63b6a7f0: startup date [Sat Mar 24 14:36:01 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/findStaffByPage]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.HelloController.findStaffByPage(java.lang.Integer,java.lang.Integer,java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in exceptionHandle
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http) with context path ''
Started WagesApplication in 6.358 seconds (JVM running for 7.113)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 21 ms
===========开始请求com.jiemin.wages.controller.HelloController.findStaffByPage============
===========请求时间:2018-03-24 14:36:13==========================
url=http://localhost:8088/findStaffByPage
method=GET
ip=0:0:0:0:0:0:0:1
class_method=com.jiemin.wages.controller.HelloController.findStaffByPage
args=2
HHH000397: Using ASTQueryTranslatorFactory
=============结束请求时间:2018-03-24 14:36:13======================
response=Result(code=200, msg=成功, data=[Staff(gid=12, userName=zhangsan, userSex=1, userTel=18888888888, emergencyName=lisi, emergencyTel=18888888889, bankCard=31231231231)], page=Pages(first=false, last=true, pageSize=1, pageNumber=2, totalCount=2, totalPage=2))
Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@63b6a7f0: startup date [Sat Mar 24 14:36:01 CST 2018]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting WagesApplication on SKY-20171023NXB with PID 2884 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4cfcc27: startup date [Sat Mar 24 14:37:36 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$f2159ff5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 1243 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'helloController': Unsatisfied dependency expressed through field 'service'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.jiemin.wages.service.StaffService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
Closing JPA EntityManagerFactory for persistence unit 'default'
Stopping service [Tomcat]


Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
Starting WagesApplication on SKY-20171023NXB with PID 9652 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@605c5fbf: startup date [Sat Mar 24 14:38:08 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b9b2e7dd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_131\bin;D:\java\apache-maven-3.5.2\bin;C:\Program Files (x86)\Git\cmd;%ZOOKEEPER_HOME%\bin;.]
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 2127 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.2.14.Final}
HHH000206: hibernate.properties not found
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@605c5fbf: startup date [Sat Mar 24 14:38:08 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/findStaffByPage]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.HelloController.findStaffByPage(com.jiemin.wages.domain.common.Pages,java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in exceptionHandle
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http) with context path ''
Started WagesApplication in 6.114 seconds (JVM running for 6.888)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 20 ms
===========开始请求com.jiemin.wages.controller.HelloController.findStaffByPage============
===========请求时间:2018-03-24 14:38:18==========================
url=http://localhost:8088/findStaffByPage
method=GET
ip=0:0:0:0:0:0:0:1
class_method=com.jiemin.wages.controller.HelloController.findStaffByPage
args=Pages(first=false, last=false, pageSize=1, pageNumber=2, totalCount=0, totalPage=null)
HHH000397: Using ASTQueryTranslatorFactory
=============结束请求时间:2018-03-24 14:38:18======================
response=Result(code=200, msg=成功, data=[Staff(gid=12, userName=zhangsan, userSex=1, userTel=18888888888, emergencyName=lisi, emergencyTel=18888888889, bankCard=31231231231)], page=Pages(first=false, last=true, pageSize=1, pageNumber=2, totalCount=2, totalPage=2))
Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@605c5fbf: startup date [Sat Mar 24 14:38:08 CST 2018]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting WagesApplication on SKY-20171023NXB with PID 9652 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@11249d1d: startup date [Sat Mar 24 14:38:33 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b9b2e7dd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 911 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@11249d1d: startup date [Sat Mar 24 14:38:33 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/findStaffByPage]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.HelloController.findStaffByPage(com.jiemin.wages.domain.common.Pages,java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in exceptionHandle
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http) with context path ''
Started WagesApplication in 2.148 seconds (JVM running for 27.812)
Condition evaluation unchanged
Starting WagesApplication on SKY-20171023NXB with PID 6340 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@8ee93e2: startup date [Sat Mar 24 14:38:49 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b6ad05a9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_131\bin;D:\java\apache-maven-3.5.2\bin;C:\Program Files (x86)\Git\cmd;%ZOOKEEPER_HOME%\bin;.]
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 2134 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.2.14.Final}
HHH000206: hibernate.properties not found
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@8ee93e2: startup date [Sat Mar 24 14:38:49 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/findStaffByPage]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.HelloController.findStaffByPage(com.jiemin.wages.domain.common.Pages,java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in exceptionHandle
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http) with context path ''
Started WagesApplication in 6.349 seconds (JVM running for 7.121)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 22 ms
===========开始请求com.jiemin.wages.controller.HelloController.findStaffByPage============
===========请求时间:2018-03-24 14:38:57==========================
url=http://localhost:8088/findStaffByPage
method=GET
ip=0:0:0:0:0:0:0:1
class_method=com.jiemin.wages.controller.HelloController.findStaffByPage
args=Pages(first=false, last=false, pageSize=1, pageNumber=2, totalCount=0, totalPage=null)
HHH000397: Using ASTQueryTranslatorFactory
=============结束请求时间:2018-03-24 14:38:58======================
response=Result(code=200, msg=成功, data=[Staff(gid=12, userName=zhangsan, userSex=1, userTel=18888888888, emergencyName=lisi, emergencyTel=18888888889, bankCard=31231231231)], page=Pages(first=false, last=true, pageSize=1, pageNumber=2, totalCount=2, totalPage=2))
===========开始请求com.jiemin.wages.controller.HelloController.findStaffByPage============
===========请求时间:2018-03-24 14:39:02==========================
url=http://localhost:8088/findStaffByPage
method=GET
ip=0:0:0:0:0:0:0:1
class_method=com.jiemin.wages.controller.HelloController.findStaffByPage
args=Pages(first=false, last=false, pageSize=1, pageNumber=1, totalCount=0, totalPage=null)
=============结束请求时间:2018-03-24 14:39:02======================
response=Result(code=200, msg=成功, data=[Staff(gid=13, userName=lisi, userSex=1, userTel=18888888888, emergencyName=lisi, emergencyTel=18888888889, bankCard=31231231231)], page=Pages(first=true, last=false, pageSize=1, pageNumber=1, totalCount=2, totalPage=2))
Starting WagesApplication on SKY-20171023NXB with PID 7416 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@67ed99d4: startup date [Sat Mar 24 14:59:09 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$412071f4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_131\bin;D:\java\apache-maven-3.5.2\bin;C:\Program Files (x86)\Git\cmd;%ZOOKEEPER_HOME%\bin;.]
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 2459 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.2.14.Final}
HHH000206: hibernate.properties not found
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@67ed99d4: startup date [Sat Mar 24 14:59:09 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/delByGid]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.deleteByGid(java.lang.Long)
Mapped "{[/saveStaff]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.addStaff(com.jiemin.wages.domain.Staff)
Mapped "{[/findStaffByPage]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.findStaffByPage(com.jiemin.wages.domain.common.Pages,java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in exceptionHandle
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http) with context path ''
Started WagesApplication in 6.639 seconds (JVM running for 7.399)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 22 ms
===========开始请求com.jiemin.wages.controller.StaffController.addStaff============
===========请求时间:2018-03-24 15:00:39==========================
url=http://localhost:8088/saveStaff
method=GET
ip=0:0:0:0:0:0:0:1
class_method=com.jiemin.wages.controller.StaffController.addStaff
args=Staff(gid=null, userName=刘英杰, userSex=1, userTel=15215215962, emergencyName=刘老大, emergencyTel=1888888888, bankCard=11111111111111111111)
=============结束请求时间:2018-03-24 15:00:39======================
response=Result(code=200, msg=成功, data=Staff(gid=14, userName=刘英杰, userSex=1, userTel=15215215962, emergencyName=刘老大, emergencyTel=1888888888, bankCard=11111111111111111111), page=null)
===========开始请求com.jiemin.wages.controller.StaffController.deleteByGid============
===========请求时间:2018-03-24 15:01:44==========================
url=http://localhost:8088/delByGid
method=GET
ip=0:0:0:0:0:0:0:1
class_method=com.jiemin.wages.controller.StaffController.deleteByGid
args=12
=============结束请求时间:2018-03-24 15:01:44======================
response=Result(code=404, msg=删除失败,员工不存在, data=null, page=null)
Starting WagesApplication on SKY-20171023NXB with PID 8132 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@71fa257e: startup date [Sat Mar 24 15:02:58 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$3064e81d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_131\bin;D:\java\apache-maven-3.5.2\bin;C:\Program Files (x86)\Git\cmd;%ZOOKEEPER_HOME%\bin;.]
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 2420 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.2.14.Final}
HHH000206: hibernate.properties not found
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@71fa257e: startup date [Sat Mar 24 15:02:58 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/findStaffByPage]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.findStaffByPage(com.jiemin.wages.domain.common.Pages,java.lang.String)
Mapped "{[/saveStaff]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.addStaff(com.jiemin.wages.domain.Staff)
Mapped "{[/delByGid]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.deleteByGid(java.lang.Long)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in exceptionHandle
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http) with context path ''
Started WagesApplication in 7.808 seconds (JVM running for 8.736)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 27 ms
===========开始请求com.jiemin.wages.controller.StaffController.deleteByGid============
===========请求时间:2018-03-24 15:03:24==========================
url=http://localhost:8088/delByGid
method=GET
ip=0:0:0:0:0:0:0:1
class_method=com.jiemin.wages.controller.StaffController.deleteByGid
args=13
=============结束请求时间:2018-03-24 15:04:05======================
response=Result(code=404, msg=删除失败,员工不存在, data=null, page=null)
Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@71fa257e: startup date [Sat Mar 24 15:02:58 CST 2018]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting WagesApplication on SKY-20171023NXB with PID 8132 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1d8f5251: startup date [Sat Mar 24 15:04:31 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$3064e81d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 1184 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'staffController' defined in file [D:\project\project\wages\target\classes\com\jiemin\wages\controller\StaffController.class]: Post-processing of merged bean definition failed; nested exception is java.lang.IllegalStateException: Failed to introspect Class [com.jiemin.wages.controller.StaffController] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@56ff968a]
Closing JPA EntityManagerFactory for persistence unit 'default'
Stopping service [Tomcat]


Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
Starting WagesApplication on SKY-20171023NXB with PID 8132 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@10da443c: startup date [Sat Mar 24 15:04:37 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$3064e81d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 1034 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@10da443c: startup date [Sat Mar 24 15:04:37 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/findStaffByPage]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.findStaffByPage(com.jiemin.wages.domain.common.Pages,java.lang.String)
Mapped "{[/saveStaff]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.addStaff(com.jiemin.wages.domain.Staff)
Mapped "{[/delByGid]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.deleteByGid(java.lang.Long)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in exceptionHandle
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http) with context path ''
Started WagesApplication in 2.603 seconds (JVM running for 103.497)
Condition evaluation unchanged
Starting WagesApplication on SKY-20171023NXB with PID 3500 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2e3ce5dd: startup date [Sat Mar 24 15:04:46 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$4af102b9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_131\bin;D:\java\apache-maven-3.5.2\bin;C:\Program Files (x86)\Git\cmd;%ZOOKEEPER_HOME%\bin;.]
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 2251 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.2.14.Final}
HHH000206: hibernate.properties not found
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2e3ce5dd: startup date [Sat Mar 24 15:04:46 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/delByGid]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.deleteByGid(java.lang.Long)
Mapped "{[/saveStaff]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.addStaff(com.jiemin.wages.domain.Staff)
Mapped "{[/findStaffByPage]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.findStaffByPage(com.jiemin.wages.domain.common.Pages,java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in exceptionHandle
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http) with context path ''
Started WagesApplication in 6.384 seconds (JVM running for 7.168)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 24 ms
===========开始请求com.jiemin.wages.controller.StaffController.deleteByGid============
===========请求时间:2018-03-24 15:04:56==========================
url=http://localhost:8088/delByGid
method=GET
ip=0:0:0:0:0:0:0:1
class_method=com.jiemin.wages.controller.StaffController.deleteByGid
args=13
=============结束请求时间:2018-03-24 15:04:56======================
Resolved exception caused by Handler execution: org.springframework.orm.jpa.JpaObjectRetrievalFailureException: Unable to find com.jiemin.wages.domain.Staff with id 13; nested exception is javax.persistence.EntityNotFoundException: Unable to find com.jiemin.wages.domain.Staff with id 13
Starting WagesApplication on SKY-20171023NXB with PID 9788 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1f2d42b4: startup date [Sat Mar 24 15:05:26 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$d7437fa1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_131\bin;D:\java\apache-maven-3.5.2\bin;C:\Program Files (x86)\Git\cmd;%ZOOKEEPER_HOME%\bin;.]
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 2433 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.2.14.Final}
HHH000206: hibernate.properties not found
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1f2d42b4: startup date [Sat Mar 24 15:05:26 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/saveStaff]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.addStaff(com.jiemin.wages.domain.Staff)
Mapped "{[/delByGid]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.deleteByGid(java.lang.Long)
Mapped "{[/findStaffByPage]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.findStaffByPage(com.jiemin.wages.domain.common.Pages,java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in exceptionHandle
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http) with context path ''
Started WagesApplication in 7.915 seconds (JVM running for 8.761)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 27 ms
===========开始请求com.jiemin.wages.controller.StaffController.deleteByGid============
===========请求时间:2018-03-24 15:05:35==========================
url=http://localhost:8088/delByGid
method=GET
ip=0:0:0:0:0:0:0:1
class_method=com.jiemin.wages.controller.StaffController.deleteByGid
args=13
=============结束请求时间:2018-03-24 15:06:25======================
Resolved exception caused by Handler execution: org.springframework.orm.jpa.JpaObjectRetrievalFailureException: Unable to find com.jiemin.wages.domain.Staff with id 13; nested exception is javax.persistence.EntityNotFoundException: Unable to find com.jiemin.wages.domain.Staff with id 13
Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1f2d42b4: startup date [Sat Mar 24 15:05:26 CST 2018]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting WagesApplication on SKY-20171023NXB with PID 9788 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@798b22ed: startup date [Sat Mar 24 15:06:40 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$d7437fa1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 1145 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@798b22ed: startup date [Sat Mar 24 15:06:40 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/saveStaff]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.addStaff(com.jiemin.wages.domain.Staff)
Mapped "{[/delByGid]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.deleteByGid(java.lang.Long)
Mapped "{[/findStaffByPage]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.findStaffByPage(com.jiemin.wages.domain.common.Pages,java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in exceptionHandle
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
LiveReload server is running on port 35729
Starting WagesApplication on SKY-20171023NXB with PID 9184 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7fe67fb9: startup date [Sat Mar 24 15:06:44 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$55944dae] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_131\bin;D:\java\apache-maven-3.5.2\bin;C:\Program Files (x86)\Git\cmd;%ZOOKEEPER_HOME%\bin;.]
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 3193 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.2.14.Final}
HHH000206: hibernate.properties not found
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7fe67fb9: startup date [Sat Mar 24 15:06:44 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/delByGid]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.deleteByGid(java.lang.Long)
Mapped "{[/saveStaff]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.addStaff(com.jiemin.wages.domain.Staff)
Mapped "{[/findStaffByPage]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.findStaffByPage(com.jiemin.wages.domain.common.Pages,java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in exceptionHandle
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http) with context path ''
Started WagesApplication in 8.542 seconds (JVM running for 9.729)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 27 ms
===========开始请求com.jiemin.wages.controller.StaffController.deleteByGid============
===========请求时间:2018-03-24 15:06:56==========================
url=http://localhost:8088/delByGid
method=GET
ip=0:0:0:0:0:0:0:1
class_method=com.jiemin.wages.controller.StaffController.deleteByGid
args=13
=============结束请求时间:2018-03-24 15:06:56======================
Resolved exception caused by Handler execution: org.springframework.orm.jpa.JpaObjectRetrievalFailureException: Unable to find com.jiemin.wages.domain.Staff with id 13; nested exception is javax.persistence.EntityNotFoundException: Unable to find com.jiemin.wages.domain.Staff with id 13
===========开始请求com.jiemin.wages.controller.StaffController.deleteByGid============
===========请求时间:2018-03-24 15:07:12==========================
url=http://localhost:8088/delByGid
method=GET
ip=0:0:0:0:0:0:0:1
class_method=com.jiemin.wages.controller.StaffController.deleteByGid
args=13
=============结束请求时间:2018-03-24 15:08:44======================
Resolved exception caused by Handler execution: org.springframework.orm.jpa.JpaObjectRetrievalFailureException: Unable to find com.jiemin.wages.domain.Staff with id 13; nested exception is javax.persistence.EntityNotFoundException: Unable to find com.jiemin.wages.domain.Staff with id 13
Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7fe67fb9: startup date [Sat Mar 24 15:06:44 CST 2018]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting WagesApplication on SKY-20171023NXB with PID 9184 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5f8a226c: startup date [Sat Mar 24 15:08:46 CST 2018]; root of context hierarchy
Starting WagesApplication on SKY-20171023NXB with PID 2944 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@16947247: startup date [Sat Mar 24 15:08:52 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$c77e8ca3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_131\bin;D:\java\apache-maven-3.5.2\bin;C:\Program Files (x86)\Git\cmd;%ZOOKEEPER_HOME%\bin;.]
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 2502 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.2.14.Final}
HHH000206: hibernate.properties not found
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@16947247: startup date [Sat Mar 24 15:08:52 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/delByGid]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.deleteByGid(java.lang.Long)
Mapped "{[/findStaffByPage]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.findStaffByPage(com.jiemin.wages.domain.common.Pages,java.lang.String)
Mapped "{[/saveStaff]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.addStaff(com.jiemin.wages.domain.Staff)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in exceptionHandle
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http) with context path ''
Started WagesApplication in 8.105 seconds (JVM running for 8.946)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 27 ms
===========开始请求com.jiemin.wages.controller.StaffController.deleteByGid============
===========请求时间:2018-03-24 15:09:04==========================
url=http://localhost:8088/delByGid
method=GET
ip=0:0:0:0:0:0:0:1
class_method=com.jiemin.wages.controller.StaffController.deleteByGid
args=13
=============结束请求时间:2018-03-24 15:09:16======================
Resolved exception caused by Handler execution: org.springframework.orm.jpa.JpaObjectRetrievalFailureException: Unable to find com.jiemin.wages.domain.Staff with id 13; nested exception is javax.persistence.EntityNotFoundException: Unable to find com.jiemin.wages.domain.Staff with id 13
Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@16947247: startup date [Sat Mar 24 15:08:52 CST 2018]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting WagesApplication on SKY-20171023NXB with PID 2944 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@53d27ed8: startup date [Sat Mar 24 15:09:49 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$c77e8ca3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 1131 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@53d27ed8: startup date [Sat Mar 24 15:09:49 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/delByGid]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.deleteByGid(java.lang.Long)
Mapped "{[/findStaffByPage]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.findStaffByPage(com.jiemin.wages.domain.common.Pages,java.lang.String)
Mapped "{[/saveStaff]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.addStaff(com.jiemin.wages.domain.Staff)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in exceptionHandle
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http) with context path ''
Started WagesApplication in 4.276 seconds (JVM running for 62.499)
Condition evaluation unchanged
Starting WagesApplication on SKY-20171023NXB with PID 9776 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@487deec2: startup date [Sat Mar 24 15:10:00 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$2d439634] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_131\bin;D:\java\apache-maven-3.5.2\bin;C:\Program Files (x86)\Git\cmd;%ZOOKEEPER_HOME%\bin;.]
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 2904 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.2.14.Final}
HHH000206: hibernate.properties not found
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@487deec2: startup date [Sat Mar 24 15:10:00 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/findStaffByPage]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.findStaffByPage(com.jiemin.wages.domain.common.Pages,java.lang.String)
Mapped "{[/delByGid]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.deleteByGid(java.lang.Long)
Mapped "{[/saveStaff]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.addStaff(com.jiemin.wages.domain.Staff)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in exceptionHandle
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http) with context path ''
Started WagesApplication in 8.484 seconds (JVM running for 9.38)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 27 ms
===========开始请求com.jiemin.wages.controller.StaffController.deleteByGid============
===========请求时间:2018-03-24 15:10:15==========================
url=http://localhost:8088/delByGid
method=GET
ip=0:0:0:0:0:0:0:1
class_method=com.jiemin.wages.controller.StaffController.deleteByGid
args=13
=============结束请求时间:2018-03-24 15:11:01======================
Resolved exception caused by Handler execution: org.springframework.orm.jpa.JpaObjectRetrievalFailureException: Unable to find com.jiemin.wages.domain.Staff with id 13; nested exception is javax.persistence.EntityNotFoundException: Unable to find com.jiemin.wages.domain.Staff with id 13
Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@487deec2: startup date [Sat Mar 24 15:10:00 CST 2018]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting WagesApplication on SKY-20171023NXB with PID 9776 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1b8c2309: startup date [Sat Mar 24 15:11:40 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$2d439634] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 1254 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1b8c2309: startup date [Sat Mar 24 15:11:40 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/findStaffByPage]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.findStaffByPage(com.jiemin.wages.domain.common.Pages,java.lang.String)
Mapped "{[/delByGid]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.deleteByGid(java.lang.Long)
Mapped "{[/saveStaff]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.addStaff(com.jiemin.wages.domain.Staff)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in exceptionHandle
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http) with context path ''
Started WagesApplication in 4.277 seconds (JVM running for 105.957)
Condition evaluation unchanged
Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1b8c2309: startup date [Sat Mar 24 15:11:40 CST 2018]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting WagesApplication on SKY-20171023NXB with PID 9776 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1a0128a: startup date [Sat Mar 24 15:11:55 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1a0128a: startup date [Sat Mar 24 15:11:55 CST 2018]; root of context hierarchy
Unable to close ApplicationContext
org.springframework.beans.factory.CannotLoadBeanClassException: Cannot find class [com.jiemin.wages.service.StaffService] for bean with name 'staffService' defined in file [D:\project\project\wages\target\classes\com\jiemin\wages\service\StaffService.class]; nested exception is java.lang.ClassNotFoundException: com.jiemin.wages.service.StaffService
	at org.springframework.beans.factory.support.AbstractBeanFactory.resolveBeanClass(AbstractBeanFactory.java:1380)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.determineTargetType(AbstractAutowireCapableBeanFactory.java:670)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.predictBeanType(AbstractAutowireCapableBeanFactory.java:637)
	at org.springframework.beans.factory.support.AbstractBeanFactory.isFactoryBean(AbstractBeanFactory.java:1489)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doGetBeanNamesForType(DefaultListableBeanFactory.java:420)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanNamesForType(DefaultListableBeanFactory.java:390)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeansOfType(DefaultListableBeanFactory.java:511)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeansOfType(DefaultListableBeanFactory.java:503)
	at org.springframework.context.support.AbstractApplicationContext.getBeansOfType(AbstractApplicationContext.java:1194)
	at org.springframework.boot.SpringApplication.getExitCodeFromMappedException(SpringApplication.java:880)
	at org.springframework.boot.SpringApplication.getExitCodeFromException(SpringApplication.java:866)
	at org.springframework.boot.SpringApplication.handleExitCode(SpringApplication.java:852)
	at org.springframework.boot.SpringApplication.handleRunFailure(SpringApplication.java:803)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:338)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1246)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1234)
	at com.jiemin.wages.WagesApplication.main(WagesApplication.java:12)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: java.lang.ClassNotFoundException: com.jiemin.wages.service.StaffService
	at java.net.URLClassLoader.findClass(URLClassLoader.java:381)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:424)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:335)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
	at org.springframework.boot.devtools.restart.classloader.RestartClassLoader.loadClass(RestartClassLoader.java:148)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
	at org.springframework.util.ClassUtils.forName(ClassUtils.java:264)
	at org.springframework.beans.factory.support.AbstractBeanDefinition.resolveBeanClass(AbstractBeanDefinition.java:437)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doResolveBeanClass(AbstractBeanFactory.java:1428)
	at org.springframework.beans.factory.support.AbstractBeanFactory.resolveBeanClass(AbstractBeanFactory.java:1372)
	... 21 common frames omitted
Starting WagesApplication on SKY-20171023NXB with PID 9776 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7d4200c2: startup date [Sat Mar 24 15:11:58 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$2d439634] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 1283 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7d4200c2: startup date [Sat Mar 24 15:11:58 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/findStaffByPage]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.findStaffByPage(com.jiemin.wages.domain.common.Pages,java.lang.String)
Mapped "{[/delByGid]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.deleteByGid(java.lang.Long)
Mapped "{[/saveStaff]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.addStaff(com.jiemin.wages.domain.Staff)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in exceptionHandle
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http) with context path ''
Started WagesApplication in 3.349 seconds (JVM running for 123.735)
Condition evaluation unchanged
Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7d4200c2: startup date [Sat Mar 24 15:11:58 CST 2018]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting WagesApplication on SKY-20171023NXB with PID 9776 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5ca9d028: startup date [Sat Mar 24 15:13:06 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$2d439634] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 1243 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'staffController' defined in file [D:\project\project\wages\target\classes\com\jiemin\wages\controller\StaffController.class]: Post-processing of merged bean definition failed; nested exception is java.lang.IllegalStateException: Failed to introspect Class [com.jiemin.wages.controller.StaffController] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@751edef8]
Closing JPA EntityManagerFactory for persistence unit 'default'
Stopping service [Tomcat]


Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
Starting WagesApplication on SKY-20171023NXB with PID 9776 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@42ec671f: startup date [Sat Mar 24 15:15:30 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$2d439634] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 1231 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@42ec671f: startup date [Sat Mar 24 15:15:30 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/findStaffByPage]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.findStaffByPage(com.jiemin.wages.domain.common.Pages,java.lang.String)
Mapped "{[/delByGid]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.deleteByGid(java.lang.Long)
Mapped "{[/saveStaff]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.addStaff(com.jiemin.wages.domain.Staff)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in exceptionHandle
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http) with context path ''
Started WagesApplication in 2.949 seconds (JVM running for 334.763)
Condition evaluation unchanged
Starting WagesApplication on SKY-20171023NXB with PID 9708 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3d2c4875: startup date [Sat Mar 24 15:15:42 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$dde71920] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_131\bin;D:\java\apache-maven-3.5.2\bin;C:\Program Files (x86)\Git\cmd;%ZOOKEEPER_HOME%\bin;.]
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 3487 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.2.14.Final}
HHH000206: hibernate.properties not found
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3d2c4875: startup date [Sat Mar 24 15:15:42 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/delByGid]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.deleteByGid(java.lang.Long)
Mapped "{[/saveStaff]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.addStaff(com.jiemin.wages.domain.Staff)
Mapped "{[/findStaffByPage]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.findStaffByPage(com.jiemin.wages.domain.common.Pages,java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in exceptionHandle
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http) with context path ''
Started WagesApplication in 9.179 seconds (JVM running for 10.242)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 28 ms
===========开始请求com.jiemin.wages.controller.StaffController.deleteByGid============
===========请求时间:2018-03-24 15:15:54==========================
url=http://localhost:8088/delByGid
method=GET
ip=0:0:0:0:0:0:0:1
class_method=com.jiemin.wages.controller.StaffController.deleteByGid
args=13
=============结束请求时间:2018-03-24 15:15:54======================
Resolved exception caused by Handler execution: com.jiemin.wages.exception.FarmException: 失败
Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3d2c4875: startup date [Sat Mar 24 15:15:42 CST 2018]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting WagesApplication on SKY-20171023NXB with PID 9708 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1232b602: startup date [Sat Mar 24 15:16:26 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$dde71920] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 1206 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1232b602: startup date [Sat Mar 24 15:16:26 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/delByGid]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.deleteByGid(java.lang.Long)
Mapped "{[/saveStaff]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.addStaff(com.jiemin.wages.domain.Staff)
Mapped "{[/findStaffByPage]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.findStaffByPage(com.jiemin.wages.domain.common.Pages,java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in exceptionHandle
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http) with context path ''
Started WagesApplication in 2.917 seconds (JVM running for 49.05)
Condition evaluation unchanged
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 8 ms
===========开始请求com.jiemin.wages.controller.StaffController.deleteByGid============
===========请求时间:2018-03-24 15:16:33==========================
url=http://localhost:8088/delByGid
method=GET
ip=0:0:0:0:0:0:0:1
class_method=com.jiemin.wages.controller.StaffController.deleteByGid
args=13
=============结束请求时间:2018-03-24 15:16:33======================
Resolved exception caused by Handler execution: com.jiemin.wages.exception.FarmException: 失败
Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1232b602: startup date [Sat Mar 24 15:16:26 CST 2018]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting WagesApplication on SKY-20171023NXB with PID 9708 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@656610af: startup date [Sat Mar 24 15:16:58 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$dde71920] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 1473 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@656610af: startup date [Sat Mar 24 15:16:58 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/delByGid]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.deleteByGid(java.lang.Long)
Mapped "{[/saveStaff]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.addStaff(com.jiemin.wages.domain.Staff)
Mapped "{[/findStaffByPage]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.findStaffByPage(com.jiemin.wages.domain.common.Pages,java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in exceptionHandle
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http) with context path ''
Started WagesApplication in 3.417 seconds (JVM running for 81.274)
Condition evaluation unchanged
Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@656610af: startup date [Sat Mar 24 15:16:58 CST 2018]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting WagesApplication on SKY-20171023NXB with PID 9708 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@12cd34fb: startup date [Sat Mar 24 15:17:17 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$dde71920] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 1185 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@12cd34fb: startup date [Sat Mar 24 15:17:17 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/delByGid]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.deleteByGid(java.lang.Long)
Mapped "{[/saveStaff]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.addStaff(com.jiemin.wages.domain.Staff)
Mapped "{[/findStaffByPage]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.findStaffByPage(com.jiemin.wages.domain.common.Pages,java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in exceptionHandle
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http) with context path ''
Started WagesApplication in 2.825 seconds (JVM running for 99.835)
Condition evaluation unchanged
Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@12cd34fb: startup date [Sat Mar 24 15:17:17 CST 2018]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting WagesApplication on SKY-20171023NXB with PID 9708 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2fa7f41b: startup date [Sat Mar 24 15:17:24 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$dde71920] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 985 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2fa7f41b: startup date [Sat Mar 24 15:17:24 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/delByGid]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.deleteByGid(java.lang.Long)
Mapped "{[/saveStaff]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.addStaff(com.jiemin.wages.domain.Staff)
Mapped "{[/findStaffByPage]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.findStaffByPage(com.jiemin.wages.domain.common.Pages,java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in exceptionHandle
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http) with context path ''
Started WagesApplication in 2.797 seconds (JVM running for 106.8)
Condition evaluation unchanged
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 11 ms
===========开始请求com.jiemin.wages.controller.StaffController.deleteByGid============
===========请求时间:2018-03-24 15:28:20==========================
url=http://localhost:8088/delByGid
method=GET
ip=0:0:0:0:0:0:0:1
class_method=com.jiemin.wages.controller.StaffController.deleteByGid
args=13
=============结束请求时间:2018-03-24 15:28:20======================
Resolved exception caused by Handler execution: com.jiemin.wages.exception.FarmException: 员工不存在
Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2fa7f41b: startup date [Sat Mar 24 15:17:24 CST 2018]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting WagesApplication on SKY-20171023NXB with PID 9708 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7767242c: startup date [Sat Mar 24 15:28:44 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$dde71920] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 1115 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'staffController' defined in file [D:\project\project\wages\target\classes\com\jiemin\wages\controller\StaffController.class]: Post-processing of merged bean definition failed; nested exception is java.lang.IllegalStateException: Failed to introspect Class [com.jiemin.wages.controller.StaffController] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@13e71a58]
Closing JPA EntityManagerFactory for persistence unit 'default'
Stopping service [Tomcat]


Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
Starting WagesApplication on SKY-20171023NXB with PID 9708 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@32ba01fa: startup date [Sat Mar 24 15:29:07 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$dde71920] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 961 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'staffController' defined in file [D:\project\project\wages\target\classes\com\jiemin\wages\controller\StaffController.class]: Post-processing of merged bean definition failed; nested exception is java.lang.IllegalStateException: Failed to introspect Class [com.jiemin.wages.controller.StaffController] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@73692f3e]
Closing JPA EntityManagerFactory for persistence unit 'default'
Stopping service [Tomcat]


Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
Starting WagesApplication on SKY-20171023NXB with PID 9708 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@55263edc: startup date [Sat Mar 24 15:32:29 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$dde71920] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 1228 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'staffController' defined in file [D:\project\project\wages\target\classes\com\jiemin\wages\controller\StaffController.class]: Post-processing of merged bean definition failed; nested exception is java.lang.IllegalStateException: Failed to introspect Class [com.jiemin.wages.controller.StaffController] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@370fffd6]
Closing JPA EntityManagerFactory for persistence unit 'default'
Stopping service [Tomcat]


Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
Starting WagesApplication on SKY-20171023NXB with PID 9708 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@71da996d: startup date [Sat Mar 24 15:32:34 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$dde71920] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 1356 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'staffController' defined in file [D:\project\project\wages\target\classes\com\jiemin\wages\controller\StaffController.class]: Post-processing of merged bean definition failed; nested exception is java.lang.IllegalStateException: Failed to introspect Class [com.jiemin.wages.controller.StaffController] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@4e9383fa]
Closing JPA EntityManagerFactory for persistence unit 'default'
Stopping service [Tomcat]


Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
Starting WagesApplication on SKY-20171023NXB with PID 9708 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1ef18e06: startup date [Sat Mar 24 15:34:06 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$dde71920] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 1734 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'staffController' defined in file [D:\project\project\wages\target\classes\com\jiemin\wages\controller\StaffController.class]: Post-processing of merged bean definition failed; nested exception is java.lang.IllegalStateException: Failed to introspect Class [com.jiemin.wages.controller.StaffController] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@18540b08]
Closing JPA EntityManagerFactory for persistence unit 'default'
Stopping service [Tomcat]


Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
Starting WagesApplication on SKY-20171023NXB with PID 9708 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@74e32cad: startup date [Sat Mar 24 15:34:12 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$dde71920] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 1247 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'staffController' defined in file [D:\project\project\wages\target\classes\com\jiemin\wages\controller\StaffController.class]: Post-processing of merged bean definition failed; nested exception is java.lang.IllegalStateException: Failed to introspect Class [com.jiemin.wages.controller.StaffController] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@2678915e]
Closing JPA EntityManagerFactory for persistence unit 'default'
Stopping service [Tomcat]


Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
Starting WagesApplication on SKY-20171023NXB with PID 9708 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@53c5afb5: startup date [Sat Mar 24 15:34:18 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$dde71920] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 1064 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@53c5afb5: startup date [Sat Mar 24 15:34:18 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/delByGid]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.deleteByGid(java.lang.Long)
Mapped "{[/saveStaff]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.addStaff(com.jiemin.wages.domain.Staff)
Mapped "{[/findStaffByPage]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.findStaffByPage(com.jiemin.wages.domain.common.Pages,java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in exceptionHandle
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http) with context path ''
Started WagesApplication in 2.794 seconds (JVM running for 1120.61)
Condition evaluation unchanged
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 8 ms
===========开始请求com.jiemin.wages.controller.StaffController.deleteByGid============
===========请求时间:2018-03-24 15:34:40==========================
url=http://localhost:8088/delByGid
method=GET
ip=0:0:0:0:0:0:0:1
class_method=com.jiemin.wages.controller.StaffController.deleteByGid
args=13
=============结束请求时间:2018-03-24 15:34:40======================
Resolved exception caused by Handler execution: com.jiemin.wages.exception.FarmException: 非法操作
Starting WagesApplication on SKY-20171023NXB with PID 11336 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@13e777e5: startup date [Sat Mar 24 15:54:22 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$c8a9a50c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_131\bin;D:\java\apache-maven-3.5.2\bin;C:\Program Files (x86)\Git\cmd;%ZOOKEEPER_HOME%\bin;.]
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 2832 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.2.14.Final}
HHH000206: hibernate.properties not found
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'staffController': Unsatisfied dependency expressed through field 'service'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'staffService': Unsatisfied dependency expressed through field 'staffMapper'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.jiemin.wages.mapper.StaffMapper' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
Closing JPA EntityManagerFactory for persistence unit 'default'
Stopping service [Tomcat]


Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
Starting WagesApplication on SKY-20171023NXB with PID 12208 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@150d9dfb: startup date [Sat Mar 24 15:56:19 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$8a2e086c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_131\bin;D:\java\apache-maven-3.5.2\bin;C:\Program Files (x86)\Git\cmd;%ZOOKEEPER_HOME%\bin;.]
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 2825 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.2.14.Final}
HHH000206: hibernate.properties not found
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'staffController': Unsatisfied dependency expressed through field 'service'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'staffService': Unsatisfied dependency expressed through field 'staffMapper'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.jiemin.wages.mapper.StaffMapper' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
Closing JPA EntityManagerFactory for persistence unit 'default'
Stopping service [Tomcat]


Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
Starting WagesApplication on SKY-20171023NXB with PID 11616 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1bf83bfb: startup date [Sat Mar 24 15:58:16 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$263f96a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_131\bin;D:\java\apache-maven-3.5.2\bin;C:\Program Files (x86)\Git\cmd;%ZOOKEEPER_HOME%\bin;.]
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 2493 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.2.14.Final}
HHH000206: hibernate.properties not found
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'staffController': Unsatisfied dependency expressed through field 'service'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'staffService': Unsatisfied dependency expressed through field 'staffMapper'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'staffMapper' defined in file [D:\project\project\wages\target\classes\com\jiemin\wages\mapper\StaffMapper.class]: Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Property 'sqlSessionFactory' or 'sqlSessionTemplate' are required
Closing JPA EntityManagerFactory for persistence unit 'default'
Stopping service [Tomcat]


Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
Starting WagesApplication on SKY-20171023NXB with PID 10864 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4efd4d74: startup date [Sat Mar 24 16:01:05 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'dataSource' of type [com.alibaba.druid.pool.DruidDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'myBatisConfig' of type [com.jiemin.wages.config.MyBatisConfig$$EnhancerBySpringCGLIB$$336f83b6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'annotationDrivenTransactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$959899f0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_131\bin;D:\java\apache-maven-3.5.2\bin;C:\Program Files (x86)\Git\cmd;%ZOOKEEPER_HOME%\bin;.]
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 2788 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.2.14.Final}
HHH000206: hibernate.properties not found
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4efd4d74: startup date [Sat Mar 24 16:01:05 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/delByGid]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.deleteByGid(java.lang.Long)
Mapped "{[/findStaffByPage]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.findStaffByPage(com.jiemin.wages.domain.common.Pages,java.lang.String)
Mapped "{[/saveStaff]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.addStaff(com.jiemin.wages.domain.Staff)
Mapped "{[/updateStaff]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.updateStaff(com.jiemin.wages.domain.Staff)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in exceptionHandle
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http) with context path ''
Started WagesApplication in 8.327 seconds (JVM running for 9.202)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 28 ms
===========开始请求com.jiemin.wages.controller.StaffController.updateStaff============
===========请求时间:2018-03-24 16:01:18==========================
url=http://localhost:8088/updateStaff
method=GET
ip=0:0:0:0:0:0:0:1
class_method=com.jiemin.wages.controller.StaffController.updateStaff
args=Staff(gid=14, userName=null, userSex=null, userTel=null, emergencyName=null, emergencyTel=null, bankCard=6228480470961795312)
=============结束请求时间:2018-03-24 16:01:18======================
Resolved exception caused by Handler execution: org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.type.TypeException: Could not set parameters for mapping: ParameterMapping{property='gid', mode=IN, javaType=class java.lang.Long, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'}. Cause: org.apache.ibatis.type.TypeException: Error setting non null for parameter #1 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (1 > number of parameters, which is 0).
===========开始请求com.jiemin.wages.controller.StaffController.updateStaff============
===========请求时间:2018-03-24 16:02:06==========================
url=http://localhost:8088/updateStaff
method=GET
ip=0:0:0:0:0:0:0:1
class_method=com.jiemin.wages.controller.StaffController.updateStaff
args=Staff(gid=14, userName=null, userSex=null, userTel=null, emergencyName=null, emergencyTel=null, bankCard=6228480470961795312)
=============结束请求时间:2018-03-24 16:04:46======================
Resolved exception caused by Handler execution: org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.type.TypeException: Could not set parameters for mapping: ParameterMapping{property='gid', mode=IN, javaType=class java.lang.Long, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'}. Cause: org.apache.ibatis.type.TypeException: Error setting non null for parameter #1 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: Parameter index out of range (1 > number of parameters, which is 0).
Starting WagesApplication on SKY-20171023NXB with PID 11228 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@10652156: startup date [Sat Mar 24 16:04:51 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'dataSource' of type [com.alibaba.druid.pool.DruidDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'myBatisConfig' of type [com.jiemin.wages.config.MyBatisConfig$$EnhancerBySpringCGLIB$$d5cd7189] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'annotationDrivenTransactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$37f687c3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_131\bin;D:\java\apache-maven-3.5.2\bin;C:\Program Files (x86)\Git\cmd;%ZOOKEEPER_HOME%\bin;.]
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 3138 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.2.14.Final}
HHH000206: hibernate.properties not found
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@10652156: startup date [Sat Mar 24 16:04:51 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/delByGid]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.deleteByGid(java.lang.Long)
Mapped "{[/saveStaff]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.addStaff(com.jiemin.wages.domain.Staff)
Mapped "{[/updateStaff]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.updateStaff(com.jiemin.wages.domain.Staff)
Mapped "{[/findStaffByPage]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.findStaffByPage(com.jiemin.wages.domain.common.Pages,java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in exceptionHandle
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http) with context path ''
Started WagesApplication in 8.465 seconds (JVM running for 9.305)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 29 ms
===========开始请求com.jiemin.wages.controller.StaffController.updateStaff============
===========请求时间:2018-03-24 16:05:03==========================
url=http://localhost:8088/updateStaff
method=GET
ip=0:0:0:0:0:0:0:1
class_method=com.jiemin.wages.controller.StaffController.updateStaff
args=Staff(gid=14, userName=null, userSex=null, userTel=null, emergencyName=null, emergencyTel=null, bankCard=6228480470961795312)
Loading XML bean definitions from class path resource [org/springframework/jdbc/support/sql-error-codes.xml]
SQLErrorCodes loaded: [DB2, Derby, H2, HSQL, Informix, MS-SQL, MySQL, Oracle, PostgreSQL, Sybase, Hana]
=============结束请求时间:2018-03-24 16:05:07======================
Resolved exception caused by Handler execution: org.springframework.jdbc.BadSqlGrammarException: 
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '({#staff}) where gid=14' at line 1
### The error may involve com.jiemin.wages.mapper.StaffMapper.updateStaff-Inline
### The error occurred while setting parameters
### SQL: update staff ({#staff}) where gid=14
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '({#staff}) where gid=14' at line 1
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '({#staff}) where gid=14' at line 1
Starting WagesApplication on SKY-20171023NXB with PID 2572 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2232e2cb: startup date [Sat Mar 24 16:06:04 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'dataSource' of type [com.alibaba.druid.pool.DruidDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'myBatisConfig' of type [com.jiemin.wages.config.MyBatisConfig$$EnhancerBySpringCGLIB$$5cfb6d89] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'annotationDrivenTransactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$bf2483c3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_131\bin;D:\java\apache-maven-3.5.2\bin;C:\Program Files (x86)\Git\cmd;%ZOOKEEPER_HOME%\bin;.]
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 3384 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.2.14.Final}
HHH000206: hibernate.properties not found
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2232e2cb: startup date [Sat Mar 24 16:06:04 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/delByGid]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.deleteByGid(java.lang.Long)
Mapped "{[/findStaffByPage]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.findStaffByPage(com.jiemin.wages.domain.common.Pages,java.lang.String)
Mapped "{[/updateStaff]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.updateStaff(com.jiemin.wages.domain.Staff)
Mapped "{[/saveStaff]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.addStaff(com.jiemin.wages.domain.Staff)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in exceptionHandle
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http) with context path ''
Started WagesApplication in 8.859 seconds (JVM running for 9.76)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 235 ms
===========开始请求com.jiemin.wages.controller.StaffController.updateStaff============
===========请求时间:2018-03-24 16:06:16==========================
url=http://localhost:8088/updateStaff
method=GET
ip=0:0:0:0:0:0:0:1
class_method=com.jiemin.wages.controller.StaffController.updateStaff
args=Staff(gid=14, userName=null, userSex=null, userTel=null, emergencyName=null, emergencyTel=null, bankCard=6228480470961795312)
=============结束请求时间:2018-03-24 16:06:16======================
Resolved exception caused by Handler execution: org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'serialVersionUID' in 'class com.jiemin.wages.domain.Staff'
Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2232e2cb: startup date [Sat Mar 24 16:06:04 CST 2018]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting WagesApplication on SKY-20171023NXB with PID 10952 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@664f4f7b: startup date [Sat Mar 24 16:07:48 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'dataSource' of type [com.alibaba.druid.pool.DruidDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'myBatisConfig' of type [com.jiemin.wages.config.MyBatisConfig$$EnhancerBySpringCGLIB$$977840] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'annotationDrivenTransactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$62c08e7a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_131\bin;D:\java\apache-maven-3.5.2\bin;C:\Program Files (x86)\Git\cmd;%ZOOKEEPER_HOME%\bin;.]
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 3614 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.2.14.Final}
HHH000206: hibernate.properties not found
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@664f4f7b: startup date [Sat Mar 24 16:07:48 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/delByGid]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.deleteByGid(java.lang.Long)
Mapped "{[/saveStaff]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.addStaff(com.jiemin.wages.domain.Staff)
Mapped "{[/findStaffByPage]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.findStaffByPage(com.jiemin.wages.domain.common.Pages,java.lang.String)
Mapped "{[/updateStaff]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.updateStaff(com.jiemin.wages.domain.Staff)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in exceptionHandle
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http) with context path ''
Started WagesApplication in 8.804 seconds (JVM running for 9.686)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 227 ms
===========开始请求com.jiemin.wages.controller.StaffController.updateStaff============
===========请求时间:2018-03-24 16:08:35==========================
url=http://localhost:8088/updateStaff
method=GET
ip=0:0:0:0:0:0:0:1
class_method=com.jiemin.wages.controller.StaffController.updateStaff
args=Staff(gid=14, userName=null, userSex=null, userTel=null, emergencyName=null, emergencyTel=null, bankCard=6228480470961795312)
=============结束请求时间:2018-03-24 16:08:35======================
Resolved exception caused by Handler execution: org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'serialVersionUID' in 'class com.jiemin.wages.domain.Staff'
Starting WagesApplication on SKY-20171023NXB with PID 10340 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2883debd: startup date [Sat Mar 24 16:08:56 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'dataSource' of type [com.alibaba.druid.pool.DruidDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'myBatisConfig' of type [com.jiemin.wages.config.MyBatisConfig$$EnhancerBySpringCGLIB$$4eabc294] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'annotationDrivenTransactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b0d4d8ce] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_131\bin;D:\java\apache-maven-3.5.2\bin;C:\Program Files (x86)\Git\cmd;%ZOOKEEPER_HOME%\bin;.]
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 2825 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.2.14.Final}
HHH000206: hibernate.properties not found
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2883debd: startup date [Sat Mar 24 16:08:56 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/updateStaff]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.updateStaff(com.jiemin.wages.domain.Staff)
Mapped "{[/findStaffByPage]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.findStaffByPage(com.jiemin.wages.domain.common.Pages,java.lang.String)
Mapped "{[/saveStaff]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.addStaff(com.jiemin.wages.domain.Staff)
Mapped "{[/delByGid]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.deleteByGid(java.lang.Long)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in exceptionHandle
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http) with context path ''
Started WagesApplication in 8.106 seconds (JVM running for 8.942)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 27 ms
===========开始请求com.jiemin.wages.controller.StaffController.updateStaff============
===========请求时间:2018-03-24 16:09:23==========================
url=http://localhost:8088/updateStaff
method=GET
ip=0:0:0:0:0:0:0:1
class_method=com.jiemin.wages.controller.StaffController.updateStaff
args=Staff(gid=14, userName=null, userSex=null, userTel=null, emergencyName=null, emergencyTel=null, bankCard=6228480470961795312)
=============结束请求时间:2018-03-24 16:09:24======================
response=Result(code=200, msg=成功, data=null, page=null)
Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2883debd: startup date [Sat Mar 24 16:08:56 CST 2018]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting WagesApplication on SKY-20171023NXB with PID 10340 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3a030bf5: startup date [Sat Mar 24 16:17:27 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'dataSource' of type [com.alibaba.druid.pool.DruidDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'myBatisConfig' of type [com.jiemin.wages.config.MyBatisConfig$$EnhancerBySpringCGLIB$$4eabc294] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'annotationDrivenTransactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b0d4d8ce] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 976 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3a030bf5: startup date [Sat Mar 24 16:17:27 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/updateStaff]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.updateStaff(com.jiemin.wages.domain.Staff)
Mapped "{[/findStaffByPage]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.findStaffByPage(com.jiemin.wages.domain.common.Pages,java.lang.String)
Mapped "{[/saveStaff]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.addStaff(com.jiemin.wages.domain.Staff)
Mapped "{[/delByGid]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.deleteByGid(java.lang.Long)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in exceptionHandle
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http) with context path ''
Started WagesApplication in 2.513 seconds (JVM running for 515.749)
Condition evaluation unchanged
Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3a030bf5: startup date [Sat Mar 24 16:17:27 CST 2018]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting WagesApplication on SKY-20171023NXB with PID 10340 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@556d79a8: startup date [Sat Mar 24 16:17:49 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'dataSource' of type [com.alibaba.druid.pool.DruidDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'myBatisConfig' of type [com.jiemin.wages.config.MyBatisConfig$$EnhancerBySpringCGLIB$$4eabc294] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'annotationDrivenTransactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b0d4d8ce] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 1024 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@556d79a8: startup date [Sat Mar 24 16:17:49 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/updateStaff]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.updateStaff(com.jiemin.wages.domain.Staff)
Mapped "{[/findStaffByPage]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.findStaffByPage(com.jiemin.wages.domain.common.Pages,java.lang.String)
Mapped "{[/saveStaff]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.addStaff(com.jiemin.wages.domain.Staff)
Mapped "{[/delByGid]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.deleteByGid(java.lang.Long)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in exceptionHandle
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http) with context path ''
Started WagesApplication in 2.747 seconds (JVM running for 537.344)
Condition evaluation unchanged
Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@556d79a8: startup date [Sat Mar 24 16:17:49 CST 2018]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting WagesApplication on SKY-20171023NXB with PID 10340 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@693bd638: startup date [Sat Mar 24 16:17:59 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'dataSource' of type [com.alibaba.druid.pool.DruidDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'myBatisConfig' of type [com.jiemin.wages.config.MyBatisConfig$$EnhancerBySpringCGLIB$$4eabc294] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'annotationDrivenTransactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b0d4d8ce] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 1349 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@693bd638: startup date [Sat Mar 24 16:17:59 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/updateStaff]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.updateStaff(com.jiemin.wages.domain.Staff)
Mapped "{[/findStaffByPage]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.findStaffByPage(com.jiemin.wages.domain.common.Pages,java.lang.String)
Mapped "{[/saveStaff]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.addStaff(com.jiemin.wages.domain.Staff)
Mapped "{[/delByGid]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.deleteByGid(java.lang.Long)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in exceptionHandle
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http) with context path ''
Started WagesApplication in 3.826 seconds (JVM running for 548.405)
Condition evaluation unchanged
Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@693bd638: startup date [Sat Mar 24 16:17:59 CST 2018]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting WagesApplication on SKY-20171023NXB with PID 10340 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@67143cac: startup date [Sat Mar 24 16:18:05 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'dataSource' of type [com.alibaba.druid.pool.DruidDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'myBatisConfig' of type [com.jiemin.wages.config.MyBatisConfig$$EnhancerBySpringCGLIB$$4eabc294] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'annotationDrivenTransactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b0d4d8ce] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 956 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@67143cac: startup date [Sat Mar 24 16:18:05 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/updateStaff]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.updateStaff(com.jiemin.wages.domain.Staff)
Mapped "{[/findStaffByPage]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.findStaffByPage(com.jiemin.wages.domain.common.Pages,java.lang.String)
Mapped "{[/saveStaff]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.addStaff(com.jiemin.wages.domain.Staff)
Mapped "{[/delByGid]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.deleteByGid(java.lang.Long)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in exceptionHandle
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http) with context path ''
Started WagesApplication in 2.733 seconds (JVM running for 553.848)
Condition evaluation unchanged
Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@67143cac: startup date [Sat Mar 24 16:18:05 CST 2018]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting WagesApplication on SKY-20171023NXB with PID 10340 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@61270ddb: startup date [Sat Mar 24 16:18:23 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'dataSource' of type [com.alibaba.druid.pool.DruidDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'myBatisConfig' of type [com.jiemin.wages.config.MyBatisConfig$$EnhancerBySpringCGLIB$$4eabc294] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'annotationDrivenTransactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b0d4d8ce] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 1253 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@61270ddb: startup date [Sat Mar 24 16:18:23 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/updateStaff]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.updateStaff(com.jiemin.wages.domain.Staff)
Mapped "{[/findStaffByPage]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.findStaffByPage(com.jiemin.wages.domain.common.Pages,java.lang.String)
Mapped "{[/saveStaff]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.addStaff(com.jiemin.wages.domain.Staff)
Mapped "{[/delByGid]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.deleteByGid(java.lang.Long)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in exceptionHandle
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http) with context path ''
Started WagesApplication in 2.733 seconds (JVM running for 571.144)
Condition evaluation unchanged
Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@61270ddb: startup date [Sat Mar 24 16:18:23 CST 2018]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting WagesApplication on SKY-20171023NXB with PID 10340 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@654b0e6b: startup date [Sat Mar 24 16:18:33 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'dataSource' of type [com.alibaba.druid.pool.DruidDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'myBatisConfig' of type [com.jiemin.wages.config.MyBatisConfig$$EnhancerBySpringCGLIB$$4eabc294] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'annotationDrivenTransactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b0d4d8ce] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 1317 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@654b0e6b: startup date [Sat Mar 24 16:18:33 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/updateStaff]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.updateStaff(com.jiemin.wages.domain.Staff)
Mapped "{[/findStaffByPage]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.findStaffByPage(com.jiemin.wages.domain.common.Pages,java.lang.String)
Mapped "{[/saveStaff]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.addStaff(com.jiemin.wages.domain.Staff)
Mapped "{[/delByGid]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.deleteByGid(java.lang.Long)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in exceptionHandle
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http) with context path ''
Started WagesApplication in 2.971 seconds (JVM running for 581.649)
Condition evaluation unchanged
Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@654b0e6b: startup date [Sat Mar 24 16:18:33 CST 2018]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting WagesApplication on SKY-20171023NXB with PID 10340 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@bf3e511: startup date [Sat Mar 24 16:18:38 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'dataSource' of type [com.alibaba.druid.pool.DruidDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'myBatisConfig' of type [com.jiemin.wages.config.MyBatisConfig$$EnhancerBySpringCGLIB$$4eabc294] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'annotationDrivenTransactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b0d4d8ce] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 1089 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@bf3e511: startup date [Sat Mar 24 16:18:38 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/updateStaff]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.updateStaff(com.jiemin.wages.domain.Staff)
Mapped "{[/findStaffByPage]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.findStaffByPage(com.jiemin.wages.domain.common.Pages,java.lang.String)
Mapped "{[/saveStaff]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.addStaff(com.jiemin.wages.domain.Staff)
Mapped "{[/delByGid]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.deleteByGid(java.lang.Long)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in exceptionHandle
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http) with context path ''
Started WagesApplication in 2.631 seconds (JVM running for 586.912)
Condition evaluation unchanged
Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@bf3e511: startup date [Sat Mar 24 16:18:38 CST 2018]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting WagesApplication on SKY-20171023NXB with PID 10340 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@55850ee4: startup date [Sat Mar 24 16:19:02 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.SalaryTyoeRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'dataSource' of type [com.alibaba.druid.pool.DruidDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'myBatisConfig' of type [com.jiemin.wages.config.MyBatisConfig$$EnhancerBySpringCGLIB$$4eabc294] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'annotationDrivenTransactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b0d4d8ce] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 894 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'requestMappingHandlerAdapter' defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter]: Factory method 'requestMappingHandlerAdapter' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'mvcConversionService' defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.format.support.FormattingConversionService]: Factory method 'mvcConversionService' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'salaryTyoeRepository': Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Not a managed type: class com.jiemin.wages.domain.SalaryType
Closing JPA EntityManagerFactory for persistence unit 'default'
Stopping service [Tomcat]


Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
Starting WagesApplication on SKY-20171023NXB with PID 10340 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@328a3656: startup date [Sat Mar 24 16:19:23 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.SalaryTyoeRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'dataSource' of type [com.alibaba.druid.pool.DruidDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'myBatisConfig' of type [com.jiemin.wages.config.MyBatisConfig$$EnhancerBySpringCGLIB$$4eabc294] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'annotationDrivenTransactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b0d4d8ce] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 994 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'requestMappingHandlerAdapter' defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter]: Factory method 'requestMappingHandlerAdapter' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'mvcConversionService' defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.format.support.FormattingConversionService]: Factory method 'mvcConversionService' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'salaryTyoeRepository': Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Not a managed type: class com.jiemin.wages.domain.SalaryType
Closing JPA EntityManagerFactory for persistence unit 'default'
Stopping service [Tomcat]


Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
Starting WagesApplication on SKY-20171023NXB with PID 10340 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6e6c3563: startup date [Sat Mar 24 16:19:41 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.SalaryTyoeRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'dataSource' of type [com.alibaba.druid.pool.DruidDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'myBatisConfig' of type [com.jiemin.wages.config.MyBatisConfig$$EnhancerBySpringCGLIB$$4eabc294] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'annotationDrivenTransactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b0d4d8ce] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 1134 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'requestMappingHandlerAdapter' defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter]: Factory method 'requestMappingHandlerAdapter' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'mvcConversionService' defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.format.support.FormattingConversionService]: Factory method 'mvcConversionService' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'salaryTyoeRepository': Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Not a managed type: class com.jiemin.wages.domain.SalaryType
Closing JPA EntityManagerFactory for persistence unit 'default'
Stopping service [Tomcat]


Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
Starting WagesApplication on SKY-20171023NXB with PID 10340 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6d16167b: startup date [Sat Mar 24 16:19:55 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.SalaryTyoeRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'dataSource' of type [com.alibaba.druid.pool.DruidDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'myBatisConfig' of type [com.jiemin.wages.config.MyBatisConfig$$EnhancerBySpringCGLIB$$4eabc294] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'annotationDrivenTransactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b0d4d8ce] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 1200 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'requestMappingHandlerAdapter' defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter]: Factory method 'requestMappingHandlerAdapter' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'mvcConversionService' defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.format.support.FormattingConversionService]: Factory method 'mvcConversionService' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'salaryTyoeRepository': Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Not a managed type: class com.jiemin.wages.domain.SalaryType
Closing JPA EntityManagerFactory for persistence unit 'default'
Stopping service [Tomcat]


Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
Starting WagesApplication on SKY-20171023NXB with PID 10340 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@522e26ad: startup date [Sat Mar 24 16:20:45 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@522e26ad: startup date [Sat Mar 24 16:20:45 CST 2018]; root of context hierarchy
Starting WagesApplication on SKY-20171023NXB with PID 10340 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@12bac14b: startup date [Sat Mar 24 16:20:49 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.SalaryTyoeRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'dataSource' of type [com.alibaba.druid.pool.DruidDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'myBatisConfig' of type [com.jiemin.wages.config.MyBatisConfig$$EnhancerBySpringCGLIB$$4eabc294] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'annotationDrivenTransactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b0d4d8ce] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 881 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@12bac14b: startup date [Sat Mar 24 16:20:49 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/updateStaff]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.updateStaff(com.jiemin.wages.domain.Staff)
Mapped "{[/findStaffByPage]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.findStaffByPage(com.jiemin.wages.domain.common.Pages,java.lang.String)
Mapped "{[/saveStaff]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.addStaff(com.jiemin.wages.domain.Staff)
Mapped "{[/delByGid]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.deleteByGid(java.lang.Long)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in exceptionHandle
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http) with context path ''
Started WagesApplication in 2.282 seconds (JVM running for 716.665)
Condition evaluation unchanged
Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@12bac14b: startup date [Sat Mar 24 16:20:49 CST 2018]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting WagesApplication on SKY-20171023NXB with PID 10340 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@74077de8: startup date [Sat Mar 24 16:21:10 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.SalaryTyoeRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'dataSource' of type [com.alibaba.druid.pool.DruidDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'myBatisConfig' of type [com.jiemin.wages.config.MyBatisConfig$$EnhancerBySpringCGLIB$$4eabc294] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'annotationDrivenTransactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b0d4d8ce] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 1498 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@74077de8: startup date [Sat Mar 24 16:21:10 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/updateStaff]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.updateStaff(com.jiemin.wages.domain.Staff)
Mapped "{[/findStaffByPage]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.findStaffByPage(com.jiemin.wages.domain.common.Pages,java.lang.String)
Mapped "{[/saveStaff]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.addStaff(com.jiemin.wages.domain.Staff)
Mapped "{[/delByGid]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.deleteByGid(java.lang.Long)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in exceptionHandle
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http) with context path ''
Started WagesApplication in 3.248 seconds (JVM running for 739.057)
Condition evaluation unchanged
Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@74077de8: startup date [Sat Mar 24 16:21:10 CST 2018]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting WagesApplication on SKY-20171023NXB with PID 10340 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@51e248ce: startup date [Sat Mar 24 16:21:15 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@51e248ce: startup date [Sat Mar 24 16:21:15 CST 2018]; root of context hierarchy
Starting WagesApplication on SKY-20171023NXB with PID 10340 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@24f5539f: startup date [Sat Mar 24 16:21:43 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.SalaryTyoeRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'dataSource' of type [com.alibaba.druid.pool.DruidDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'myBatisConfig' of type [com.jiemin.wages.config.MyBatisConfig$$EnhancerBySpringCGLIB$$4eabc294] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'annotationDrivenTransactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b0d4d8ce] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 1383 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@24f5539f: startup date [Sat Mar 24 16:21:43 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/updateStaff]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.updateStaff(com.jiemin.wages.domain.Staff)
Mapped "{[/findStaffByPage]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.findStaffByPage(com.jiemin.wages.domain.common.Pages,java.lang.String)
Mapped "{[/saveStaff]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.addStaff(com.jiemin.wages.domain.Staff)
Mapped "{[/delByGid]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.deleteByGid(java.lang.Long)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in exceptionHandle
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http) with context path ''
Started WagesApplication in 3.112 seconds (JVM running for 771.456)
Condition evaluation unchanged
Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@24f5539f: startup date [Sat Mar 24 16:21:43 CST 2018]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting WagesApplication on SKY-20171023NXB with PID 10340 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@30e74e4b: startup date [Sat Mar 24 16:21:53 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@30e74e4b: startup date [Sat Mar 24 16:21:53 CST 2018]; root of context hierarchy
Starting WagesApplication on SKY-20171023NXB with PID 10340 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@20be48c8: startup date [Sat Mar 24 16:21:56 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.SalaryTyoeRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'dataSource' of type [com.alibaba.druid.pool.DruidDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'myBatisConfig' of type [com.jiemin.wages.config.MyBatisConfig$$EnhancerBySpringCGLIB$$4eabc294] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'annotationDrivenTransactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b0d4d8ce] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 1191 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@20be48c8: startup date [Sat Mar 24 16:21:56 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/updateStaff]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.updateStaff(com.jiemin.wages.domain.Staff)
Mapped "{[/findStaffByPage]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.findStaffByPage(com.jiemin.wages.domain.common.Pages,java.lang.String)
Mapped "{[/saveStaff]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.addStaff(com.jiemin.wages.domain.Staff)
Mapped "{[/delByGid]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.deleteByGid(java.lang.Long)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in exceptionHandle
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http) with context path ''
Started WagesApplication in 3.288 seconds (JVM running for 785.501)
Condition evaluation unchanged
Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@20be48c8: startup date [Sat Mar 24 16:21:56 CST 2018]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting WagesApplication on SKY-20171023NXB with PID 10340 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@42d42723: startup date [Sat Mar 24 16:22:11 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.SalaryTyoeRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'dataSource' of type [com.alibaba.druid.pool.DruidDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'myBatisConfig' of type [com.jiemin.wages.config.MyBatisConfig$$EnhancerBySpringCGLIB$$4eabc294] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'annotationDrivenTransactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b0d4d8ce] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 1511 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'requestMappingHandlerAdapter' defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter]: Factory method 'requestMappingHandlerAdapter' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'mvcConversionService' defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.format.support.FormattingConversionService]: Factory method 'mvcConversionService' threw exception; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'salaryTyoeRepository': Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Not a managed type: class com.jiemin.wages.domain.SalaryType
Closing JPA EntityManagerFactory for persistence unit 'default'
Stopping service [Tomcat]


Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
Starting WagesApplication on SKY-20171023NXB with PID 10340 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2a78eda7: startup date [Sat Mar 24 16:22:19 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.SalaryTyoeRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'dataSource' of type [com.alibaba.druid.pool.DruidDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'myBatisConfig' of type [com.jiemin.wages.config.MyBatisConfig$$EnhancerBySpringCGLIB$$4eabc294] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'annotationDrivenTransactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b0d4d8ce] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 1109 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory
Stopping service [Tomcat]


Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
Starting WagesApplication on SKY-20171023NXB with PID 10340 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5c3085d3: startup date [Sat Mar 24 16:22:59 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.SalaryTyoeRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'dataSource' of type [com.alibaba.druid.pool.DruidDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'myBatisConfig' of type [com.jiemin.wages.config.MyBatisConfig$$EnhancerBySpringCGLIB$$4eabc294] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'annotationDrivenTransactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b0d4d8ce] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 1346 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory
Stopping service [Tomcat]


Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
Starting WagesApplication on SKY-20171023NXB with PID 10340 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3dcf4948: startup date [Sat Mar 24 16:23:04 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.SalaryTyoeRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'dataSource' of type [com.alibaba.druid.pool.DruidDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'myBatisConfig' of type [com.jiemin.wages.config.MyBatisConfig$$EnhancerBySpringCGLIB$$4eabc294] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'annotationDrivenTransactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b0d4d8ce] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 1044 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build Hibernate SessionFactory
Stopping service [Tomcat]


Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
Starting WagesApplication on SKY-20171023NXB with PID 10340 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4507acdb: startup date [Sat Mar 24 16:23:08 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.SalaryTyoeRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'dataSource' of type [com.alibaba.druid.pool.DruidDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'myBatisConfig' of type [com.jiemin.wages.config.MyBatisConfig$$EnhancerBySpringCGLIB$$4eabc294] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'annotationDrivenTransactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b0d4d8ce] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 1138 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4507acdb: startup date [Sat Mar 24 16:23:08 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/updateStaff]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.updateStaff(com.jiemin.wages.domain.Staff)
Mapped "{[/findStaffByPage]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.findStaffByPage(com.jiemin.wages.domain.common.Pages,java.lang.String)
Mapped "{[/saveStaff]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.addStaff(com.jiemin.wages.domain.Staff)
Mapped "{[/delByGid]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.deleteByGid(java.lang.Long)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in exceptionHandle
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http) with context path ''
Started WagesApplication in 2.882 seconds (JVM running for 856.465)
Condition evaluation unchanged
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 10 ms
===========开始请求com.jiemin.wages.controller.StaffController.updateStaff============
===========请求时间:2018-03-24 16:29:25==========================
url=http://localhost:8088/updateStaff
method=GET
ip=0:0:0:0:0:0:0:1
class_method=com.jiemin.wages.controller.StaffController.updateStaff
args=Staff(gid=14, userName=null, userSex=null, userTel=null, emergencyName=null, emergencyTel=null, bankCard=7228480470961795312)
=============结束请求时间:2018-03-24 16:29:25======================
response=Result(code=200, msg=成功, data=null, page=null)
===========开始请求com.jiemin.wages.controller.StaffController.updateStaff============
===========请求时间:2018-03-24 16:31:18==========================
url=http://localhost:8088/updateStaff
method=GET
ip=0:0:0:0:0:0:0:1
class_method=com.jiemin.wages.controller.StaffController.updateStaff
args=Staff(gid=14, userName=null, userSex=null, userTel=null, emergencyName=null, emergencyTel=null, bankCard=7228480470961795312)
=============结束请求时间:2018-03-24 16:31:18======================
response=Result(code=200, msg=成功, data=null, page=null)
===========开始请求com.jiemin.wages.controller.StaffController.updateStaff============
===========请求时间:2018-03-24 16:31:40==========================
url=http://localhost:8088/updateStaff
method=GET
ip=0:0:0:0:0:0:0:1
class_method=com.jiemin.wages.controller.StaffController.updateStaff
args=Staff(gid=14, userName=null, userSex=null, userTel=null, emergencyName=null, emergencyTel=null, bankCard=6228480470961795312)
=============结束请求时间:2018-03-24 16:31:40======================
response=Result(code=200, msg=成功, data=null, page=null)
Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4507acdb: startup date [Sat Mar 24 16:23:08 CST 2018]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting WagesApplication on SKY-20171023NXB with PID 10340 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6e0aa202: startup date [Sat Mar 24 16:32:37 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.SalaryTyoeRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'dataSource' of type [com.alibaba.druid.pool.DruidDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'myBatisConfig' of type [com.jiemin.wages.config.MyBatisConfig$$EnhancerBySpringCGLIB$$4eabc294] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'annotationDrivenTransactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b0d4d8ce] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 1274 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6e0aa202: startup date [Sat Mar 24 16:32:37 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/updateStaff]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.updateStaff(com.jiemin.wages.domain.Staff)
Mapped "{[/findStaffByPage]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.findStaffByPage(com.jiemin.wages.domain.common.Pages,java.lang.String)
Mapped "{[/saveStaff]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.addStaff(com.jiemin.wages.domain.Staff)
Mapped "{[/delByGid]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.deleteByGid(java.lang.Long)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in exceptionHandle
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http) with context path ''
Started WagesApplication in 4.033 seconds (JVM running for 1426.887)
Condition evaluation unchanged
Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6e0aa202: startup date [Sat Mar 24 16:32:37 CST 2018]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting WagesApplication on SKY-20171023NXB with PID 10340 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@43a8d26f: startup date [Sat Mar 24 16:32:43 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.SalaryTyoeRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'dataSource' of type [com.alibaba.druid.pool.DruidDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'myBatisConfig' of type [com.jiemin.wages.config.MyBatisConfig$$EnhancerBySpringCGLIB$$4eabc294] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'annotationDrivenTransactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b0d4d8ce] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 906 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@43a8d26f: startup date [Sat Mar 24 16:32:43 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/updateStaff]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.updateStaff(com.jiemin.wages.domain.Staff)
Mapped "{[/findStaffByPage]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.findStaffByPage(com.jiemin.wages.domain.common.Pages,java.lang.String)
Mapped "{[/saveStaff]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.addStaff(com.jiemin.wages.domain.Staff)
Mapped "{[/delByGid]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.deleteByGid(java.lang.Long)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in exceptionHandle
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http) with context path ''
Started WagesApplication in 2.511 seconds (JVM running for 1430.901)
Condition evaluation unchanged
Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@43a8d26f: startup date [Sat Mar 24 16:32:43 CST 2018]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting WagesApplication on SKY-20171023NXB with PID 10340 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3c0ac1e0: startup date [Sat Mar 24 16:34:15 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'dataSource' of type [com.alibaba.druid.pool.DruidDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'myBatisConfig' of type [com.jiemin.wages.config.MyBatisConfig$$EnhancerBySpringCGLIB$$4eabc294] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'annotationDrivenTransactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b0d4d8ce] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 1252 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3c0ac1e0: startup date [Sat Mar 24 16:34:15 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/updateStaff]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.updateStaff(com.jiemin.wages.domain.Staff)
Mapped "{[/findStaffByPage]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.findStaffByPage(com.jiemin.wages.domain.common.Pages,java.lang.String)
Mapped "{[/saveStaff]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.addStaff(com.jiemin.wages.domain.Staff)
Mapped "{[/delByGid]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.deleteByGid(java.lang.Long)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in exceptionHandle
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http) with context path ''
Started WagesApplication in 2.827 seconds (JVM running for 1523.171)
Condition evaluation unchanged
Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3c0ac1e0: startup date [Sat Mar 24 16:34:15 CST 2018]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting WagesApplication on SKY-20171023NXB with PID 10340 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@277e870a: startup date [Sat Mar 24 16:34:46 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.SalaryTypeRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'dataSource' of type [com.alibaba.druid.pool.DruidDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'myBatisConfig' of type [com.jiemin.wages.config.MyBatisConfig$$EnhancerBySpringCGLIB$$4eabc294] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'annotationDrivenTransactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b0d4d8ce] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 936 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@277e870a: startup date [Sat Mar 24 16:34:46 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/updateStaff]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.updateStaff(com.jiemin.wages.domain.Staff)
Mapped "{[/findStaffByPage]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.findStaffByPage(com.jiemin.wages.domain.common.Pages,java.lang.String)
Mapped "{[/saveStaff]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.addStaff(com.jiemin.wages.domain.Staff)
Mapped "{[/delByGid]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.deleteByGid(java.lang.Long)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in exceptionHandle
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http) with context path ''
Started WagesApplication in 2.574 seconds (JVM running for 1554.197)
Condition evaluation unchanged
Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@277e870a: startup date [Sat Mar 24 16:34:46 CST 2018]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting WagesApplication on SKY-20171023NXB with PID 10340 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2e33a0c4: startup date [Sat Mar 24 16:35:33 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.SalaryTypeRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'dataSource' of type [com.alibaba.druid.pool.DruidDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'myBatisConfig' of type [com.jiemin.wages.config.MyBatisConfig$$EnhancerBySpringCGLIB$$4eabc294] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'annotationDrivenTransactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b0d4d8ce] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 1073 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2e33a0c4: startup date [Sat Mar 24 16:35:33 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/updateStaff]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.updateStaff(com.jiemin.wages.domain.Staff)
Mapped "{[/findStaffByPage]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.findStaffByPage(com.jiemin.wages.domain.common.Pages,java.lang.String)
Mapped "{[/saveStaff]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.addStaff(com.jiemin.wages.domain.Staff)
Mapped "{[/delByGid]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.deleteByGid(java.lang.Long)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in exceptionHandle
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http) with context path ''
Started WagesApplication in 3.083 seconds (JVM running for 1601.654)
Condition evaluation unchanged
Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2e33a0c4: startup date [Sat Mar 24 16:35:33 CST 2018]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting WagesApplication on SKY-20171023NXB with PID 10340 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@e65aae3: startup date [Sat Mar 24 16:35:43 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.SalaryTypeRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'dataSource' of type [com.alibaba.druid.pool.DruidDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'myBatisConfig' of type [com.jiemin.wages.config.MyBatisConfig$$EnhancerBySpringCGLIB$$4eabc294] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'annotationDrivenTransactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b0d4d8ce] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 1243 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@e65aae3: startup date [Sat Mar 24 16:35:43 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/updateStaff]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.updateStaff(com.jiemin.wages.domain.Staff)
Mapped "{[/findStaffByPage]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.findStaffByPage(com.jiemin.wages.domain.common.Pages,java.lang.String)
Mapped "{[/saveStaff]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.addStaff(com.jiemin.wages.domain.Staff)
Mapped "{[/delByGid]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.deleteByGid(java.lang.Long)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in exceptionHandle
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http) with context path ''
Started WagesApplication in 2.919 seconds (JVM running for 1612.172)
Condition evaluation unchanged
Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@e65aae3: startup date [Sat Mar 24 16:35:43 CST 2018]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting WagesApplication on SKY-20171023NXB with PID 10340 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2f3880d0: startup date [Sat Mar 24 16:35:48 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.SalaryTypeRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'dataSource' of type [com.alibaba.druid.pool.DruidDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'myBatisConfig' of type [com.jiemin.wages.config.MyBatisConfig$$EnhancerBySpringCGLIB$$4eabc294] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'annotationDrivenTransactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b0d4d8ce] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 1325 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2f3880d0: startup date [Sat Mar 24 16:35:48 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/updateStaff]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.updateStaff(com.jiemin.wages.domain.Staff)
Mapped "{[/findStaffByPage]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.findStaffByPage(com.jiemin.wages.domain.common.Pages,java.lang.String)
Mapped "{[/saveStaff]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.addStaff(com.jiemin.wages.domain.Staff)
Mapped "{[/delByGid]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.deleteByGid(java.lang.Long)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in exceptionHandle
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http) with context path ''
Started WagesApplication in 3.491 seconds (JVM running for 1617.485)
Condition evaluation unchanged
Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2f3880d0: startup date [Sat Mar 24 16:35:48 CST 2018]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting WagesApplication on SKY-20171023NXB with PID 10340 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@464ddb88: startup date [Sat Mar 24 16:36:51 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.SalaryTypeRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'dataSource' of type [com.alibaba.druid.pool.DruidDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'myBatisConfig' of type [com.jiemin.wages.config.MyBatisConfig$$EnhancerBySpringCGLIB$$4eabc294] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'annotationDrivenTransactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b0d4d8ce] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 1449 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@464ddb88: startup date [Sat Mar 24 16:36:51 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/updateStaff]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.updateStaff(com.jiemin.wages.domain.Staff)
Mapped "{[/findStaffByPage]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.findStaffByPage(com.jiemin.wages.domain.common.Pages,java.lang.String)
Mapped "{[/saveStaff]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.addStaff(com.jiemin.wages.domain.Staff)
Mapped "{[/delByGid]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.deleteByGid(java.lang.Long)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in exceptionHandle
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http) with context path ''
Started WagesApplication in 3.239 seconds (JVM running for 1679.986)
Condition evaluation unchanged
Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@464ddb88: startup date [Sat Mar 24 16:36:51 CST 2018]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting WagesApplication on SKY-20171023NXB with PID 10340 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@e7c398e: startup date [Sat Mar 24 16:37:33 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.SalaryTypeRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'dataSource' of type [com.alibaba.druid.pool.DruidDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'myBatisConfig' of type [com.jiemin.wages.config.MyBatisConfig$$EnhancerBySpringCGLIB$$4eabc294] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'annotationDrivenTransactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b0d4d8ce] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 1378 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@e7c398e: startup date [Sat Mar 24 16:37:33 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/updateStaff]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.updateStaff(com.jiemin.wages.domain.Staff)
Mapped "{[/findStaffByPage]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.findStaffByPage(com.jiemin.wages.domain.common.Pages,java.lang.String)
Mapped "{[/saveStaff]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.addStaff(com.jiemin.wages.domain.Staff)
Mapped "{[/delByGid]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.deleteByGid(java.lang.Long)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in exceptionHandle
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http) with context path ''
Started WagesApplication in 2.892 seconds (JVM running for 1721.556)
Condition evaluation unchanged
Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@e7c398e: startup date [Sat Mar 24 16:37:33 CST 2018]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting WagesApplication on SKY-20171023NXB with PID 10340 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@21a43b4b: startup date [Sat Mar 24 16:38:01 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.SalaryTypeRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'dataSource' of type [com.alibaba.druid.pool.DruidDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'myBatisConfig' of type [com.jiemin.wages.config.MyBatisConfig$$EnhancerBySpringCGLIB$$4eabc294] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'annotationDrivenTransactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b0d4d8ce] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 1898 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'salaryTypeController' defined in file [D:\project\project\wages\target\classes\com\jiemin\wages\controller\SalaryTypeController.class]: Post-processing of merged bean definition failed; nested exception is java.lang.IllegalStateException: Failed to introspect Class [com.jiemin.wages.controller.SalaryTypeController] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@4730de88]
Closing JPA EntityManagerFactory for persistence unit 'default'
Stopping service [Tomcat]


Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
Starting WagesApplication on SKY-20171023NXB with PID 10340 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@548d8d53: startup date [Sat Mar 24 16:38:05 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.SalaryTypeRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'dataSource' of type [com.alibaba.druid.pool.DruidDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'myBatisConfig' of type [com.jiemin.wages.config.MyBatisConfig$$EnhancerBySpringCGLIB$$4eabc294] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'annotationDrivenTransactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b0d4d8ce] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 1627 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'salaryTypeController' defined in file [D:\project\project\wages\target\classes\com\jiemin\wages\controller\SalaryTypeController.class]: Post-processing of merged bean definition failed; nested exception is java.lang.IllegalStateException: Failed to introspect Class [com.jiemin.wages.controller.SalaryTypeController] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@319db84]
Closing JPA EntityManagerFactory for persistence unit 'default'
Stopping service [Tomcat]


Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
Starting WagesApplication on SKY-20171023NXB with PID 10340 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6f698305: startup date [Sat Mar 24 16:38:10 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.SalaryTypeRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'dataSource' of type [com.alibaba.druid.pool.DruidDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'myBatisConfig' of type [com.jiemin.wages.config.MyBatisConfig$$EnhancerBySpringCGLIB$$4eabc294] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'annotationDrivenTransactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b0d4d8ce] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 1451 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6f698305: startup date [Sat Mar 24 16:38:10 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/updateStaff]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.updateStaff(com.jiemin.wages.domain.Staff)
Mapped "{[/findStaffByPage]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.findStaffByPage(com.jiemin.wages.domain.common.Pages,java.lang.String)
Mapped "{[/saveStaff]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.addStaff(com.jiemin.wages.domain.Staff)
Mapped "{[/delByGid]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.deleteByGid(java.lang.Long)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in exceptionHandle
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http) with context path ''
Started WagesApplication in 3.083 seconds (JVM running for 1758.532)
Condition evaluation unchanged
Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6f698305: startup date [Sat Mar 24 16:38:10 CST 2018]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting WagesApplication on SKY-20171023NXB with PID 10340 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1d148f53: startup date [Sat Mar 24 16:38:18 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.SalaryTypeRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'dataSource' of type [com.alibaba.druid.pool.DruidDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'myBatisConfig' of type [com.jiemin.wages.config.MyBatisConfig$$EnhancerBySpringCGLIB$$4eabc294] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'annotationDrivenTransactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b0d4d8ce] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 919 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'salaryTypeController' defined in file [D:\project\project\wages\target\classes\com\jiemin\wages\controller\SalaryTypeController.class]: Post-processing of merged bean definition failed; nested exception is java.lang.IllegalStateException: Failed to introspect Class [com.jiemin.wages.controller.SalaryTypeController] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@6c15c907]
Closing JPA EntityManagerFactory for persistence unit 'default'
Stopping service [Tomcat]


Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
Starting WagesApplication on SKY-20171023NXB with PID 10340 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@67a9d0da: startup date [Sat Mar 24 16:38:30 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.SalaryTypeRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'dataSource' of type [com.alibaba.druid.pool.DruidDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'myBatisConfig' of type [com.jiemin.wages.config.MyBatisConfig$$EnhancerBySpringCGLIB$$4eabc294] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'annotationDrivenTransactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b0d4d8ce] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 1384 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@67a9d0da: startup date [Sat Mar 24 16:38:30 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/updateStaff]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.updateStaff(com.jiemin.wages.domain.Staff)
Mapped "{[/findStaffByPage]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.findStaffByPage(com.jiemin.wages.domain.common.Pages,java.lang.String)
Mapped "{[/saveStaff]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.addStaff(com.jiemin.wages.domain.Staff)
Mapped "{[/delByGid]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.deleteByGid(java.lang.Long)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in exceptionHandle
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http) with context path ''
Started WagesApplication in 2.931 seconds (JVM running for 1778.87)
Condition evaluation unchanged
Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@67a9d0da: startup date [Sat Mar 24 16:38:30 CST 2018]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting WagesApplication on SKY-20171023NXB with PID 10340 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2f0e6e63: startup date [Sat Mar 24 16:39:06 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.SalaryTypeRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'dataSource' of type [com.alibaba.druid.pool.DruidDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'myBatisConfig' of type [com.jiemin.wages.config.MyBatisConfig$$EnhancerBySpringCGLIB$$4eabc294] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'annotationDrivenTransactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b0d4d8ce] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 953 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'salaryTypeController' defined in file [D:\project\project\wages\target\classes\com\jiemin\wages\controller\SalaryTypeController.class]: Post-processing of merged bean definition failed; nested exception is java.lang.IllegalStateException: Failed to introspect Class [com.jiemin.wages.controller.SalaryTypeController] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@1885e6d0]
Closing JPA EntityManagerFactory for persistence unit 'default'
Stopping service [Tomcat]


Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
Starting WagesApplication on SKY-20171023NXB with PID 10340 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@245d5814: startup date [Sat Mar 24 16:39:31 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.SalaryTypeRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'dataSource' of type [com.alibaba.druid.pool.DruidDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'myBatisConfig' of type [com.jiemin.wages.config.MyBatisConfig$$EnhancerBySpringCGLIB$$4eabc294] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'annotationDrivenTransactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b0d4d8ce] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 1276 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'salaryTypeController' defined in file [D:\project\project\wages\target\classes\com\jiemin\wages\controller\SalaryTypeController.class]: Post-processing of merged bean definition failed; nested exception is java.lang.IllegalStateException: Failed to introspect Class [com.jiemin.wages.controller.SalaryTypeController] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@68dfced3]
Closing JPA EntityManagerFactory for persistence unit 'default'
Stopping service [Tomcat]


Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
Starting WagesApplication on SKY-20171023NXB with PID 10340 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7396cd3e: startup date [Sat Mar 24 16:39:35 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.SalaryTypeRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'dataSource' of type [com.alibaba.druid.pool.DruidDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'myBatisConfig' of type [com.jiemin.wages.config.MyBatisConfig$$EnhancerBySpringCGLIB$$4eabc294] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'annotationDrivenTransactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b0d4d8ce] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 1334 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'salaryTypeController' defined in file [D:\project\project\wages\target\classes\com\jiemin\wages\controller\SalaryTypeController.class]: Post-processing of merged bean definition failed; nested exception is java.lang.IllegalStateException: Failed to introspect Class [com.jiemin.wages.controller.SalaryTypeController] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@405a395b]
Closing JPA EntityManagerFactory for persistence unit 'default'
Stopping service [Tomcat]


Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
Starting WagesApplication on SKY-20171023NXB with PID 10340 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@186e33ec: startup date [Sat Mar 24 16:39:39 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.SalaryTypeRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'dataSource' of type [com.alibaba.druid.pool.DruidDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'myBatisConfig' of type [com.jiemin.wages.config.MyBatisConfig$$EnhancerBySpringCGLIB$$4eabc294] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'annotationDrivenTransactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b0d4d8ce] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 1299 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@186e33ec: startup date [Sat Mar 24 16:39:39 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/updateStaff]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.updateStaff(com.jiemin.wages.domain.Staff)
Mapped "{[/findStaffByPage]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.findStaffByPage(com.jiemin.wages.domain.common.Pages,java.lang.String)
Mapped "{[/saveStaff]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.addStaff(com.jiemin.wages.domain.Staff)
Mapped "{[/delByGid]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.deleteByGid(java.lang.Long)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in exceptionHandle
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http) with context path ''
Started WagesApplication in 3.227 seconds (JVM running for 1848.479)
Condition evaluation unchanged
Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@186e33ec: startup date [Sat Mar 24 16:39:39 CST 2018]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting WagesApplication on SKY-20171023NXB with PID 10340 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5dbb189d: startup date [Sat Mar 24 16:40:21 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.SalaryTypeRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'dataSource' of type [com.alibaba.druid.pool.DruidDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'myBatisConfig' of type [com.jiemin.wages.config.MyBatisConfig$$EnhancerBySpringCGLIB$$4eabc294] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'annotationDrivenTransactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b0d4d8ce] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 1941 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'salaryTypeController' defined in file [D:\project\project\wages\target\classes\com\jiemin\wages\controller\SalaryTypeController.class]: Post-processing of merged bean definition failed; nested exception is java.lang.IllegalStateException: Failed to introspect Class [com.jiemin.wages.controller.SalaryTypeController] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@48b2a1b4]
Closing JPA EntityManagerFactory for persistence unit 'default'
Stopping service [Tomcat]


Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
Starting WagesApplication on SKY-20171023NXB with PID 10340 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@468d0483: startup date [Sat Mar 24 16:40:36 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.SalaryTypeRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'dataSource' of type [com.alibaba.druid.pool.DruidDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'myBatisConfig' of type [com.jiemin.wages.config.MyBatisConfig$$EnhancerBySpringCGLIB$$4eabc294] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'annotationDrivenTransactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b0d4d8ce] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 1363 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@468d0483: startup date [Sat Mar 24 16:40:36 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/updateStaff]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.updateStaff(com.jiemin.wages.domain.Staff)
Mapped "{[/findStaffByPage]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.findStaffByPage(com.jiemin.wages.domain.common.Pages,java.lang.String)
Mapped "{[/saveStaff]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.addStaff(com.jiemin.wages.domain.Staff)
Mapped "{[/delByGid]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.deleteByGid(java.lang.Long)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in exceptionHandle
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http) with context path ''
Started WagesApplication in 3.124 seconds (JVM running for 1905.34)
Condition evaluation unchanged
Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@468d0483: startup date [Sat Mar 24 16:40:36 CST 2018]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting WagesApplication on SKY-20171023NXB with PID 10340 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@d42263e: startup date [Sat Mar 24 16:40:42 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.SalaryTypeRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'dataSource' of type [com.alibaba.druid.pool.DruidDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'myBatisConfig' of type [com.jiemin.wages.config.MyBatisConfig$$EnhancerBySpringCGLIB$$4eabc294] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'annotationDrivenTransactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b0d4d8ce] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 1506 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@d42263e: startup date [Sat Mar 24 16:40:42 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/updateStaff]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.updateStaff(com.jiemin.wages.domain.Staff)
Mapped "{[/findStaffByPage]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.findStaffByPage(com.jiemin.wages.domain.common.Pages,java.lang.String)
Mapped "{[/saveStaff]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.addStaff(com.jiemin.wages.domain.Staff)
Mapped "{[/delByGid]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.deleteByGid(java.lang.Long)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in exceptionHandle
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http) with context path ''
Started WagesApplication in 3.175 seconds (JVM running for 1911.215)
Condition evaluation unchanged
Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@d42263e: startup date [Sat Mar 24 16:40:42 CST 2018]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting WagesApplication on SKY-20171023NXB with PID 10340 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@93f0f08: startup date [Sat Mar 24 16:40:52 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.SalaryTypeRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'dataSource' of type [com.alibaba.druid.pool.DruidDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'myBatisConfig' of type [com.jiemin.wages.config.MyBatisConfig$$EnhancerBySpringCGLIB$$4eabc294] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'annotationDrivenTransactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b0d4d8ce] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 1469 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@93f0f08: startup date [Sat Mar 24 16:40:52 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/updateStaff]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.updateStaff(com.jiemin.wages.domain.Staff)
Mapped "{[/findStaffByPage]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.findStaffByPage(com.jiemin.wages.domain.common.Pages,java.lang.String)
Mapped "{[/saveStaff]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.addStaff(com.jiemin.wages.domain.Staff)
Mapped "{[/delByGid]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.deleteByGid(java.lang.Long)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in exceptionHandle
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http) with context path ''
Started WagesApplication in 3.399 seconds (JVM running for 1920.982)
Condition evaluation unchanged
Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@93f0f08: startup date [Sat Mar 24 16:40:52 CST 2018]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting WagesApplication on SKY-20171023NXB with PID 10340 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@68b7e56d: startup date [Sat Mar 24 16:41:05 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.SalaryTypeRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'dataSource' of type [com.alibaba.druid.pool.DruidDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'myBatisConfig' of type [com.jiemin.wages.config.MyBatisConfig$$EnhancerBySpringCGLIB$$4eabc294] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'annotationDrivenTransactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b0d4d8ce] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 1099 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'salaryTypeController' defined in file [D:\project\project\wages\target\classes\com\jiemin\wages\controller\SalaryTypeController.class]: Post-processing of merged bean definition failed; nested exception is java.lang.IllegalStateException: Failed to introspect Class [com.jiemin.wages.controller.SalaryTypeController] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@ba83fe3]
Closing JPA EntityManagerFactory for persistence unit 'default'
Stopping service [Tomcat]


Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
Starting WagesApplication on SKY-20171023NXB with PID 10340 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@385ecc5: startup date [Sat Mar 24 16:42:47 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.SalaryTypeRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'dataSource' of type [com.alibaba.druid.pool.DruidDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'myBatisConfig' of type [com.jiemin.wages.config.MyBatisConfig$$EnhancerBySpringCGLIB$$4eabc294] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'annotationDrivenTransactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b0d4d8ce] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 1193 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'salaryTypeController' defined in file [D:\project\project\wages\target\classes\com\jiemin\wages\controller\SalaryTypeController.class]: Post-processing of merged bean definition failed; nested exception is java.lang.IllegalStateException: Failed to introspect Class [com.jiemin.wages.controller.SalaryTypeController] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@57339bf3]
Closing JPA EntityManagerFactory for persistence unit 'default'
Stopping service [Tomcat]


Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
Starting WagesApplication on SKY-20171023NXB with PID 10340 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5f7ac75d: startup date [Sat Mar 24 16:42:53 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.SalaryTypeRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'dataSource' of type [com.alibaba.druid.pool.DruidDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'myBatisConfig' of type [com.jiemin.wages.config.MyBatisConfig$$EnhancerBySpringCGLIB$$4eabc294] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'annotationDrivenTransactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b0d4d8ce] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 1457 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5f7ac75d: startup date [Sat Mar 24 16:42:53 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/updateStaff]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.updateStaff(com.jiemin.wages.domain.Staff)
Mapped "{[/findStaffByPage]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.findStaffByPage(com.jiemin.wages.domain.common.Pages,java.lang.String)
Mapped "{[/saveStaff]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.addStaff(com.jiemin.wages.domain.Staff)
Mapped "{[/delByGid]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.deleteByGid(java.lang.Long)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in exceptionHandle
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http) with context path ''
Started WagesApplication in 4.328 seconds (JVM running for 2042.712)
Condition evaluation unchanged
Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5f7ac75d: startup date [Sat Mar 24 16:42:53 CST 2018]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting WagesApplication on SKY-20171023NXB with PID 10340 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@591faa28: startup date [Sat Mar 24 16:43:00 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.SalaryTypeRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'dataSource' of type [com.alibaba.druid.pool.DruidDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'myBatisConfig' of type [com.jiemin.wages.config.MyBatisConfig$$EnhancerBySpringCGLIB$$4eabc294] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'annotationDrivenTransactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b0d4d8ce] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 1907 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'salaryTypeController': Unsatisfied dependency expressed through field 'service'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'salaryTypeService' defined in file [D:\project\project\wages\target\classes\com\jiemin\wages\service\SalaryTypeService.class]: Post-processing of merged bean definition failed; nested exception is java.lang.IllegalStateException: Failed to introspect Class [com.jiemin.wages.service.SalaryTypeService] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@7641a40e]
Closing JPA EntityManagerFactory for persistence unit 'default'
Stopping service [Tomcat]


Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
Starting WagesApplication on SKY-20171023NXB with PID 10340 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@357e3eb: startup date [Sat Mar 24 16:43:04 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.SalaryTypeRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'dataSource' of type [com.alibaba.druid.pool.DruidDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'myBatisConfig' of type [com.jiemin.wages.config.MyBatisConfig$$EnhancerBySpringCGLIB$$4eabc294] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'annotationDrivenTransactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b0d4d8ce] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 1004 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@357e3eb: startup date [Sat Mar 24 16:43:04 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/updateStaff]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.updateStaff(com.jiemin.wages.domain.Staff)
Mapped "{[/findStaffByPage]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.findStaffByPage(com.jiemin.wages.domain.common.Pages,java.lang.String)
Mapped "{[/saveStaff]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.addStaff(com.jiemin.wages.domain.Staff)
Mapped "{[/delByGid]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.deleteByGid(java.lang.Long)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in exceptionHandle
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http) with context path ''
Started WagesApplication in 2.594 seconds (JVM running for 2052.61)
Condition evaluation unchanged
Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@357e3eb: startup date [Sat Mar 24 16:43:04 CST 2018]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting WagesApplication on SKY-20171023NXB with PID 10340 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@43253841: startup date [Sat Mar 24 16:43:43 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.SalaryTypeRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'dataSource' of type [com.alibaba.druid.pool.DruidDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'myBatisConfig' of type [com.jiemin.wages.config.MyBatisConfig$$EnhancerBySpringCGLIB$$4eabc294] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'annotationDrivenTransactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b0d4d8ce] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 1770 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@43253841: startup date [Sat Mar 24 16:43:43 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/updateStaff]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.updateStaff(com.jiemin.wages.domain.Staff)
Mapped "{[/findStaffByPage]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.findStaffByPage(com.jiemin.wages.domain.common.Pages,java.lang.String)
Mapped "{[/saveStaff]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.addStaff(com.jiemin.wages.domain.Staff)
Mapped "{[/delByGid]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.deleteByGid(java.lang.Long)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in exceptionHandle
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http) with context path ''
Started WagesApplication in 4.626 seconds (JVM running for 2093.097)
Condition evaluation unchanged
Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@43253841: startup date [Sat Mar 24 16:43:43 CST 2018]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting WagesApplication on SKY-20171023NXB with PID 10340 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@36ab6176: startup date [Sat Mar 24 16:44:01 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.SalaryTypeRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'dataSource' of type [com.alibaba.druid.pool.DruidDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'myBatisConfig' of type [com.jiemin.wages.config.MyBatisConfig$$EnhancerBySpringCGLIB$$4eabc294] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'annotationDrivenTransactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b0d4d8ce] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 2150 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@36ab6176: startup date [Sat Mar 24 16:44:01 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/updateStaff]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.updateStaff(com.jiemin.wages.domain.Staff)
Mapped "{[/findStaffByPage]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.findStaffByPage(com.jiemin.wages.domain.common.Pages,java.lang.String)
Mapped "{[/saveStaff]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.addStaff(com.jiemin.wages.domain.Staff)
Mapped "{[/delByGid]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.deleteByGid(java.lang.Long)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in exceptionHandle
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http) with context path ''
Started WagesApplication in 3.842 seconds (JVM running for 2110.949)
Condition evaluation unchanged
Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@36ab6176: startup date [Sat Mar 24 16:44:01 CST 2018]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting WagesApplication on SKY-20171023NXB with PID 10340 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2810c7e5: startup date [Sat Mar 24 16:44:35 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.SalaryTypeRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'dataSource' of type [com.alibaba.druid.pool.DruidDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'myBatisConfig' of type [com.jiemin.wages.config.MyBatisConfig$$EnhancerBySpringCGLIB$$4eabc294] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'annotationDrivenTransactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b0d4d8ce] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 1368 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'salaryTypeController' defined in file [D:\project\project\wages\target\classes\com\jiemin\wages\controller\SalaryTypeController.class]: Post-processing of merged bean definition failed; nested exception is java.lang.IllegalStateException: Failed to introspect Class [com.jiemin.wages.controller.SalaryTypeController] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@2a8906ce]
Closing JPA EntityManagerFactory for persistence unit 'default'
Stopping service [Tomcat]


Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
Starting WagesApplication on SKY-20171023NXB with PID 10340 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2c2c28c7: startup date [Sat Mar 24 16:45:41 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.SalaryTypeRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'dataSource' of type [com.alibaba.druid.pool.DruidDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'myBatisConfig' of type [com.jiemin.wages.config.MyBatisConfig$$EnhancerBySpringCGLIB$$4eabc294] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'annotationDrivenTransactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b0d4d8ce] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 1737 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'salaryTypeController': Unsatisfied dependency expressed through field 'service'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'salaryTypeService': Unsatisfied dependency expressed through field 'salaryTypeRepository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'salaryTypeRepository': Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract org.springframework.data.domain.Page com.jiemin.wages.domain.SalaryTypeRepository.findByUserNameStartingWith(java.lang.String,org.springframework.data.domain.Pageable)! No property userName found for type SalaryType!
Closing JPA EntityManagerFactory for persistence unit 'default'
Stopping service [Tomcat]


Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
Starting WagesApplication on SKY-20171023NXB with PID 10340 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@316f803f: startup date [Sat Mar 24 16:45:46 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.SalaryTypeRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'dataSource' of type [com.alibaba.druid.pool.DruidDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'myBatisConfig' of type [com.jiemin.wages.config.MyBatisConfig$$EnhancerBySpringCGLIB$$4eabc294] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'annotationDrivenTransactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b0d4d8ce] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 1683 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'salaryTypeController': Unsatisfied dependency expressed through field 'service'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'salaryTypeService': Unsatisfied dependency expressed through field 'salaryTypeRepository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'salaryTypeRepository': Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract org.springframework.data.domain.Page com.jiemin.wages.domain.SalaryTypeRepository.findByUserNameStartingWith(java.lang.String,org.springframework.data.domain.Pageable)! No property userName found for type SalaryType!
Closing JPA EntityManagerFactory for persistence unit 'default'
Stopping service [Tomcat]


Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
Starting WagesApplication on SKY-20171023NXB with PID 10340 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@72134c6c: startup date [Sat Mar 24 16:45:51 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.SalaryTypeRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'dataSource' of type [com.alibaba.druid.pool.DruidDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'myBatisConfig' of type [com.jiemin.wages.config.MyBatisConfig$$EnhancerBySpringCGLIB$$4eabc294] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'annotationDrivenTransactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b0d4d8ce] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 1409 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'salaryTypeController': Unsatisfied dependency expressed through field 'service'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.jiemin.wages.service.SalaryTypeService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
Closing JPA EntityManagerFactory for persistence unit 'default'
Stopping service [Tomcat]


Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
Starting WagesApplication on SKY-20171023NXB with PID 10340 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1df27353: startup date [Sat Mar 24 16:46:03 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.SalaryTypeRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'dataSource' of type [com.alibaba.druid.pool.DruidDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'myBatisConfig' of type [com.jiemin.wages.config.MyBatisConfig$$EnhancerBySpringCGLIB$$4eabc294] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'annotationDrivenTransactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b0d4d8ce] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 1490 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'salaryTypeController': Unsatisfied dependency expressed through field 'service'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'salaryTypeService': Unsatisfied dependency expressed through field 'salaryTypeRepository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'salaryTypeRepository': Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract org.springframework.data.domain.Page com.jiemin.wages.domain.SalaryTypeRepository.findByUserNameStartingWith(java.lang.String,org.springframework.data.domain.Pageable)! No property userName found for type SalaryType!
Closing JPA EntityManagerFactory for persistence unit 'default'
Stopping service [Tomcat]


Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
Starting WagesApplication on SKY-20171023NXB with PID 10340 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@76401cc6: startup date [Sat Mar 24 16:46:07 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.SalaryTypeRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'dataSource' of type [com.alibaba.druid.pool.DruidDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'myBatisConfig' of type [com.jiemin.wages.config.MyBatisConfig$$EnhancerBySpringCGLIB$$4eabc294] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'annotationDrivenTransactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b0d4d8ce] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 1741 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'salaryTypeController': Unsatisfied dependency expressed through field 'service'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.jiemin.wages.service.SalaryTypeService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
Closing JPA EntityManagerFactory for persistence unit 'default'
Stopping service [Tomcat]


Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
Starting WagesApplication on SKY-20171023NXB with PID 10340 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4339a39: startup date [Sat Mar 24 16:46:20 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.SalaryTypeRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'dataSource' of type [com.alibaba.druid.pool.DruidDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'myBatisConfig' of type [com.jiemin.wages.config.MyBatisConfig$$EnhancerBySpringCGLIB$$4eabc294] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'annotationDrivenTransactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b0d4d8ce] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 2548 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'salaryTypeService': Unsatisfied dependency expressed through field 'salaryTypeRepository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'salaryTypeRepository': Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract org.springframework.data.domain.Page com.jiemin.wages.domain.SalaryTypeRepository.findByUserNameStartingWith(java.lang.String,org.springframework.data.domain.Pageable)! No property userName found for type SalaryType!
Closing JPA EntityManagerFactory for persistence unit 'default'
Stopping service [Tomcat]


Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
Starting WagesApplication on SKY-20171023NXB with PID 10340 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@307eb92b: startup date [Sat Mar 24 16:46:25 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.SalaryTypeRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'dataSource' of type [com.alibaba.druid.pool.DruidDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'myBatisConfig' of type [com.jiemin.wages.config.MyBatisConfig$$EnhancerBySpringCGLIB$$4eabc294] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'annotationDrivenTransactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b0d4d8ce] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 1607 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'salaryTypeService': Unsatisfied dependency expressed through field 'salaryTypeRepository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'salaryTypeRepository': Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract org.springframework.data.domain.Page com.jiemin.wages.domain.SalaryTypeRepository.findByUserNameStartingWith(java.lang.String,org.springframework.data.domain.Pageable)! No property userName found for type SalaryType!
Closing JPA EntityManagerFactory for persistence unit 'default'
Stopping service [Tomcat]


Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
Starting WagesApplication on SKY-20171023NXB with PID 10340 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2a896c46: startup date [Sat Mar 24 16:46:31 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.SalaryTypeRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'dataSource' of type [com.alibaba.druid.pool.DruidDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'myBatisConfig' of type [com.jiemin.wages.config.MyBatisConfig$$EnhancerBySpringCGLIB$$4eabc294] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'annotationDrivenTransactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b0d4d8ce] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 1736 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'salaryTypeService': Unsatisfied dependency expressed through field 'salaryTypeRepository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'salaryTypeRepository': Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract org.springframework.data.domain.Page com.jiemin.wages.domain.SalaryTypeRepository.findByUserNameStartingWith(java.lang.String,org.springframework.data.domain.Pageable)! No property userName found for type SalaryType!
Closing JPA EntityManagerFactory for persistence unit 'default'
Stopping service [Tomcat]


Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
Starting WagesApplication on SKY-20171023NXB with PID 10340 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5bc714a4: startup date [Sat Mar 24 16:46:36 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.SalaryTypeRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'dataSource' of type [com.alibaba.druid.pool.DruidDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'myBatisConfig' of type [com.jiemin.wages.config.MyBatisConfig$$EnhancerBySpringCGLIB$$4eabc294] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'annotationDrivenTransactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b0d4d8ce] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 1866 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'salaryTypeController': Unsatisfied dependency expressed through field 'service'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'salaryTypeService': Unsatisfied dependency expressed through field 'salaryTypeRepository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'salaryTypeRepository': Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract org.springframework.data.domain.Page com.jiemin.wages.domain.SalaryTypeRepository.findByUserNameStartingWith(java.lang.String,org.springframework.data.domain.Pageable)! No property userName found for type SalaryType!
Closing JPA EntityManagerFactory for persistence unit 'default'
Stopping service [Tomcat]


Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
Starting WagesApplication on SKY-20171023NXB with PID 10340 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5656ab7d: startup date [Sat Mar 24 16:46:41 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.SalaryTypeRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'dataSource' of type [com.alibaba.druid.pool.DruidDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'myBatisConfig' of type [com.jiemin.wages.config.MyBatisConfig$$EnhancerBySpringCGLIB$$4eabc294] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'annotationDrivenTransactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b0d4d8ce] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 1673 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'salaryTypeService': Unsatisfied dependency expressed through field 'salaryTypeRepository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'salaryTypeRepository': Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract org.springframework.data.domain.Page com.jiemin.wages.domain.SalaryTypeRepository.findByUserNameStartingWith(java.lang.String,org.springframework.data.domain.Pageable)! No property userName found for type SalaryType!
Closing JPA EntityManagerFactory for persistence unit 'default'
Stopping service [Tomcat]


Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
Starting WagesApplication on SKY-20171023NXB with PID 10340 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@f46b13f: startup date [Sat Mar 24 16:47:01 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.SalaryTypeRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'dataSource' of type [com.alibaba.druid.pool.DruidDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'myBatisConfig' of type [com.jiemin.wages.config.MyBatisConfig$$EnhancerBySpringCGLIB$$4eabc294] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'annotationDrivenTransactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b0d4d8ce] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 2221 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'salaryTypeService': Unsatisfied dependency expressed through field 'salaryTypeRepository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'salaryTypeRepository': Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract org.springframework.data.domain.Page com.jiemin.wages.domain.SalaryTypeRepository.findByUserNameStartingWith(java.lang.String,org.springframework.data.domain.Pageable)! No property userName found for type SalaryType!
Closing JPA EntityManagerFactory for persistence unit 'default'
Stopping service [Tomcat]


Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
Starting WagesApplication on SKY-20171023NXB with PID 10340 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@952c899: startup date [Sat Mar 24 16:47:07 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.SalaryTypeRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'dataSource' of type [com.alibaba.druid.pool.DruidDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'myBatisConfig' of type [com.jiemin.wages.config.MyBatisConfig$$EnhancerBySpringCGLIB$$4eabc294] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'annotationDrivenTransactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b0d4d8ce] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 2003 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'salaryTypeService': Unsatisfied dependency expressed through field 'salaryTypeRepository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'salaryTypeRepository': Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract org.springframework.data.domain.Page com.jiemin.wages.domain.SalaryTypeRepository.findByUserNameStartingWith(java.lang.String,org.springframework.data.domain.Pageable)! No property userName found for type SalaryType!
Closing JPA EntityManagerFactory for persistence unit 'default'
Stopping service [Tomcat]


Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
Starting WagesApplication on SKY-20171023NXB with PID 10340 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@a1635dd: startup date [Sat Mar 24 16:47:21 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.SalaryTypeRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'dataSource' of type [com.alibaba.druid.pool.DruidDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'myBatisConfig' of type [com.jiemin.wages.config.MyBatisConfig$$EnhancerBySpringCGLIB$$4eabc294] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'annotationDrivenTransactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b0d4d8ce] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 1575 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'salaryTypeService': Unsatisfied dependency expressed through field 'salaryTypeRepository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'salaryTypeRepository': Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract org.springframework.data.domain.Page com.jiemin.wages.domain.SalaryTypeRepository.findByUserNameStartingWith(java.lang.String,org.springframework.data.domain.Pageable)! No property userName found for type SalaryType!
Closing JPA EntityManagerFactory for persistence unit 'default'
Stopping service [Tomcat]


Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
Starting WagesApplication on SKY-20171023NXB with PID 10340 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@40e314ed: startup date [Sat Mar 24 16:47:38 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.SalaryTypeRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'dataSource' of type [com.alibaba.druid.pool.DruidDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'myBatisConfig' of type [com.jiemin.wages.config.MyBatisConfig$$EnhancerBySpringCGLIB$$4eabc294] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'annotationDrivenTransactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b0d4d8ce] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 1826 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'salaryTypeController': Unsatisfied dependency expressed through field 'service'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'salaryTypeService': Unsatisfied dependency expressed through field 'salaryTypeRepository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'salaryTypeRepository': Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract org.springframework.data.domain.Page com.jiemin.wages.domain.SalaryTypeRepository.findByUserNameStartingWith(java.lang.String,org.springframework.data.domain.Pageable)! No property userName found for type SalaryType!
Closing JPA EntityManagerFactory for persistence unit 'default'
Stopping service [Tomcat]


Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
Starting WagesApplication on SKY-20171023NXB with PID 10340 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3151c919: startup date [Sat Mar 24 16:47:48 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.SalaryTypeRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'dataSource' of type [com.alibaba.druid.pool.DruidDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'myBatisConfig' of type [com.jiemin.wages.config.MyBatisConfig$$EnhancerBySpringCGLIB$$4eabc294] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'annotationDrivenTransactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b0d4d8ce] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 1594 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'salaryTypeController': Unsatisfied dependency expressed through field 'service'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'salaryTypeService': Unsatisfied dependency expressed through field 'salaryTypeRepository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'salaryTypeRepository': Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract org.springframework.data.domain.Page com.jiemin.wages.domain.SalaryTypeRepository.findByUserNameStartingWith(java.lang.String,org.springframework.data.domain.Pageable)! No property userName found for type SalaryType!
Closing JPA EntityManagerFactory for persistence unit 'default'
Stopping service [Tomcat]


Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
Starting WagesApplication on SKY-20171023NXB with PID 10340 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@58e6edeb: startup date [Sat Mar 24 16:48:01 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.SalaryTypeRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'dataSource' of type [com.alibaba.druid.pool.DruidDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'myBatisConfig' of type [com.jiemin.wages.config.MyBatisConfig$$EnhancerBySpringCGLIB$$4eabc294] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'annotationDrivenTransactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b0d4d8ce] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 2687 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'salaryTypeService': Unsatisfied dependency expressed through field 'salaryTypeRepository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'salaryTypeRepository': Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract org.springframework.data.domain.Page com.jiemin.wages.domain.SalaryTypeRepository.findByUserNameStartingWith(java.lang.String,org.springframework.data.domain.Pageable)! No property userName found for type SalaryType!
Closing JPA EntityManagerFactory for persistence unit 'default'
Stopping service [Tomcat]


Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
Starting WagesApplication on SKY-20171023NXB with PID 10340 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7e2d8c16: startup date [Sat Mar 24 16:48:12 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.SalaryTypeRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'dataSource' of type [com.alibaba.druid.pool.DruidDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'myBatisConfig' of type [com.jiemin.wages.config.MyBatisConfig$$EnhancerBySpringCGLIB$$4eabc294] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'annotationDrivenTransactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b0d4d8ce] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 2692 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'salaryTypeService': Unsatisfied dependency expressed through field 'salaryTypeRepository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'salaryTypeRepository': Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract org.springframework.data.domain.Page com.jiemin.wages.domain.SalaryTypeRepository.findByUserNameStartingWith(java.lang.String,org.springframework.data.domain.Pageable)! No property userName found for type SalaryType!
Closing JPA EntityManagerFactory for persistence unit 'default'
Stopping service [Tomcat]


Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
Starting WagesApplication on SKY-20171023NXB with PID 10340 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@612ec04b: startup date [Sat Mar 24 16:48:32 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.SalaryTypeRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'dataSource' of type [com.alibaba.druid.pool.DruidDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'myBatisConfig' of type [com.jiemin.wages.config.MyBatisConfig$$EnhancerBySpringCGLIB$$4eabc294] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'annotationDrivenTransactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b0d4d8ce] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 1496 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'salaryTypeController': Unsatisfied dependency expressed through field 'service'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'salaryTypeService': Unsatisfied dependency expressed through field 'salaryTypeRepository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'salaryTypeRepository': Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract org.springframework.data.domain.Page com.jiemin.wages.domain.SalaryTypeRepository.findByUserNameStartingWith(java.lang.String,org.springframework.data.domain.Pageable)! No property userName found for type SalaryType!
Closing JPA EntityManagerFactory for persistence unit 'default'
Stopping service [Tomcat]


Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
Starting WagesApplication on SKY-20171023NXB with PID 10340 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4354168a: startup date [Sat Mar 24 16:48:39 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.SalaryTypeRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'dataSource' of type [com.alibaba.druid.pool.DruidDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'myBatisConfig' of type [com.jiemin.wages.config.MyBatisConfig$$EnhancerBySpringCGLIB$$4eabc294] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'annotationDrivenTransactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b0d4d8ce] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 2597 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'salaryTypeService': Unsatisfied dependency expressed through field 'salaryTypeRepository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'salaryTypeRepository': Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract org.springframework.data.domain.Page com.jiemin.wages.domain.SalaryTypeRepository.findByUserNameStartingWith(java.lang.String,org.springframework.data.domain.Pageable)! No property userName found for type SalaryType!
Closing JPA EntityManagerFactory for persistence unit 'default'
Stopping service [Tomcat]


Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
Starting WagesApplication on SKY-20171023NXB with PID 10556 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6a1346b3: startup date [Sat Mar 24 16:48:50 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.SalaryTypeRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'dataSource' of type [com.alibaba.druid.pool.DruidDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'myBatisConfig' of type [com.jiemin.wages.config.MyBatisConfig$$EnhancerBySpringCGLIB$$1981869d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'annotationDrivenTransactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$7baa9cd7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_131\bin;D:\java\apache-maven-3.5.2\bin;C:\Program Files (x86)\Git\cmd;%ZOOKEEPER_HOME%\bin;.]
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 2798 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.2.14.Final}
HHH000206: hibernate.properties not found
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'salaryTypeController': Unsatisfied dependency expressed through field 'service'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'salaryTypeService': Unsatisfied dependency expressed through field 'salaryTypeRepository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'salaryTypeRepository': Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract org.springframework.data.domain.Page com.jiemin.wages.domain.SalaryTypeRepository.findByUserNameStartingWith(java.lang.String,org.springframework.data.domain.Pageable)! No property userName found for type SalaryType!
Closing JPA EntityManagerFactory for persistence unit 'default'
Stopping service [Tomcat]


Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
Starting WagesApplication on SKY-20171023NXB with PID 10640 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3766d7c1: startup date [Sat Mar 24 16:49:49 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.SalaryTypeRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'dataSource' of type [com.alibaba.druid.pool.DruidDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'myBatisConfig' of type [com.jiemin.wages.config.MyBatisConfig$$EnhancerBySpringCGLIB$$dd1dd099] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'annotationDrivenTransactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$3f46e6d3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_131\bin;D:\java\apache-maven-3.5.2\bin;C:\Program Files (x86)\Git\cmd;%ZOOKEEPER_HOME%\bin;.]
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 2981 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.2.14.Final}
HHH000206: hibernate.properties not found
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3766d7c1: startup date [Sat Mar 24 16:49:49 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/findSalaryTypeByPage]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.SalaryTypeController.findSalaryTypeByPage(com.jiemin.wages.domain.common.Pages,java.lang.String)
Mapped "{[/updateStaff]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.SalaryTypeController.updateStaff(com.jiemin.wages.domain.SalaryType)
Mapped "{[/delByGid]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.SalaryTypeController.deleteByGid(java.lang.Long)
Mapped "{[/saveSalaryType]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.SalaryTypeController.saveSalaryType(com.jiemin.wages.domain.SalaryType)
Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'requestMappingHandlerMapping' defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]: Invocation of init method failed; nested exception is java.lang.IllegalStateException: Ambiguous mapping. Cannot map 'staffController' method 
public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.updateStaff(com.jiemin.wages.domain.Staff)
to {[/updateStaff]}: There is already 'salaryTypeController' bean method
public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.SalaryTypeController.updateStaff(com.jiemin.wages.domain.SalaryType) mapped.
Closing JPA EntityManagerFactory for persistence unit 'default'
Stopping service [Tomcat]


Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
Starting WagesApplication on SKY-20171023NXB with PID 5800 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@37813075: startup date [Sat Mar 24 16:52:32 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.SalaryTypeRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'dataSource' of type [com.alibaba.druid.pool.DruidDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'myBatisConfig' of type [com.jiemin.wages.config.MyBatisConfig$$EnhancerBySpringCGLIB$$77ea94f2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'annotationDrivenTransactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$da13ab2c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_131\bin;D:\java\apache-maven-3.5.2\bin;C:\Program Files (x86)\Git\cmd;%ZOOKEEPER_HOME%\bin;.]
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 2684 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.2.14.Final}
HHH000206: hibernate.properties not found
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@37813075: startup date [Sat Mar 24 16:52:32 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/delByGid]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.SalaryTypeController.deleteByGid(java.lang.Long)
Mapped "{[/saveSalaryType]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.SalaryTypeController.saveSalaryType(com.jiemin.wages.domain.SalaryType)
Mapped "{[/updateSalaryType]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.SalaryTypeController.updateSalaryType(com.jiemin.wages.domain.SalaryType)
Mapped "{[/findSalaryTypeByPage]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.SalaryTypeController.findSalaryTypeByPage(com.jiemin.wages.domain.common.Pages,java.lang.String)
Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'requestMappingHandlerMapping' defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]: Invocation of init method failed; nested exception is java.lang.IllegalStateException: Ambiguous mapping. Cannot map 'staffController' method 
public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.deleteByGid(java.lang.Long)
to {[/delByGid]}: There is already 'salaryTypeController' bean method
public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.SalaryTypeController.deleteByGid(java.lang.Long) mapped.
Closing JPA EntityManagerFactory for persistence unit 'default'
Stopping service [Tomcat]


Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
Starting WagesApplication on SKY-20171023NXB with PID 11500 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3196167b: startup date [Sat Mar 24 16:53:12 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.SalaryTypeRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'dataSource' of type [com.alibaba.druid.pool.DruidDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'myBatisConfig' of type [com.jiemin.wages.config.MyBatisConfig$$EnhancerBySpringCGLIB$$dbae934f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'annotationDrivenTransactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$3dd7a989] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_131\bin;D:\java\apache-maven-3.5.2\bin;C:\Program Files (x86)\Git\cmd;%ZOOKEEPER_HOME%\bin;.]
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 2850 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.2.14.Final}
HHH000206: hibernate.properties not found
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3196167b: startup date [Sat Mar 24 16:53:12 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/salaryType/updateSalaryType]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.SalaryTypeController.updateSalaryType(com.jiemin.wages.domain.SalaryType)
Mapped "{[/salaryType/saveSalaryType]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.SalaryTypeController.saveSalaryType(com.jiemin.wages.domain.SalaryType)
Mapped "{[/salaryType/delByGid]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.SalaryTypeController.deleteByGid(java.lang.Long)
Mapped "{[/salaryType/findSalaryTypeByPage]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.SalaryTypeController.findSalaryTypeByPage(com.jiemin.wages.domain.common.Pages,java.lang.String)
Mapped "{[/delByGid]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.deleteByGid(java.lang.Long)
Mapped "{[/findStaffByPage]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.findStaffByPage(com.jiemin.wages.domain.common.Pages,java.lang.String)
Mapped "{[/saveStaff]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.addStaff(com.jiemin.wages.domain.Staff)
Mapped "{[/updateStaff]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.updateStaff(com.jiemin.wages.domain.Staff)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in exceptionHandle
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http) with context path ''
Started WagesApplication in 8.203 seconds (JVM running for 9.116)
Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3196167b: startup date [Sat Mar 24 16:53:12 CST 2018]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting WagesApplication on SKY-20171023NXB with PID 11500 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3eb968fd: startup date [Sat Mar 24 16:53:42 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.SalaryTypeRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'dataSource' of type [com.alibaba.druid.pool.DruidDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'myBatisConfig' of type [com.jiemin.wages.config.MyBatisConfig$$EnhancerBySpringCGLIB$$dbae934f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'annotationDrivenTransactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$3dd7a989] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 942 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3eb968fd: startup date [Sat Mar 24 16:53:42 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/salaryType/updateSalaryType]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.SalaryTypeController.updateSalaryType(com.jiemin.wages.domain.SalaryType)
Mapped "{[/salaryType/saveSalaryType]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.SalaryTypeController.saveSalaryType(com.jiemin.wages.domain.SalaryType)
Mapped "{[/salaryType/delByGid]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.SalaryTypeController.deleteByGid(java.lang.Long)
Mapped "{[/salaryType/findSalaryTypeByPage]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.SalaryTypeController.findSalaryTypeByPage(com.jiemin.wages.domain.common.Pages,java.lang.String)
Mapped "{[/staff/delByGid]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.deleteByGid(java.lang.Long)
Mapped "{[/staff/findStaffByPage]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.findStaffByPage(com.jiemin.wages.domain.common.Pages,java.lang.String)
Mapped "{[/staff/saveStaff]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.addStaff(com.jiemin.wages.domain.Staff)
Mapped "{[/staff/updateStaff]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.updateStaff(com.jiemin.wages.domain.Staff)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in exceptionHandle
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http) with context path ''
Started WagesApplication in 2.553 seconds (JVM running for 33.914)
Condition evaluation unchanged
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 30 ms
===========开始请求com.jiemin.wages.controller.SalaryTypeController.saveSalaryType============
===========请求时间:2018-03-24 16:55:48==========================
url=http://localhost:8088/salaryType/saveSalaryType
method=GET
ip=0:0:0:0:0:0:0:1
class_method=com.jiemin.wages.controller.SalaryTypeController.saveSalaryType
args=SalaryType(gid=null, typeId=1, typeName=医疗保险, typeMark=0, typeStatus=1)
=============结束请求时间:2018-03-24 16:55:48======================
Resolved exception caused by Handler execution: org.springframework.beans.factory.NoSuchBeanDefinitionException: No bean named 'transactionManager' available: No matching PlatformTransactionManager bean found for qualifier 'transactionManager' - neither qualifier match nor bean name match!
===========开始请求com.jiemin.wages.controller.SalaryTypeController.saveSalaryType============
===========请求时间:2018-03-24 16:59:21==========================
url=http://localhost:8088/salaryType/saveSalaryType
method=GET
ip=0:0:0:0:0:0:0:1
class_method=com.jiemin.wages.controller.SalaryTypeController.saveSalaryType
args=SalaryType(gid=null, typeId=1, typeName=医疗保险, typeMark=0, typeStatus=1)
=============结束请求时间:2018-03-24 17:00:50======================
Resolved exception caused by Handler execution: org.springframework.beans.factory.NoSuchBeanDefinitionException: No bean named 'transactionManager' available: No matching PlatformTransactionManager bean found for qualifier 'transactionManager' - neither qualifier match nor bean name match!
===========开始请求com.jiemin.wages.controller.StaffController.addStaff============
===========请求时间:2018-03-24 17:01:15==========================
url=http://localhost:8088/staff/saveStaff
method=GET
ip=0:0:0:0:0:0:0:1
class_method=com.jiemin.wages.controller.StaffController.addStaff
args=Staff(gid=null, userName=刘英杰1, userSex=1, userTel=15215215962, emergencyName=刘老大1, emergencyTel=1888888888, bankCard=11111111111111111111)
=============结束请求时间:2018-03-24 17:01:15======================
Resolved exception caused by Handler execution: org.springframework.beans.factory.NoSuchBeanDefinitionException: No bean named 'transactionManager' available: No matching PlatformTransactionManager bean found for qualifier 'transactionManager' - neither qualifier match nor bean name match!
Starting WagesApplication on SKY-20171023NXB with PID 11180 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2c30a5a: startup date [Sat Mar 24 17:02:45 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.SalaryTypeRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'dataSource' of type [com.alibaba.druid.pool.DruidDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'myBatisConfig' of type [com.jiemin.wages.config.MyBatisConfig$$EnhancerBySpringCGLIB$$b92c1213] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'annotationDrivenTransactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$1b55284d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_131\bin;D:\java\apache-maven-3.5.2\bin;C:\Program Files (x86)\Git\cmd;%ZOOKEEPER_HOME%\bin;.]
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 4204 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.2.14.Final}
HHH000206: hibernate.properties not found
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2c30a5a: startup date [Sat Mar 24 17:02:45 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/salaryType/updateSalaryType]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.SalaryTypeController.updateSalaryType(com.jiemin.wages.domain.SalaryType)
Mapped "{[/salaryType/delByGid]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.SalaryTypeController.deleteByGid(java.lang.Long)
Mapped "{[/salaryType/saveSalaryType]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.SalaryTypeController.saveSalaryType(com.jiemin.wages.domain.SalaryType)
Mapped "{[/salaryType/findSalaryTypeByPage]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.SalaryTypeController.findSalaryTypeByPage(com.jiemin.wages.domain.common.Pages,java.lang.String)
Mapped "{[/staff/findStaffByPage]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.findStaffByPage(com.jiemin.wages.domain.common.Pages,java.lang.String)
Mapped "{[/staff/delByGid]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.deleteByGid(java.lang.Long)
Mapped "{[/staff/saveStaff]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.addStaff(com.jiemin.wages.domain.Staff)
Mapped "{[/staff/updateStaff]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.updateStaff(com.jiemin.wages.domain.Staff)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in exceptionHandle
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http) with context path ''
Started WagesApplication in 9.721 seconds (JVM running for 10.634)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 29 ms
===========开始请求com.jiemin.wages.controller.StaffController.addStaff============
===========请求时间:2018-03-24 17:03:12==========================
url=http://localhost:8088/staff/saveStaff
method=GET
ip=0:0:0:0:0:0:0:1
class_method=com.jiemin.wages.controller.StaffController.addStaff
args=Staff(gid=null, userName=刘英杰1, userSex=1, userTel=15215215962, emergencyName=刘老大1, emergencyTel=1888888888, bankCard=11111111111111111111)
=============结束请求时间:2018-03-24 17:03:12======================
Resolved exception caused by Handler execution: org.springframework.beans.factory.NoSuchBeanDefinitionException: No bean named 'transactionManager' available: No matching PlatformTransactionManager bean found for qualifier 'transactionManager' - neither qualifier match nor bean name match!
Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2c30a5a: startup date [Sat Mar 24 17:02:45 CST 2018]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting WagesApplication on SKY-20171023NXB with PID 11180 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fa67807: startup date [Sat Mar 24 17:03:30 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.SalaryTypeRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'dataSource' of type [com.alibaba.druid.pool.DruidDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'myBatisConfig' of type [com.jiemin.wages.config.MyBatisConfig$$EnhancerBySpringCGLIB$$b92c1213] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'annotationDrivenTransactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$1b55284d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 1520 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fa67807: startup date [Sat Mar 24 17:03:30 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/salaryType/updateSalaryType]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.SalaryTypeController.updateSalaryType(com.jiemin.wages.domain.SalaryType)
Mapped "{[/salaryType/delByGid]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.SalaryTypeController.deleteByGid(java.lang.Long)
Mapped "{[/salaryType/saveSalaryType]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.SalaryTypeController.saveSalaryType(com.jiemin.wages.domain.SalaryType)
Mapped "{[/salaryType/findSalaryTypeByPage]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.SalaryTypeController.findSalaryTypeByPage(com.jiemin.wages.domain.common.Pages,java.lang.String)
Mapped "{[/staff/findStaffByPage]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.findStaffByPage(com.jiemin.wages.domain.common.Pages,java.lang.String)
Mapped "{[/staff/delByGid]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.deleteByGid(java.lang.Long)
Mapped "{[/staff/saveStaff]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.addStaff(com.jiemin.wages.domain.Staff)
Mapped "{[/staff/updateStaff]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.updateStaff(com.jiemin.wages.domain.Staff)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in exceptionHandle
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http) with context path ''
Started WagesApplication in 3.288 seconds (JVM running for 50.071)
Condition evaluation unchanged
Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fa67807: startup date [Sat Mar 24 17:03:30 CST 2018]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting WagesApplication on SKY-20171023NXB with PID 11180 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@32543893: startup date [Sat Mar 24 17:03:39 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.SalaryTypeRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'dataSource' of type [com.alibaba.druid.pool.DruidDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'myBatisConfig' of type [com.jiemin.wages.config.MyBatisConfig$$EnhancerBySpringCGLIB$$b92c1213] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'annotationDrivenTransactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$1b55284d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 1214 ms
Starting WagesApplication on SKY-20171023NXB with PID 11452 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4dd48bec: startup date [Sat Mar 24 17:03:46 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.SalaryTypeRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'dataSource' of type [com.alibaba.druid.pool.DruidDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'myBatisConfig' of type [com.jiemin.wages.config.MyBatisConfig$$EnhancerBySpringCGLIB$$abf23cba] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'annotationDrivenTransactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$e1b52f4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_131\bin;D:\java\apache-maven-3.5.2\bin;C:\Program Files (x86)\Git\cmd;%ZOOKEEPER_HOME%\bin;.]
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 2813 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.2.14.Final}
HHH000206: hibernate.properties not found
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4dd48bec: startup date [Sat Mar 24 17:03:46 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/salaryType/findSalaryTypeByPage]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.SalaryTypeController.findSalaryTypeByPage(com.jiemin.wages.domain.common.Pages,java.lang.String)
Mapped "{[/salaryType/delByGid]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.SalaryTypeController.deleteByGid(java.lang.Long)
Mapped "{[/salaryType/updateSalaryType]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.SalaryTypeController.updateSalaryType(com.jiemin.wages.domain.SalaryType)
Mapped "{[/salaryType/saveSalaryType]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.SalaryTypeController.saveSalaryType(com.jiemin.wages.domain.SalaryType)
Mapped "{[/staff/saveStaff]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.addStaff(com.jiemin.wages.domain.Staff)
Mapped "{[/staff/findStaffByPage]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.findStaffByPage(com.jiemin.wages.domain.common.Pages,java.lang.String)
Mapped "{[/staff/updateStaff]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.updateStaff(com.jiemin.wages.domain.Staff)
Mapped "{[/staff/delByGid]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.deleteByGid(java.lang.Long)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in exceptionHandle
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http) with context path ''
Started WagesApplication in 8.248 seconds (JVM running for 9.059)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 27 ms
===========开始请求com.jiemin.wages.controller.StaffController.addStaff============
===========请求时间:2018-03-24 17:03:58==========================
url=http://localhost:8088/staff/saveStaff
method=GET
ip=0:0:0:0:0:0:0:1
class_method=com.jiemin.wages.controller.StaffController.addStaff
args=Staff(gid=null, userName=刘英杰1, userSex=1, userTel=15215215962, emergencyName=刘老大1, emergencyTel=1888888888, bankCard=11111111111111111111)
=============结束请求时间:2018-03-24 17:03:58======================
Resolved exception caused by Handler execution: org.springframework.beans.factory.NoSuchBeanDefinitionException: No bean named 'transactionManager' available: No matching PlatformTransactionManager bean found for qualifier 'transactionManager' - neither qualifier match nor bean name match!
===========开始请求com.jiemin.wages.controller.StaffController.findStaffByPage============
===========请求时间:2018-03-24 17:05:22==========================
url=http://localhost:8088/staff/findStaffByPage
method=GET
ip=0:0:0:0:0:0:0:1
class_method=com.jiemin.wages.controller.StaffController.findStaffByPage
args=Pages(first=false, last=false, pageSize=1, pageNumber=1, totalCount=0, totalPage=null)
=============结束请求时间:2018-03-24 17:05:22======================
Resolved exception caused by Handler execution: org.springframework.beans.factory.NoSuchBeanDefinitionException: No bean named 'transactionManager' available: No matching PlatformTransactionManager bean found for qualifier 'transactionManager' - neither qualifier match nor bean name match!
Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4dd48bec: startup date [Sat Mar 24 17:03:46 CST 2018]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting WagesApplication on SKY-20171023NXB with PID 11452 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@25d593b4: startup date [Sat Mar 24 17:10:40 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.SalaryTypeRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'dataSource' of type [com.alibaba.druid.pool.DruidDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'myBatisConfig' of type [com.jiemin.wages.config.MyBatisConfig$$EnhancerBySpringCGLIB$$abf23cba] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'annotationDrivenTransactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$e1b52f4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 979 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@25d593b4: startup date [Sat Mar 24 17:10:40 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/salaryType/findSalaryTypeByPage]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.SalaryTypeController.findSalaryTypeByPage(com.jiemin.wages.domain.common.Pages,java.lang.String)
Mapped "{[/salaryType/delByGid]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.SalaryTypeController.deleteByGid(java.lang.Long)
Mapped "{[/salaryType/updateSalaryType]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.SalaryTypeController.updateSalaryType(com.jiemin.wages.domain.SalaryType)
Mapped "{[/salaryType/saveSalaryType]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.SalaryTypeController.saveSalaryType(com.jiemin.wages.domain.SalaryType)
Mapped "{[/staff/saveStaff]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.addStaff(com.jiemin.wages.domain.Staff)
Mapped "{[/staff/findStaffByPage]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.findStaffByPage(com.jiemin.wages.domain.common.Pages,java.lang.String)
Mapped "{[/staff/updateStaff]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.updateStaff(com.jiemin.wages.domain.Staff)
Mapped "{[/staff/delByGid]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.deleteByGid(java.lang.Long)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in exceptionHandle
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http) with context path ''
Started WagesApplication in 2.646 seconds (JVM running for 418.221)
Condition evaluation unchanged
Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@25d593b4: startup date [Sat Mar 24 17:10:40 CST 2018]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting WagesApplication on SKY-20171023NXB with PID 11452 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1687c2e2: startup date [Sat Mar 24 17:10:58 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.SalaryTypeRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'dataSource' of type [com.alibaba.druid.pool.DruidDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'myBatisConfig' of type [com.jiemin.wages.config.MyBatisConfig$$EnhancerBySpringCGLIB$$abf23cba] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'annotationDrivenTransactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$e1b52f4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 1154 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1687c2e2: startup date [Sat Mar 24 17:10:58 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/salaryType/findSalaryTypeByPage]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.SalaryTypeController.findSalaryTypeByPage(com.jiemin.wages.domain.common.Pages,java.lang.String)
Mapped "{[/salaryType/delByGid]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.SalaryTypeController.deleteByGid(java.lang.Long)
Mapped "{[/salaryType/updateSalaryType]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.SalaryTypeController.updateSalaryType(com.jiemin.wages.domain.SalaryType)
Mapped "{[/salaryType/saveSalaryType]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.SalaryTypeController.saveSalaryType(com.jiemin.wages.domain.SalaryType)
Mapped "{[/staff/saveStaff]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.addStaff(com.jiemin.wages.domain.Staff)
Mapped "{[/staff/findStaffByPage]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.findStaffByPage(com.jiemin.wages.domain.common.Pages,java.lang.String)
Mapped "{[/staff/updateStaff]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.updateStaff(com.jiemin.wages.domain.Staff)
Mapped "{[/staff/delByGid]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.deleteByGid(java.lang.Long)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in exceptionHandle
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http) with context path ''
Started WagesApplication in 2.752 seconds (JVM running for 436.619)
Condition evaluation unchanged
Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1687c2e2: startup date [Sat Mar 24 17:10:58 CST 2018]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting WagesApplication on SKY-20171023NXB with PID 11452 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4bd18f60: startup date [Sat Mar 24 17:11:09 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.SalaryTypeRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'dataSource' of type [com.alibaba.druid.pool.DruidDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'myBatisConfig' of type [com.jiemin.wages.config.MyBatisConfig$$EnhancerBySpringCGLIB$$abf23cba] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'annotationDrivenTransactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$e1b52f4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 1193 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4bd18f60: startup date [Sat Mar 24 17:11:09 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/salaryType/findSalaryTypeByPage]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.SalaryTypeController.findSalaryTypeByPage(com.jiemin.wages.domain.common.Pages,java.lang.String)
Mapped "{[/salaryType/delByGid]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.SalaryTypeController.deleteByGid(java.lang.Long)
Mapped "{[/salaryType/updateSalaryType]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.SalaryTypeController.updateSalaryType(com.jiemin.wages.domain.SalaryType)
Mapped "{[/salaryType/saveSalaryType]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.SalaryTypeController.saveSalaryType(com.jiemin.wages.domain.SalaryType)
Mapped "{[/staff/saveStaff]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.addStaff(com.jiemin.wages.domain.Staff)
Mapped "{[/staff/findStaffByPage]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.findStaffByPage(com.jiemin.wages.domain.common.Pages,java.lang.String)
Mapped "{[/staff/updateStaff]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.updateStaff(com.jiemin.wages.domain.Staff)
Mapped "{[/staff/delByGid]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.deleteByGid(java.lang.Long)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in exceptionHandle
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http) with context path ''
Started WagesApplication in 2.747 seconds (JVM running for 447.477)
Condition evaluation unchanged
Starting WagesApplication on SKY-20171023NXB with PID 12152 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@8ee93e2: startup date [Sat Mar 24 17:11:18 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.SalaryTypeRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'dataSource' of type [com.alibaba.druid.pool.DruidDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'myBatisConfig' of type [com.jiemin.wages.config.MyBatisConfig$$EnhancerBySpringCGLIB$$53457c5b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'annotationDrivenTransactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b56e9295] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_131\bin;D:\java\apache-maven-3.5.2\bin;C:\Program Files (x86)\Git\cmd;%ZOOKEEPER_HOME%\bin;.]
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 2303 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.2.14.Final}
HHH000206: hibernate.properties not found
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@8ee93e2: startup date [Sat Mar 24 17:11:18 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/salaryType/findSalaryTypeByPage]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.SalaryTypeController.findSalaryTypeByPage(com.jiemin.wages.domain.common.Pages,java.lang.String)
Mapped "{[/salaryType/updateSalaryType]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.SalaryTypeController.updateSalaryType(com.jiemin.wages.domain.SalaryType)
Mapped "{[/salaryType/delByGid]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.SalaryTypeController.deleteByGid(java.lang.Long)
Mapped "{[/salaryType/saveSalaryType]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.SalaryTypeController.saveSalaryType(com.jiemin.wages.domain.SalaryType)
Mapped "{[/staff/delByGid]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.deleteByGid(java.lang.Long)
Mapped "{[/staff/updateStaff]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.updateStaff(com.jiemin.wages.domain.Staff)
Mapped "{[/staff/saveStaff]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.addStaff(com.jiemin.wages.domain.Staff)
Mapped "{[/staff/findStaffByPage]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.findStaffByPage(com.jiemin.wages.domain.common.Pages,java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in exceptionHandle
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http) with context path ''
Started WagesApplication in 6.587 seconds (JVM running for 7.334)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 23 ms
===========开始请求com.jiemin.wages.controller.StaffController.findStaffByPage============
===========请求时间:2018-03-24 17:11:37==========================
url=http://localhost:8088/staff/findStaffByPage
method=GET
ip=0:0:0:0:0:0:0:1
class_method=com.jiemin.wages.controller.StaffController.findStaffByPage
args=Pages(first=false, last=false, pageSize=1, pageNumber=1, totalCount=0, totalPage=null)
=============结束请求时间:2018-03-24 17:11:37======================
Resolved exception caused by Handler execution: org.springframework.beans.factory.NoSuchBeanDefinitionException: No bean named 'transactionManager' available: No matching PlatformTransactionManager bean found for qualifier 'transactionManager' - neither qualifier match nor bean name match!
Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@8ee93e2: startup date [Sat Mar 24 17:11:18 CST 2018]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting WagesApplication on SKY-20171023NXB with PID 12152 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@30851ed7: startup date [Sat Mar 24 17:11:58 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.SalaryTypeRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'dataSource' of type [com.alibaba.druid.pool.DruidDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'myBatisConfig' of type [com.jiemin.wages.config.MyBatisConfig$$EnhancerBySpringCGLIB$$53457c5b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'annotationDrivenTransactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b56e9295] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 837 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@30851ed7: startup date [Sat Mar 24 17:11:58 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/salaryType/findSalaryTypeByPage]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.SalaryTypeController.findSalaryTypeByPage(com.jiemin.wages.domain.common.Pages,java.lang.String)
Mapped "{[/salaryType/updateSalaryType]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.SalaryTypeController.updateSalaryType(com.jiemin.wages.domain.SalaryType)
Mapped "{[/salaryType/delByGid]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.SalaryTypeController.deleteByGid(java.lang.Long)
Mapped "{[/salaryType/saveSalaryType]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.SalaryTypeController.saveSalaryType(com.jiemin.wages.domain.SalaryType)
Mapped "{[/staff/delByGid]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.deleteByGid(java.lang.Long)
Mapped "{[/staff/updateStaff]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.updateStaff(com.jiemin.wages.domain.Staff)
Mapped "{[/staff/saveStaff]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.addStaff(com.jiemin.wages.domain.Staff)
Mapped "{[/staff/findStaffByPage]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.findStaffByPage(com.jiemin.wages.domain.common.Pages,java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in exceptionHandle
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http) with context path ''
Started WagesApplication in 2.186 seconds (JVM running for 42.885)
Condition evaluation unchanged
Starting WagesApplication on SKY-20171023NXB with PID 11468 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@52415da3: startup date [Sat Mar 24 17:12:09 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.SalaryTypeRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'dataSource' of type [com.alibaba.druid.pool.DruidDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'myBatisConfig' of type [com.jiemin.wages.config.MyBatisConfig$$EnhancerBySpringCGLIB$$b89d600e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'annotationDrivenTransactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$1ac67648] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_131\bin;D:\java\apache-maven-3.5.2\bin;C:\Program Files (x86)\Git\cmd;%ZOOKEEPER_HOME%\bin;.]
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 2473 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.2.14.Final}
HHH000206: hibernate.properties not found
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@52415da3: startup date [Sat Mar 24 17:12:09 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/salaryType/updateSalaryType]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.SalaryTypeController.updateSalaryType(com.jiemin.wages.domain.SalaryType)
Mapped "{[/salaryType/saveSalaryType]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.SalaryTypeController.saveSalaryType(com.jiemin.wages.domain.SalaryType)
Mapped "{[/salaryType/delByGid]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.SalaryTypeController.deleteByGid(java.lang.Long)
Mapped "{[/salaryType/findSalaryTypeByPage]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.SalaryTypeController.findSalaryTypeByPage(com.jiemin.wages.domain.common.Pages,java.lang.String)
Mapped "{[/staff/updateStaff]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.updateStaff(com.jiemin.wages.domain.Staff)
Mapped "{[/staff/delByGid]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.deleteByGid(java.lang.Long)
Mapped "{[/staff/findStaffByPage]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.findStaffByPage(com.jiemin.wages.domain.common.Pages,java.lang.String)
Mapped "{[/staff/saveStaff]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.addStaff(com.jiemin.wages.domain.Staff)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in exceptionHandle
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http) with context path ''
Started WagesApplication in 6.462 seconds (JVM running for 7.251)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 24 ms
===========开始请求com.jiemin.wages.controller.StaffController.findStaffByPage============
===========请求时间:2018-03-24 17:12:19==========================
url=http://localhost:8088/staff/findStaffByPage
method=GET
ip=0:0:0:0:0:0:0:1
class_method=com.jiemin.wages.controller.StaffController.findStaffByPage
args=Pages(first=false, last=false, pageSize=1, pageNumber=1, totalCount=0, totalPage=null)
=============结束请求时间:2018-03-24 17:12:19======================
Resolved exception caused by Handler execution: org.springframework.beans.factory.NoSuchBeanDefinitionException: No bean named 'transactionManager' available: No matching PlatformTransactionManager bean found for qualifier 'transactionManager' - neither qualifier match nor bean name match!
Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@52415da3: startup date [Sat Mar 24 17:12:09 CST 2018]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting WagesApplication on SKY-20171023NXB with PID 11468 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5b2f8491: startup date [Sat Mar 24 17:13:44 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.SalaryTypeRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'dataSource' of type [com.alibaba.druid.pool.DruidDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'myBatisConfig' of type [com.jiemin.wages.config.MyBatisConfig$$EnhancerBySpringCGLIB$$b89d600e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'annotationDrivenTransactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$1ac67648] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 1299 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5b2f8491: startup date [Sat Mar 24 17:13:44 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/salaryType/updateSalaryType]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.SalaryTypeController.updateSalaryType(com.jiemin.wages.domain.SalaryType)
Mapped "{[/salaryType/saveSalaryType]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.SalaryTypeController.saveSalaryType(com.jiemin.wages.domain.SalaryType)
Mapped "{[/salaryType/delByGid]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.SalaryTypeController.deleteByGid(java.lang.Long)
Mapped "{[/salaryType/findSalaryTypeByPage]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.SalaryTypeController.findSalaryTypeByPage(com.jiemin.wages.domain.common.Pages,java.lang.String)
Mapped "{[/staff/updateStaff]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.updateStaff(com.jiemin.wages.domain.Staff)
Mapped "{[/staff/delByGid]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.deleteByGid(java.lang.Long)
Mapped "{[/staff/findStaffByPage]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.findStaffByPage(com.jiemin.wages.domain.common.Pages,java.lang.String)
Mapped "{[/staff/saveStaff]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.addStaff(com.jiemin.wages.domain.Staff)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in exceptionHandle
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http) with context path ''
Started WagesApplication in 4.328 seconds (JVM running for 101.355)
Condition evaluation unchanged
Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5b2f8491: startup date [Sat Mar 24 17:13:44 CST 2018]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting WagesApplication on SKY-20171023NXB with PID 11468 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2df3a286: startup date [Sat Mar 24 17:13:51 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.SalaryTypeRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'dataSource' of type [com.alibaba.druid.pool.DruidDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'myBatisConfig' of type [com.jiemin.wages.config.MyBatisConfig$$EnhancerBySpringCGLIB$$b89d600e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'annotationDrivenTransactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$1ac67648] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 910 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2df3a286: startup date [Sat Mar 24 17:13:51 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/salaryType/updateSalaryType]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.SalaryTypeController.updateSalaryType(com.jiemin.wages.domain.SalaryType)
Mapped "{[/salaryType/saveSalaryType]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.SalaryTypeController.saveSalaryType(com.jiemin.wages.domain.SalaryType)
Mapped "{[/salaryType/delByGid]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.SalaryTypeController.deleteByGid(java.lang.Long)
Mapped "{[/salaryType/findSalaryTypeByPage]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.SalaryTypeController.findSalaryTypeByPage(com.jiemin.wages.domain.common.Pages,java.lang.String)
Mapped "{[/staff/updateStaff]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.updateStaff(com.jiemin.wages.domain.Staff)
Mapped "{[/staff/delByGid]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.deleteByGid(java.lang.Long)
Mapped "{[/staff/findStaffByPage]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.findStaffByPage(com.jiemin.wages.domain.common.Pages,java.lang.String)
Mapped "{[/staff/saveStaff]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.addStaff(com.jiemin.wages.domain.Staff)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in exceptionHandle
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http) with context path ''
Started WagesApplication in 2.306 seconds (JVM running for 105.627)
Condition evaluation unchanged
Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2df3a286: startup date [Sat Mar 24 17:13:51 CST 2018]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting WagesApplication on SKY-20171023NXB with PID 11468 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@29ee8ce: startup date [Sat Mar 24 17:13:56 CST 2018]; root of context hierarchy
Starting WagesApplication on SKY-20171023NXB with PID 10752 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5476d30a: startup date [Sat Mar 24 17:14:02 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.SalaryTypeRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'dataSource' of type [com.alibaba.druid.pool.DruidDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'myBatisConfig' of type [com.jiemin.wages.config.MyBatisConfig$$EnhancerBySpringCGLIB$$8c4ef78b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'annotationDrivenTransactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$ee780dc5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_131\bin;D:\java\apache-maven-3.5.2\bin;C:\Program Files (x86)\Git\cmd;%ZOOKEEPER_HOME%\bin;.]
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 2445 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.2.14.Final}
HHH000206: hibernate.properties not found
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5476d30a: startup date [Sat Mar 24 17:14:02 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/salaryType/delByGid]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.SalaryTypeController.deleteByGid(java.lang.Long)
Mapped "{[/salaryType/updateSalaryType]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.SalaryTypeController.updateSalaryType(com.jiemin.wages.domain.SalaryType)
Mapped "{[/salaryType/saveSalaryType]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.SalaryTypeController.saveSalaryType(com.jiemin.wages.domain.SalaryType)
Mapped "{[/salaryType/findSalaryTypeByPage]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.SalaryTypeController.findSalaryTypeByPage(com.jiemin.wages.domain.common.Pages,java.lang.String)
Mapped "{[/staff/delByGid]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.deleteByGid(java.lang.Long)
Mapped "{[/staff/findStaffByPage]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.findStaffByPage(com.jiemin.wages.domain.common.Pages,java.lang.String)
Mapped "{[/staff/saveStaff]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.addStaff(com.jiemin.wages.domain.Staff)
Mapped "{[/staff/updateStaff]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.updateStaff(com.jiemin.wages.domain.Staff)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in exceptionHandle
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http) with context path ''
Started WagesApplication in 6.609 seconds (JVM running for 7.417)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 25 ms
===========开始请求com.jiemin.wages.controller.StaffController.findStaffByPage============
===========请求时间:2018-03-24 17:14:12==========================
url=http://localhost:8088/staff/findStaffByPage
method=GET
ip=0:0:0:0:0:0:0:1
class_method=com.jiemin.wages.controller.StaffController.findStaffByPage
args=Pages(first=false, last=false, pageSize=1, pageNumber=1, totalCount=0, totalPage=null)
=============结束请求时间:2018-03-24 17:14:12======================
Resolved exception caused by Handler execution: org.springframework.beans.factory.NoSuchBeanDefinitionException: No bean named 'transactionManager' available: No matching PlatformTransactionManager bean found for qualifier 'transactionManager' - neither qualifier match nor bean name match!
Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5476d30a: startup date [Sat Mar 24 17:14:02 CST 2018]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting WagesApplication on SKY-20171023NXB with PID 10752 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2a6dc893: startup date [Sat Mar 24 17:16:53 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.SalaryTypeRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'dataSource' of type [com.alibaba.druid.pool.DruidDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'myBatisConfig' of type [com.jiemin.wages.config.MyBatisConfig$$EnhancerBySpringCGLIB$$8c4ef78b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'annotationDrivenTransactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$ee780dc5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 1201 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2a6dc893: startup date [Sat Mar 24 17:16:53 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/salaryType/delByGid]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.SalaryTypeController.deleteByGid(java.lang.Long)
Mapped "{[/salaryType/updateSalaryType]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.SalaryTypeController.updateSalaryType(com.jiemin.wages.domain.SalaryType)
Mapped "{[/salaryType/saveSalaryType]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.SalaryTypeController.saveSalaryType(com.jiemin.wages.domain.SalaryType)
Mapped "{[/salaryType/findSalaryTypeByPage]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.SalaryTypeController.findSalaryTypeByPage(com.jiemin.wages.domain.common.Pages,java.lang.String)
Mapped "{[/staff/delByGid]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.deleteByGid(java.lang.Long)
Mapped "{[/staff/findStaffByPage]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.findStaffByPage(com.jiemin.wages.domain.common.Pages,java.lang.String)
Mapped "{[/staff/saveStaff]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.addStaff(com.jiemin.wages.domain.Staff)
Mapped "{[/staff/updateStaff]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.updateStaff(com.jiemin.wages.domain.Staff)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in exceptionHandle
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http) with context path ''
Started WagesApplication in 3.27 seconds (JVM running for 175.303)
Condition evaluation unchanged
Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2a6dc893: startup date [Sat Mar 24 17:16:53 CST 2018]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting WagesApplication on SKY-20171023NXB with PID 10752 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@99dcd1a: startup date [Sat Mar 24 17:17:01 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.SalaryTypeRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'dataSource' of type [com.alibaba.druid.pool.DruidDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'myBatisConfig' of type [com.jiemin.wages.config.MyBatisConfig$$EnhancerBySpringCGLIB$$8c4ef78b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'annotationDrivenTransactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$ee780dc5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 670 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@99dcd1a: startup date [Sat Mar 24 17:17:01 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/salaryType/delByGid]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.SalaryTypeController.deleteByGid(java.lang.Long)
Mapped "{[/salaryType/updateSalaryType]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.SalaryTypeController.updateSalaryType(com.jiemin.wages.domain.SalaryType)
Mapped "{[/salaryType/saveSalaryType]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.SalaryTypeController.saveSalaryType(com.jiemin.wages.domain.SalaryType)
Mapped "{[/salaryType/findSalaryTypeByPage]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.SalaryTypeController.findSalaryTypeByPage(com.jiemin.wages.domain.common.Pages,java.lang.String)
Mapped "{[/staff/delByGid]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.deleteByGid(java.lang.Long)
Mapped "{[/staff/findStaffByPage]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.findStaffByPage(com.jiemin.wages.domain.common.Pages,java.lang.String)
Mapped "{[/staff/saveStaff]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.addStaff(com.jiemin.wages.domain.Staff)
Mapped "{[/staff/updateStaff]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.updateStaff(com.jiemin.wages.domain.Staff)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in exceptionHandle
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http) with context path ''
Started WagesApplication in 2.139 seconds (JVM running for 182.383)
Condition evaluation unchanged
Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@99dcd1a: startup date [Sat Mar 24 17:17:01 CST 2018]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting WagesApplication on SKY-20171023NXB with PID 10752 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3a201e1e: startup date [Sat Mar 24 17:17:06 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.SalaryTypeRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'dataSource' of type [com.alibaba.druid.pool.DruidDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'myBatisConfig' of type [com.jiemin.wages.config.MyBatisConfig$$EnhancerBySpringCGLIB$$8c4ef78b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'annotationDrivenTransactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$ee780dc5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 846 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3a201e1e: startup date [Sat Mar 24 17:17:06 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/salaryType/delByGid]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.SalaryTypeController.deleteByGid(java.lang.Long)
Mapped "{[/salaryType/updateSalaryType]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.SalaryTypeController.updateSalaryType(com.jiemin.wages.domain.SalaryType)
Mapped "{[/salaryType/saveSalaryType]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.SalaryTypeController.saveSalaryType(com.jiemin.wages.domain.SalaryType)
Mapped "{[/salaryType/findSalaryTypeByPage]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.SalaryTypeController.findSalaryTypeByPage(com.jiemin.wages.domain.common.Pages,java.lang.String)
Mapped "{[/staff/delByGid]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.deleteByGid(java.lang.Long)
Mapped "{[/staff/findStaffByPage]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.findStaffByPage(com.jiemin.wages.domain.common.Pages,java.lang.String)
Mapped "{[/staff/saveStaff]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.addStaff(com.jiemin.wages.domain.Staff)
Mapped "{[/staff/updateStaff]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.updateStaff(com.jiemin.wages.domain.Staff)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in exceptionHandle
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http) with context path ''
Started WagesApplication in 2.037 seconds (JVM running for 187.269)
Condition evaluation unchanged
Starting WagesApplication on SKY-20171023NXB with PID 8724 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@177d90e9: startup date [Sat Mar 24 17:17:16 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.SalaryTypeRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'dataSource' of type [com.alibaba.druid.pool.DruidDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'myBatisConfig' of type [com.jiemin.wages.config.MyBatisConfig$$EnhancerBySpringCGLIB$$6dbb6cd2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'annotationDrivenTransactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$cfe4830c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_131\bin;D:\java\apache-maven-3.5.2\bin;C:\Program Files (x86)\Git\cmd;%ZOOKEEPER_HOME%\bin;.]
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 3140 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.2.14.Final}
HHH000206: hibernate.properties not found
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@177d90e9: startup date [Sat Mar 24 17:17:16 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/salaryType/updateSalaryType]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.SalaryTypeController.updateSalaryType(com.jiemin.wages.domain.SalaryType)
Mapped "{[/salaryType/saveSalaryType]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.SalaryTypeController.saveSalaryType(com.jiemin.wages.domain.SalaryType)
Mapped "{[/salaryType/delByGid]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.SalaryTypeController.deleteByGid(java.lang.Long)
Mapped "{[/salaryType/findSalaryTypeByPage]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.SalaryTypeController.findSalaryTypeByPage(com.jiemin.wages.domain.common.Pages,java.lang.String)
Mapped "{[/staff/updateStaff]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.updateStaff(com.jiemin.wages.domain.Staff)
Mapped "{[/staff/saveStaff]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.addStaff(com.jiemin.wages.domain.Staff)
Mapped "{[/staff/findStaffByPage]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.findStaffByPage(com.jiemin.wages.domain.common.Pages,java.lang.String)
Mapped "{[/staff/delByGid]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.deleteByGid(java.lang.Long)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in exceptionHandle
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http) with context path ''
Started WagesApplication in 8.607 seconds (JVM running for 9.529)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 28 ms
===========开始请求com.jiemin.wages.controller.StaffController.findStaffByPage============
===========请求时间:2018-03-24 17:17:27==========================
url=http://localhost:8088/staff/findStaffByPage
method=GET
ip=0:0:0:0:0:0:0:1
class_method=com.jiemin.wages.controller.StaffController.findStaffByPage
args=Pages(first=false, last=false, pageSize=1, pageNumber=1, totalCount=0, totalPage=null)
=============结束请求时间:2018-03-24 17:17:27======================
Resolved exception caused by Handler execution: org.springframework.beans.factory.NoSuchBeanDefinitionException: No bean named 'transactionManager' available: No matching PlatformTransactionManager bean found for qualifier 'transactionManager' - neither qualifier match nor bean name match!
Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@177d90e9: startup date [Sat Mar 24 17:17:16 CST 2018]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting WagesApplication on SKY-20171023NXB with PID 7592 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5850ae80: startup date [Sat Mar 24 17:23:57 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.SalaryTypeRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'dataSource' of type [com.alibaba.druid.pool.DruidDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'myBatisConfig' of type [com.jiemin.wages.config.MyBatisConfig$$EnhancerBySpringCGLIB$$a67911a6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'annotationDrivenTransactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$8a227e0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_131\bin;D:\java\apache-maven-3.5.2\bin;C:\Program Files (x86)\Git\cmd;%ZOOKEEPER_HOME%\bin;.]
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 3020 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.2.14.Final}
HHH000206: hibernate.properties not found
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5850ae80: startup date [Sat Mar 24 17:23:57 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/salaryType/saveSalaryType]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.SalaryTypeController.saveSalaryType(com.jiemin.wages.domain.SalaryType)
Mapped "{[/salaryType/updateSalaryType]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.SalaryTypeController.updateSalaryType(com.jiemin.wages.domain.SalaryType)
Mapped "{[/salaryType/delByGid]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.SalaryTypeController.deleteByGid(java.lang.Long)
Mapped "{[/salaryType/findSalaryTypeByPage]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.SalaryTypeController.findSalaryTypeByPage(com.jiemin.wages.domain.common.Pages,java.lang.String)
Mapped "{[/staff/saveStaff]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.addStaff(com.jiemin.wages.domain.Staff)
Mapped "{[/staff/findStaffByPage]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.findStaffByPage(com.jiemin.wages.domain.common.Pages,java.lang.String)
Mapped "{[/staff/updateStaff]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.updateStaff(com.jiemin.wages.domain.Staff)
Mapped "{[/staff/delByGid]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.deleteByGid(java.lang.Long)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in exceptionHandle
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http) with context path ''
Started WagesApplication in 8.987 seconds (JVM running for 10.495)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 30 ms
===========开始请求com.jiemin.wages.controller.StaffController.findStaffByPage============
===========请求时间:2018-03-24 17:24:09==========================
url=http://localhost:8088/staff/findStaffByPage
method=GET
ip=0:0:0:0:0:0:0:1
class_method=com.jiemin.wages.controller.StaffController.findStaffByPage
args=Pages(first=false, last=false, pageSize=1, pageNumber=1, totalCount=0, totalPage=null)
=============结束请求时间:2018-03-24 17:24:09======================
Resolved exception caused by Handler execution: org.springframework.beans.factory.NoSuchBeanDefinitionException: No bean named 'transactionManager' available: No matching PlatformTransactionManager bean found for qualifier 'transactionManager' - neither qualifier match nor bean name match!
Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5850ae80: startup date [Sat Mar 24 17:23:57 CST 2018]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting WagesApplication on SKY-20171023NXB with PID 7592 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@73eabc4a: startup date [Sat Mar 24 17:28:50 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.SalaryTypeRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'dataSource' of type [com.alibaba.druid.pool.DruidDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'myBatisConfig' of type [com.jiemin.wages.config.MyBatisConfig$$EnhancerBySpringCGLIB$$a67911a6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'annotationDrivenTransactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$8a227e0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 1664 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@73eabc4a: startup date [Sat Mar 24 17:28:50 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/salaryType/saveSalaryType]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.SalaryTypeController.saveSalaryType(com.jiemin.wages.domain.SalaryType)
Mapped "{[/salaryType/updateSalaryType]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.SalaryTypeController.updateSalaryType(com.jiemin.wages.domain.SalaryType)
Mapped "{[/salaryType/delByGid]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.SalaryTypeController.deleteByGid(java.lang.Long)
Mapped "{[/salaryType/findSalaryTypeByPage]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.SalaryTypeController.findSalaryTypeByPage(com.jiemin.wages.domain.common.Pages,java.lang.String)
Mapped "{[/staff/saveStaff]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.addStaff(com.jiemin.wages.domain.Staff)
Mapped "{[/staff/findStaffByPage]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.findStaffByPage(com.jiemin.wages.domain.common.Pages,java.lang.String)
Mapped "{[/staff/updateStaff]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.updateStaff(com.jiemin.wages.domain.Staff)
Mapped "{[/staff/delByGid]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.deleteByGid(java.lang.Long)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in exceptionHandle
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http) with context path ''
Started WagesApplication in 3.688 seconds (JVM running for 299.214)
Condition evaluation unchanged
Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@73eabc4a: startup date [Sat Mar 24 17:28:50 CST 2018]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting WagesApplication on SKY-20171023NXB with PID 7592 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@47a9a947: startup date [Sat Mar 24 17:28:58 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.SalaryTypeRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'dataSource' of type [com.alibaba.druid.pool.DruidDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'myBatisConfig' of type [com.jiemin.wages.config.MyBatisConfig$$EnhancerBySpringCGLIB$$a67911a6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'annotationDrivenTransactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$8a227e0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 1055 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@47a9a947: startup date [Sat Mar 24 17:28:58 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/salaryType/saveSalaryType]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.SalaryTypeController.saveSalaryType(com.jiemin.wages.domain.SalaryType)
Mapped "{[/salaryType/updateSalaryType]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.SalaryTypeController.updateSalaryType(com.jiemin.wages.domain.SalaryType)
Mapped "{[/salaryType/delByGid]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.SalaryTypeController.deleteByGid(java.lang.Long)
Mapped "{[/salaryType/findSalaryTypeByPage]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.SalaryTypeController.findSalaryTypeByPage(com.jiemin.wages.domain.common.Pages,java.lang.String)
Mapped "{[/staff/saveStaff]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.addStaff(com.jiemin.wages.domain.Staff)
Mapped "{[/staff/findStaffByPage]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.findStaffByPage(com.jiemin.wages.domain.common.Pages,java.lang.String)
Mapped "{[/staff/updateStaff]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.updateStaff(com.jiemin.wages.domain.Staff)
Mapped "{[/staff/delByGid]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.deleteByGid(java.lang.Long)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in exceptionHandle
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http) with context path ''
Started WagesApplication in 2.857 seconds (JVM running for 306.31)
Condition evaluation unchanged
Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@47a9a947: startup date [Sat Mar 24 17:28:58 CST 2018]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting WagesApplication on SKY-20171023NXB with PID 7592 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d16dc51: startup date [Sat Mar 24 17:29:02 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.SalaryTypeRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'dataSource' of type [com.alibaba.druid.pool.DruidDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'myBatisConfig' of type [com.jiemin.wages.config.MyBatisConfig$$EnhancerBySpringCGLIB$$a67911a6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'annotationDrivenTransactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$8a227e0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 1506 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d16dc51: startup date [Sat Mar 24 17:29:02 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/salaryType/saveSalaryType]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.SalaryTypeController.saveSalaryType(com.jiemin.wages.domain.SalaryType)
Mapped "{[/salaryType/updateSalaryType]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.SalaryTypeController.updateSalaryType(com.jiemin.wages.domain.SalaryType)
Mapped "{[/salaryType/delByGid]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.SalaryTypeController.deleteByGid(java.lang.Long)
Mapped "{[/salaryType/findSalaryTypeByPage]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.SalaryTypeController.findSalaryTypeByPage(com.jiemin.wages.domain.common.Pages,java.lang.String)
Mapped "{[/staff/saveStaff]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.addStaff(com.jiemin.wages.domain.Staff)
Mapped "{[/staff/findStaffByPage]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.findStaffByPage(com.jiemin.wages.domain.common.Pages,java.lang.String)
Mapped "{[/staff/updateStaff]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.updateStaff(com.jiemin.wages.domain.Staff)
Mapped "{[/staff/delByGid]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.deleteByGid(java.lang.Long)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in exceptionHandle
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http) with context path ''
Started WagesApplication in 3.387 seconds (JVM running for 311.36)
Condition evaluation unchanged
Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d16dc51: startup date [Sat Mar 24 17:29:02 CST 2018]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting WagesApplication on SKY-20171023NXB with PID 7592 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@273e96cb: startup date [Sat Mar 24 17:29:18 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.SalaryTypeRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'dataSource' of type [com.alibaba.druid.pool.DruidDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'myBatisConfig' of type [com.jiemin.wages.config.MyBatisConfig$$EnhancerBySpringCGLIB$$a67911a6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'annotationDrivenTransactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$8a227e0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 1053 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@273e96cb: startup date [Sat Mar 24 17:29:18 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/salaryType/saveSalaryType]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.SalaryTypeController.saveSalaryType(com.jiemin.wages.domain.SalaryType)
Mapped "{[/salaryType/updateSalaryType]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.SalaryTypeController.updateSalaryType(com.jiemin.wages.domain.SalaryType)
Mapped "{[/salaryType/delByGid]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.SalaryTypeController.deleteByGid(java.lang.Long)
Mapped "{[/salaryType/findSalaryTypeByPage]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.SalaryTypeController.findSalaryTypeByPage(com.jiemin.wages.domain.common.Pages,java.lang.String)
Mapped "{[/staff/saveStaff]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.addStaff(com.jiemin.wages.domain.Staff)
Mapped "{[/staff/findStaffByPage]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.findStaffByPage(com.jiemin.wages.domain.common.Pages,java.lang.String)
Mapped "{[/staff/updateStaff]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.updateStaff(com.jiemin.wages.domain.Staff)
Mapped "{[/staff/delByGid]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.deleteByGid(java.lang.Long)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in exceptionHandle
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http) with context path ''
Started WagesApplication in 3.579 seconds (JVM running for 327.733)
Condition evaluation unchanged
Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@273e96cb: startup date [Sat Mar 24 17:29:18 CST 2018]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting WagesApplication on SKY-20171023NXB with PID 7592 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@75d4688f: startup date [Sat Mar 24 17:29:34 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.SalaryTypeRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'dataSource' of type [com.alibaba.druid.pool.DruidDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'myBatisConfig' of type [com.jiemin.wages.config.MyBatisConfig$$EnhancerBySpringCGLIB$$a67911a6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'annotationDrivenTransactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$8a227e0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 926 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@75d4688f: startup date [Sat Mar 24 17:29:34 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/salaryType/saveSalaryType]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.SalaryTypeController.saveSalaryType(com.jiemin.wages.domain.SalaryType)
Mapped "{[/salaryType/updateSalaryType]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.SalaryTypeController.updateSalaryType(com.jiemin.wages.domain.SalaryType)
Mapped "{[/salaryType/delByGid]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.SalaryTypeController.deleteByGid(java.lang.Long)
Mapped "{[/salaryType/findSalaryTypeByPage]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.SalaryTypeController.findSalaryTypeByPage(com.jiemin.wages.domain.common.Pages,java.lang.String)
Mapped "{[/staff/saveStaff]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.addStaff(com.jiemin.wages.domain.Staff)
Mapped "{[/staff/findStaffByPage]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.findStaffByPage(com.jiemin.wages.domain.common.Pages,java.lang.String)
Mapped "{[/staff/updateStaff]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.updateStaff(com.jiemin.wages.domain.Staff)
Mapped "{[/staff/delByGid]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.deleteByGid(java.lang.Long)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in exceptionHandle
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http) with context path ''
Started WagesApplication in 2.444 seconds (JVM running for 342.38)
Condition evaluation unchanged
Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@75d4688f: startup date [Sat Mar 24 17:29:34 CST 2018]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting WagesApplication on SKY-20171023NXB with PID 7592 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@75581f47: startup date [Sat Mar 24 17:29:53 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.SalaryTypeRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'dataSource' of type [com.alibaba.druid.pool.DruidDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'myBatisConfig' of type [com.jiemin.wages.config.MyBatisConfig$$EnhancerBySpringCGLIB$$a67911a6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'annotationDrivenTransactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$8a227e0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 996 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'staffController' defined in file [D:\project\project\wages\target\classes\com\jiemin\wages\controller\StaffController.class]: Post-processing of merged bean definition failed; nested exception is java.lang.IllegalStateException: Failed to introspect Class [com.jiemin.wages.controller.StaffController] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@4fcf925]
Closing JPA EntityManagerFactory for persistence unit 'default'
Stopping service [Tomcat]


Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
Starting WagesApplication on SKY-20171023NXB with PID 11168 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@96f0e5e: startup date [Sat Mar 24 17:30:02 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.SalaryTypeRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'dataSource' of type [com.alibaba.druid.pool.DruidDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'myBatisConfig' of type [com.jiemin.wages.config.MyBatisConfig$$EnhancerBySpringCGLIB$$87fb83a8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'annotationDrivenTransactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$ea2499e2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_131\bin;D:\java\apache-maven-3.5.2\bin;C:\Program Files (x86)\Git\cmd;%ZOOKEEPER_HOME%\bin;.]
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 2734 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.2.14.Final}
HHH000206: hibernate.properties not found
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@96f0e5e: startup date [Sat Mar 24 17:30:02 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/salaryType/saveSalaryType]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.SalaryTypeController.saveSalaryType(com.jiemin.wages.domain.SalaryType)
Mapped "{[/salaryType/delByGid]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.SalaryTypeController.deleteByGid(java.lang.Long)
Mapped "{[/salaryType/updateSalaryType]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.SalaryTypeController.updateSalaryType(com.jiemin.wages.domain.SalaryType)
Mapped "{[/salaryType/findSalaryTypeByPage]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.SalaryTypeController.findSalaryTypeByPage(com.jiemin.wages.domain.common.Pages,java.lang.String)
Mapped "{[/staff/saveStaff]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.addStaff(com.jiemin.wages.domain.Staff)
Mapped "{[/staff/delByGid]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.deleteByGid(java.lang.Long)
Mapped "{[/staff/updateStaff]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.updateStaff(com.jiemin.wages.domain.Staff)
Mapped "{[/staff/findStaffByPage]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.findStaffByPage(com.jiemin.wages.domain.common.Pages,java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in exceptionHandle
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http) with context path ''
Started WagesApplication in 8.333 seconds (JVM running for 9.194)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 30 ms
===========开始请求com.jiemin.wages.controller.StaffController.addStaff============
===========请求时间:2018-03-24 17:30:13==========================
url=http://localhost:8088/staff/saveStaff
method=GET
ip=0:0:0:0:0:0:0:1
class_method=com.jiemin.wages.controller.StaffController.addStaff
args=Staff(gid=null, userName=刘英杰1, userSex=1, userTel=15215215962, emergencyName=刘老大1, emergencyTel=1888888888, bankCard=11111111111111111111)
=============结束请求时间:2018-03-24 17:30:14======================
response=Result(code=200, msg=成功, data=Staff(gid=null, userName=刘英杰1, userSex=1, userTel=15215215962, emergencyName=刘老大1, emergencyTel=1888888888, bankCard=11111111111111111111), page=null)
Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@96f0e5e: startup date [Sat Mar 24 17:30:02 CST 2018]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting WagesApplication on SKY-20171023NXB with PID 11168 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@407fd326: startup date [Sat Mar 24 17:31:19 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.SalaryTypeRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'dataSource' of type [com.alibaba.druid.pool.DruidDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'myBatisConfig' of type [com.jiemin.wages.config.MyBatisConfig$$EnhancerBySpringCGLIB$$87fb83a8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'annotationDrivenTransactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$ea2499e2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 1206 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@407fd326: startup date [Sat Mar 24 17:31:19 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/salaryType/saveSalaryType]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.SalaryTypeController.saveSalaryType(com.jiemin.wages.domain.SalaryType)
Mapped "{[/salaryType/delByGid]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.SalaryTypeController.deleteByGid(java.lang.Long)
Mapped "{[/salaryType/updateSalaryType]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.SalaryTypeController.updateSalaryType(com.jiemin.wages.domain.SalaryType)
Mapped "{[/salaryType/findSalaryTypeByPage]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.SalaryTypeController.findSalaryTypeByPage(com.jiemin.wages.domain.common.Pages,java.lang.String)
Mapped "{[/staff/saveStaff]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.addStaff(com.jiemin.wages.domain.Staff)
Mapped "{[/staff/delByGid]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.deleteByGid(java.lang.Long)
Mapped "{[/staff/updateStaff]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.updateStaff(com.jiemin.wages.domain.Staff)
Mapped "{[/staff/findStaffByPage]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.findStaffByPage(com.jiemin.wages.domain.common.Pages,java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in exceptionHandle
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http) with context path ''
Started WagesApplication in 3.102 seconds (JVM running for 81.815)
Condition evaluation unchanged
Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@407fd326: startup date [Sat Mar 24 17:31:19 CST 2018]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting WagesApplication on SKY-20171023NXB with PID 11168 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7bbafd6c: startup date [Sat Mar 24 17:31:42 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.SalaryTypeRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'dataSource' of type [com.alibaba.druid.pool.DruidDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'myBatisConfig' of type [com.jiemin.wages.config.MyBatisConfig$$EnhancerBySpringCGLIB$$87fb83a8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'annotationDrivenTransactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$ea2499e2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 1054 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7bbafd6c: startup date [Sat Mar 24 17:31:42 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/salaryType/saveSalaryType]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.SalaryTypeController.saveSalaryType(com.jiemin.wages.domain.SalaryType)
Mapped "{[/salaryType/delByGid]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.SalaryTypeController.deleteByGid(java.lang.Long)
Mapped "{[/salaryType/updateSalaryType]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.SalaryTypeController.updateSalaryType(com.jiemin.wages.domain.SalaryType)
Mapped "{[/salaryType/findSalaryTypeByPage]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.SalaryTypeController.findSalaryTypeByPage(com.jiemin.wages.domain.common.Pages,java.lang.String)
Mapped "{[/staff/saveStaff]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.addStaff(com.jiemin.wages.domain.Staff)
Mapped "{[/staff/delByGid]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.deleteByGid(java.lang.Long)
Mapped "{[/staff/updateStaff]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.updateStaff(com.jiemin.wages.domain.Staff)
Mapped "{[/staff/findStaffByPage]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.findStaffByPage(com.jiemin.wages.domain.common.Pages,java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in exceptionHandle
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http) with context path ''
Started WagesApplication in 2.674 seconds (JVM running for 104.886)
Condition evaluation unchanged
Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7bbafd6c: startup date [Sat Mar 24 17:31:42 CST 2018]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting WagesApplication on SKY-20171023NXB with PID 11168 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@f5bb42f: startup date [Sat Mar 24 17:31:54 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.SalaryTypeRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'dataSource' of type [com.alibaba.druid.pool.DruidDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'myBatisConfig' of type [com.jiemin.wages.config.MyBatisConfig$$EnhancerBySpringCGLIB$$87fb83a8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'annotationDrivenTransactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$ea2499e2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 1439 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'staffController' defined in file [D:\project\project\wages\target\classes\com\jiemin\wages\controller\StaffController.class]: Post-processing of merged bean definition failed; nested exception is java.lang.IllegalStateException: Failed to introspect Class [com.jiemin.wages.controller.StaffController] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@76ced2e6]
Closing JPA EntityManagerFactory for persistence unit 'default'
Stopping service [Tomcat]


Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
Starting WagesApplication on SKY-20171023NXB with PID 11168 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@633190d1: startup date [Sat Mar 24 17:32:05 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.SalaryTypeRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'dataSource' of type [com.alibaba.druid.pool.DruidDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'myBatisConfig' of type [com.jiemin.wages.config.MyBatisConfig$$EnhancerBySpringCGLIB$$87fb83a8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'annotationDrivenTransactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$ea2499e2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 1173 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@633190d1: startup date [Sat Mar 24 17:32:05 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/salaryType/saveSalaryType]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.SalaryTypeController.saveSalaryType(com.jiemin.wages.domain.SalaryType)
Mapped "{[/salaryType/delByGid]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.SalaryTypeController.deleteByGid(java.lang.Long)
Mapped "{[/salaryType/updateSalaryType]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.SalaryTypeController.updateSalaryType(com.jiemin.wages.domain.SalaryType)
Mapped "{[/salaryType/findSalaryTypeByPage]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.SalaryTypeController.findSalaryTypeByPage(com.jiemin.wages.domain.common.Pages,java.lang.String)
Mapped "{[/staff/saveStaff]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.addStaff(com.jiemin.wages.domain.Staff)
Mapped "{[/staff/delByGid]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.deleteByGid(java.lang.Long)
Mapped "{[/staff/updateStaff]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.updateStaff(com.jiemin.wages.domain.Staff)
Mapped "{[/staff/findStaffByPage]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.findStaffByPage(com.jiemin.wages.domain.common.Pages,java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in exceptionHandle
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http) with context path ''
Started WagesApplication in 2.774 seconds (JVM running for 127.142)
Condition evaluation unchanged
Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@633190d1: startup date [Sat Mar 24 17:32:05 CST 2018]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting WagesApplication on SKY-20171023NXB with PID 11168 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@27b47278: startup date [Sat Mar 24 17:32:11 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.SalaryTypeRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'dataSource' of type [com.alibaba.druid.pool.DruidDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'myBatisConfig' of type [com.jiemin.wages.config.MyBatisConfig$$EnhancerBySpringCGLIB$$87fb83a8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'annotationDrivenTransactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$ea2499e2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 1304 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Starting WagesApplication on SKY-20171023NXB with PID 11096 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1fb5a388: startup date [Sat Mar 24 17:32:18 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.SalaryTypeRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'dataSource' of type [com.alibaba.druid.pool.DruidDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'myBatisConfig' of type [com.jiemin.wages.config.MyBatisConfig$$EnhancerBySpringCGLIB$$41916a98] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'annotationDrivenTransactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$a3ba80d2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_131\bin;D:\java\apache-maven-3.5.2\bin;C:\Program Files (x86)\Git\cmd;%ZOOKEEPER_HOME%\bin;.]
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 2791 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.2.14.Final}
HHH000206: hibernate.properties not found
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1fb5a388: startup date [Sat Mar 24 17:32:18 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/salaryType/saveSalaryType]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.SalaryTypeController.saveSalaryType(com.jiemin.wages.domain.SalaryType)
Mapped "{[/salaryType/delByGid]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.SalaryTypeController.deleteByGid(java.lang.Long)
Mapped "{[/salaryType/updateSalaryType]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.SalaryTypeController.updateSalaryType(com.jiemin.wages.domain.SalaryType)
Mapped "{[/salaryType/findSalaryTypeByPage]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.SalaryTypeController.findSalaryTypeByPage(com.jiemin.wages.domain.common.Pages,java.lang.String)
Mapped "{[/staff/delByGid]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.deleteByGid(java.lang.Long)
Mapped "{[/staff/findStaffByPage]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.findStaffByPage(com.jiemin.wages.domain.common.Pages,java.lang.String)
Mapped "{[/staff/updateStaff]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.updateStaff(com.jiemin.wages.domain.Staff)
Mapped "{[/staff/saveStaff]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.addStaff(com.jiemin.wages.domain.Staff)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in exceptionHandle
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http) with context path ''
Started WagesApplication in 8.125 seconds (JVM running for 8.944)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 30 ms
===========开始请求com.jiemin.wages.controller.StaffController.deleteByGid============
===========请求时间:2018-03-24 17:33:19==========================
url=http://localhost:8088/staff/delByGid
method=GET
ip=0:0:0:0:0:0:0:1
class_method=com.jiemin.wages.controller.StaffController.deleteByGid
args=14
=============结束请求时间:2018-03-24 17:33:19======================
Resolved exception caused by Handler execution: com.jiemin.wages.exception.FarmException: 非法操作
===========开始请求com.jiemin.wages.controller.StaffController.deleteByGid============
===========请求时间:2018-03-24 17:33:23==========================
url=http://localhost:8088/staff/delByGid
method=GET
ip=0:0:0:0:0:0:0:1
class_method=com.jiemin.wages.controller.StaffController.deleteByGid
args=16
=============结束请求时间:2018-03-24 17:33:23======================
Resolved exception caused by Handler execution: com.jiemin.wages.exception.FarmException: 非法操作
===========开始请求com.jiemin.wages.controller.StaffController.deleteByGid============
===========请求时间:2018-03-24 17:33:37==========================
url=http://localhost:8088/staff/delByGid
method=GET
ip=0:0:0:0:0:0:0:1
class_method=com.jiemin.wages.controller.StaffController.deleteByGid
args=15
=============结束请求时间:2018-03-24 17:33:37======================
Resolved exception caused by Handler execution: com.jiemin.wages.exception.FarmException: 非法操作
===========开始请求com.jiemin.wages.controller.StaffController.deleteByGid============
===========请求时间:2018-03-24 17:33:57==========================
url=http://localhost:8088/staff/delByGid
method=GET
ip=0:0:0:0:0:0:0:1
class_method=com.jiemin.wages.controller.StaffController.deleteByGid
args=15
=============结束请求时间:2018-03-24 17:33:57======================
Resolved exception caused by Handler execution: com.jiemin.wages.exception.FarmException: 非法操作
Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1fb5a388: startup date [Sat Mar 24 17:32:18 CST 2018]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting WagesApplication on SKY-20171023NXB with PID 11096 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@285b70ed: startup date [Sat Mar 24 17:35:22 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.SalaryTypeRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'dataSource' of type [com.alibaba.druid.pool.DruidDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'myBatisConfig' of type [com.jiemin.wages.config.MyBatisConfig$$EnhancerBySpringCGLIB$$41916a98] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'annotationDrivenTransactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$a3ba80d2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 1323 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@285b70ed: startup date [Sat Mar 24 17:35:22 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/salaryType/saveSalaryType]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.SalaryTypeController.saveSalaryType(com.jiemin.wages.domain.SalaryType)
Mapped "{[/salaryType/delByGid]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.SalaryTypeController.deleteByGid(java.lang.Long)
Mapped "{[/salaryType/updateSalaryType]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.SalaryTypeController.updateSalaryType(com.jiemin.wages.domain.SalaryType)
Mapped "{[/salaryType/findSalaryTypeByPage]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.SalaryTypeController.findSalaryTypeByPage(com.jiemin.wages.domain.common.Pages,java.lang.String)
Mapped "{[/staff/delByGid]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.deleteByGid(java.lang.Long)
Mapped "{[/staff/findStaffByPage]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.findStaffByPage(com.jiemin.wages.domain.common.Pages,java.lang.String)
Mapped "{[/staff/updateStaff]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.updateStaff(com.jiemin.wages.domain.Staff)
Mapped "{[/staff/saveStaff]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.addStaff(com.jiemin.wages.domain.Staff)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in exceptionHandle
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http) with context path ''
Started WagesApplication in 3.017 seconds (JVM running for 187.834)
Condition evaluation unchanged
Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@285b70ed: startup date [Sat Mar 24 17:35:22 CST 2018]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting WagesApplication on SKY-20171023NXB with PID 11096 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@214b0992: startup date [Sat Mar 24 17:35:36 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.SalaryTypeRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'dataSource' of type [com.alibaba.druid.pool.DruidDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'myBatisConfig' of type [com.jiemin.wages.config.MyBatisConfig$$EnhancerBySpringCGLIB$$41916a98] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'annotationDrivenTransactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$a3ba80d2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 1303 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'staffController' defined in file [D:\project\project\wages\target\classes\com\jiemin\wages\controller\StaffController.class]: Post-processing of merged bean definition failed; nested exception is java.lang.IllegalStateException: Failed to introspect Class [com.jiemin.wages.controller.StaffController] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@51763a44]
Closing JPA EntityManagerFactory for persistence unit 'default'
Stopping service [Tomcat]


Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
Starting WagesApplication on SKY-20171023NXB with PID 11096 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@37fb1606: startup date [Sat Mar 24 17:35:42 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.SalaryTypeRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'dataSource' of type [com.alibaba.druid.pool.DruidDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'myBatisConfig' of type [com.jiemin.wages.config.MyBatisConfig$$EnhancerBySpringCGLIB$$41916a98] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'annotationDrivenTransactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$a3ba80d2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 1227 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Starting WagesApplication on SKY-20171023NXB with PID 8240 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@564882c6: startup date [Sat Mar 24 17:35:47 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.SalaryTypeRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'dataSource' of type [com.alibaba.druid.pool.DruidDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'myBatisConfig' of type [com.jiemin.wages.config.MyBatisConfig$$EnhancerBySpringCGLIB$$73d54add] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'annotationDrivenTransactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$d5fe6117] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_131\bin;D:\java\apache-maven-3.5.2\bin;C:\Program Files (x86)\Git\cmd;%ZOOKEEPER_HOME%\bin;.]
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 3359 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.2.14.Final}
HHH000206: hibernate.properties not found
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@564882c6: startup date [Sat Mar 24 17:35:47 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/salaryType/findSalaryTypeByPage]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.SalaryTypeController.findSalaryTypeByPage(com.jiemin.wages.domain.common.Pages,java.lang.String)
Mapped "{[/salaryType/saveSalaryType]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.SalaryTypeController.saveSalaryType(com.jiemin.wages.domain.SalaryType)
Mapped "{[/salaryType/delByGid]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.SalaryTypeController.deleteByGid(java.lang.Long)
Mapped "{[/salaryType/updateSalaryType]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.SalaryTypeController.updateSalaryType(com.jiemin.wages.domain.SalaryType)
Mapped "{[/staff/findStaffByPage]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.findStaffByPage(com.jiemin.wages.domain.common.Pages,java.lang.String)
Mapped "{[/staff/saveStaff]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.addStaff(com.jiemin.wages.domain.Staff)
Mapped "{[/staff/delByGid]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.deleteByGid(java.lang.Long)
Mapped "{[/staff/updateStaff]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.updateStaff(com.jiemin.wages.domain.Staff)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in exceptionHandle
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http) with context path ''
Started WagesApplication in 8.968 seconds (JVM running for 9.87)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 31 ms
===========开始请求com.jiemin.wages.controller.StaffController.deleteByGid============
===========请求时间:2018-03-24 17:35:59==========================
url=http://localhost:8088/staff/delByGid
method=GET
ip=0:0:0:0:0:0:0:1
class_method=com.jiemin.wages.controller.StaffController.deleteByGid
args=15
=============结束请求时间:2018-03-24 17:35:59======================
Resolved exception caused by Handler execution: com.jiemin.wages.exception.FarmException: 非法操作
Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@564882c6: startup date [Sat Mar 24 17:35:47 CST 2018]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting WagesApplication on SKY-20171023NXB with PID 8240 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@730c9b3a: startup date [Sat Mar 24 17:36:25 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.SalaryTypeRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'dataSource' of type [com.alibaba.druid.pool.DruidDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'myBatisConfig' of type [com.jiemin.wages.config.MyBatisConfig$$EnhancerBySpringCGLIB$$73d54add] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'annotationDrivenTransactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$d5fe6117] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 1393 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'staffController': Unsatisfied dependency expressed through field 'service'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.jiemin.wages.service.StaffService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
Closing JPA EntityManagerFactory for persistence unit 'default'
Stopping service [Tomcat]


Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
Starting WagesApplication on SKY-20171023NXB with PID 8240 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@31e72eef: startup date [Sat Mar 24 17:36:31 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.SalaryTypeRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'dataSource' of type [com.alibaba.druid.pool.DruidDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'myBatisConfig' of type [com.jiemin.wages.config.MyBatisConfig$$EnhancerBySpringCGLIB$$73d54add] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'annotationDrivenTransactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$d5fe6117] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 1092 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Starting WagesApplication on SKY-20171023NXB with PID 5452 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1b6dec9f: startup date [Sat Mar 24 17:36:35 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.SalaryTypeRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'dataSource' of type [com.alibaba.druid.pool.DruidDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'myBatisConfig' of type [com.jiemin.wages.config.MyBatisConfig$$EnhancerBySpringCGLIB$$30c32f3d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'annotationDrivenTransactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$92ec4577] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_131\bin;D:\java\apache-maven-3.5.2\bin;C:\Program Files (x86)\Git\cmd;%ZOOKEEPER_HOME%\bin;.]
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 3737 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.2.14.Final}
HHH000206: hibernate.properties not found
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1b6dec9f: startup date [Sat Mar 24 17:36:35 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/salaryType/delByGid]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.SalaryTypeController.deleteByGid(java.lang.Long)
Mapped "{[/salaryType/saveSalaryType]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.SalaryTypeController.saveSalaryType(com.jiemin.wages.domain.SalaryType)
Mapped "{[/salaryType/updateSalaryType]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.SalaryTypeController.updateSalaryType(com.jiemin.wages.domain.SalaryType)
Mapped "{[/salaryType/findSalaryTypeByPage]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.SalaryTypeController.findSalaryTypeByPage(com.jiemin.wages.domain.common.Pages,java.lang.String)
Mapped "{[/staff/delByGid]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.deleteByGid(java.lang.Long)
Mapped "{[/staff/updateStaff]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.updateStaff(com.jiemin.wages.domain.Staff)
Mapped "{[/staff/findStaffByPage]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.findStaffByPage(com.jiemin.wages.domain.common.Pages,java.lang.String)
Mapped "{[/staff/saveStaff]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.addStaff(com.jiemin.wages.domain.Staff)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in exceptionHandle
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http) with context path ''
Started WagesApplication in 9.086 seconds (JVM running for 10.29)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 28 ms
===========开始请求com.jiemin.wages.controller.StaffController.deleteByGid============
===========请求时间:2018-03-24 17:36:48==========================
url=http://localhost:8088/staff/delByGid
method=GET
ip=0:0:0:0:0:0:0:1
class_method=com.jiemin.wages.controller.StaffController.deleteByGid
args=15
=============结束请求时间:2018-03-24 17:36:48======================
Resolved exception caused by Handler execution: com.jiemin.wages.exception.FarmException: 非法操作
Starting WagesApplication on SKY-20171023NXB with PID 11288 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@23112498: startup date [Sat Mar 24 17:38:28 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.SalaryTypeRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'dataSource' of type [com.alibaba.druid.pool.DruidDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'myBatisConfig' of type [com.jiemin.wages.config.MyBatisConfig$$EnhancerBySpringCGLIB$$69ae8111] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'annotationDrivenTransactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$cbd7974b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_131\bin;D:\java\apache-maven-3.5.2\bin;C:\Program Files (x86)\Git\cmd;%ZOOKEEPER_HOME%\bin;.]
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 2319 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.2.14.Final}
HHH000206: hibernate.properties not found
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@23112498: startup date [Sat Mar 24 17:38:28 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/salaryType/saveSalaryType]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.SalaryTypeController.saveSalaryType(com.jiemin.wages.domain.SalaryType)
Mapped "{[/salaryType/delByGid]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.SalaryTypeController.deleteByGid(java.lang.Long)
Mapped "{[/salaryType/updateSalaryType]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.SalaryTypeController.updateSalaryType(com.jiemin.wages.domain.SalaryType)
Mapped "{[/salaryType/findSalaryTypeByPage]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.SalaryTypeController.findSalaryTypeByPage(com.jiemin.wages.domain.common.Pages,java.lang.String)
Mapped "{[/staff/updateStaff]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.updateStaff(com.jiemin.wages.domain.Staff)
Mapped "{[/staff/findStaffByPage]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.findStaffByPage(com.jiemin.wages.domain.common.Pages,java.lang.String)
Mapped "{[/staff/saveStaff]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.addStaff(com.jiemin.wages.domain.Staff)
Mapped "{[/staff/delByGid]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.deleteByGid(java.lang.Long)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in exceptionHandle
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http) with context path ''
Started WagesApplication in 6.858 seconds (JVM running for 7.631)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 24 ms
===========开始请求com.jiemin.wages.controller.StaffController.deleteByGid============
===========请求时间:2018-03-24 17:38:39==========================
url=http://localhost:8088/staff/delByGid
method=GET
ip=0:0:0:0:0:0:0:1
class_method=com.jiemin.wages.controller.StaffController.deleteByGid
args=15
=============结束请求时间:2018-03-24 17:38:39======================
Resolved exception caused by Handler execution: com.jiemin.wages.exception.FarmException: 非法操作
Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@23112498: startup date [Sat Mar 24 17:38:28 CST 2018]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting WagesApplication on SKY-20171023NXB with PID 11288 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2b5de002: startup date [Sat Mar 24 17:40:58 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.SalaryTypeRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'dataSource' of type [com.alibaba.druid.pool.DruidDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'myBatisConfig' of type [com.jiemin.wages.config.MyBatisConfig$$EnhancerBySpringCGLIB$$69ae8111] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'annotationDrivenTransactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$cbd7974b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 709 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2b5de002: startup date [Sat Mar 24 17:40:58 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/salaryType/saveSalaryType]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.SalaryTypeController.saveSalaryType(com.jiemin.wages.domain.SalaryType)
Mapped "{[/salaryType/delByGid]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.SalaryTypeController.deleteByGid(java.lang.Long)
Mapped "{[/salaryType/updateSalaryType]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.SalaryTypeController.updateSalaryType(com.jiemin.wages.domain.SalaryType)
Mapped "{[/salaryType/findSalaryTypeByPage]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.SalaryTypeController.findSalaryTypeByPage(com.jiemin.wages.domain.common.Pages,java.lang.String)
Mapped "{[/staff/updateStaff]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.updateStaff(com.jiemin.wages.domain.Staff)
Mapped "{[/staff/findStaffByPage]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.findStaffByPage(com.jiemin.wages.domain.common.Pages,java.lang.String)
Mapped "{[/staff/saveStaff]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.addStaff(com.jiemin.wages.domain.Staff)
Mapped "{[/staff/delByGid]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.deleteByGid(java.lang.Long)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in exceptionHandle
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http) with context path ''
Started WagesApplication in 2.052 seconds (JVM running for 153.07)
Condition evaluation unchanged
Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2b5de002: startup date [Sat Mar 24 17:40:58 CST 2018]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting WagesApplication on SKY-20171023NXB with PID 11288 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@77db0ecf: startup date [Sat Mar 24 17:41:08 CST 2018]; root of context hierarchy
Starting WagesApplication on SKY-20171023NXB with PID 10724 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@67332ff5: startup date [Sat Mar 24 17:41:12 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.SalaryTypeRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'dataSource' of type [com.alibaba.druid.pool.DruidDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'myBatisConfig' of type [com.jiemin.wages.config.MyBatisConfig$$EnhancerBySpringCGLIB$$1638b6b3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'annotationDrivenTransactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$7861cced] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_131\bin;D:\java\apache-maven-3.5.2\bin;C:\Program Files (x86)\Git\cmd;%ZOOKEEPER_HOME%\bin;.]
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 2427 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.2.14.Final}
HHH000206: hibernate.properties not found
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@67332ff5: startup date [Sat Mar 24 17:41:12 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/salaryType/findSalaryTypeByPage]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.SalaryTypeController.findSalaryTypeByPage(com.jiemin.wages.domain.common.Pages,java.lang.String)
Mapped "{[/salaryType/updateSalaryType]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.SalaryTypeController.updateSalaryType(com.jiemin.wages.domain.SalaryType)
Mapped "{[/salaryType/saveSalaryType]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.SalaryTypeController.saveSalaryType(com.jiemin.wages.domain.SalaryType)
Mapped "{[/salaryType/delByGid]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.SalaryTypeController.deleteByGid(java.lang.Long)
Mapped "{[/staff/findStaffByPage]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.findStaffByPage(com.jiemin.wages.domain.common.Pages,java.lang.String)
Mapped "{[/staff/saveStaff]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.addStaff(com.jiemin.wages.domain.Staff)
Mapped "{[/staff/delByGid]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.deleteByGid(java.lang.Long)
Mapped "{[/staff/updateStaff]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.updateStaff(com.jiemin.wages.domain.Staff)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in exceptionHandle
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http) with context path ''
Started WagesApplication in 7.045 seconds (JVM running for 7.964)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 23 ms
===========开始请求com.jiemin.wages.controller.StaffController.deleteByGid============
===========请求时间:2018-03-24 17:41:28==========================
url=http://localhost:8088/staff/delByGid
method=GET
ip=0:0:0:0:0:0:0:1
class_method=com.jiemin.wages.controller.StaffController.deleteByGid
args=15
=============结束请求时间:2018-03-24 17:41:28======================
Resolved exception caused by Handler execution: com.jiemin.wages.exception.FarmException: 非法操作
Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@67332ff5: startup date [Sat Mar 24 17:41:12 CST 2018]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting WagesApplication on SKY-20171023NXB with PID 10724 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1473a75c: startup date [Sat Mar 24 17:42:07 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.SalaryTypeRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'dataSource' of type [com.alibaba.druid.pool.DruidDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'myBatisConfig' of type [com.jiemin.wages.config.MyBatisConfig$$EnhancerBySpringCGLIB$$1638b6b3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'annotationDrivenTransactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$7861cced] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 1041 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1473a75c: startup date [Sat Mar 24 17:42:07 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/salaryType/findSalaryTypeByPage]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.SalaryTypeController.findSalaryTypeByPage(com.jiemin.wages.domain.common.Pages,java.lang.String)
Mapped "{[/salaryType/updateSalaryType]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.SalaryTypeController.updateSalaryType(com.jiemin.wages.domain.SalaryType)
Mapped "{[/salaryType/saveSalaryType]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.SalaryTypeController.saveSalaryType(com.jiemin.wages.domain.SalaryType)
Mapped "{[/salaryType/delByGid]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.SalaryTypeController.deleteByGid(java.lang.Long)
Mapped "{[/staff/findStaffByPage]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.findStaffByPage(com.jiemin.wages.domain.common.Pages,java.lang.String)
Mapped "{[/staff/saveStaff]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.addStaff(com.jiemin.wages.domain.Staff)
Mapped "{[/staff/delByGid]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.deleteByGid(java.lang.Long)
Mapped "{[/staff/updateStaff]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.updateStaff(com.jiemin.wages.domain.Staff)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in exceptionHandle
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
Starting WagesApplication on SKY-20171023NXB with PID 5944 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@41be876: startup date [Sat Mar 24 17:42:15 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.SalaryTypeRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'dataSource' of type [com.alibaba.druid.pool.DruidDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'myBatisConfig' of type [com.jiemin.wages.config.MyBatisConfig$$EnhancerBySpringCGLIB$$ca83f08d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'annotationDrivenTransactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$2cad06c7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_131\bin;D:\java\apache-maven-3.5.2\bin;C:\Program Files (x86)\Git\cmd;%ZOOKEEPER_HOME%\bin;.]
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 2354 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.2.14.Final}
HHH000206: hibernate.properties not found
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@41be876: startup date [Sat Mar 24 17:42:15 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/salaryType/findSalaryTypeByPage]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.SalaryTypeController.findSalaryTypeByPage(com.jiemin.wages.domain.common.Pages,java.lang.String)
Mapped "{[/salaryType/delByGid]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.SalaryTypeController.deleteByGid(java.lang.Long)
Mapped "{[/salaryType/saveSalaryType]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.SalaryTypeController.saveSalaryType(com.jiemin.wages.domain.SalaryType)
Mapped "{[/salaryType/updateSalaryType]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.SalaryTypeController.updateSalaryType(com.jiemin.wages.domain.SalaryType)
Mapped "{[/staff/delByGid]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.deleteByGid(java.lang.Long)
Mapped "{[/staff/saveStaff]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.addStaff(com.jiemin.wages.domain.Staff)
Mapped "{[/staff/findStaffByPage]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.findStaffByPage(com.jiemin.wages.domain.common.Pages,java.lang.String)
Mapped "{[/staff/updateStaff]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.updateStaff(com.jiemin.wages.domain.Staff)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in exceptionHandle
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http) with context path ''
Started WagesApplication in 6.542 seconds (JVM running for 7.298)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 21 ms
===========开始请求com.jiemin.wages.controller.StaffController.deleteByGid============
===========请求时间:2018-03-24 17:42:25==========================
url=http://localhost:8088/staff/delByGid
method=GET
ip=0:0:0:0:0:0:0:1
class_method=com.jiemin.wages.controller.StaffController.deleteByGid
args=15
=============结束请求时间:2018-03-24 17:42:25======================
response=Result(code=200, msg=成功, data=null, page=null)
Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@41be876: startup date [Sat Mar 24 17:42:15 CST 2018]; root of context hierarchy
Unregistering JMX-exposed beans on shutdown
Unregistering JMX-exposed beans
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting WagesApplication on SKY-20171023NXB with PID 5944 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2066128e: startup date [Sat Mar 24 17:43:23 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.SalaryTypeRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'dataSource' of type [com.alibaba.druid.pool.DruidDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'myBatisConfig' of type [com.jiemin.wages.config.MyBatisConfig$$EnhancerBySpringCGLIB$$ca83f08d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'annotationDrivenTransactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$2cad06c7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 866 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'salaryTypeController': Unsatisfied dependency expressed through field 'service'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'salaryTypeService' defined in file [D:\project\project\wages\target\classes\com\jiemin\wages\service\SalaryTypeService.class]: Post-processing of merged bean definition failed; nested exception is java.lang.IllegalStateException: Failed to introspect Class [com.jiemin.wages.service.SalaryTypeService] from ClassLoader [org.springframework.boot.devtools.restart.classloader.RestartClassLoader@3aa1596]
Closing JPA EntityManagerFactory for persistence unit 'default'
Stopping service [Tomcat]


Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
Starting WagesApplication on SKY-20171023NXB with PID 5944 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@ac82281: startup date [Sat Mar 24 17:43:51 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.SalaryTypeRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'dataSource' of type [com.alibaba.druid.pool.DruidDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'myBatisConfig' of type [com.jiemin.wages.config.MyBatisConfig$$EnhancerBySpringCGLIB$$ca83f08d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'annotationDrivenTransactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$2cad06c7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 725 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@ac82281: startup date [Sat Mar 24 17:43:51 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/salaryType/findSalaryTypeByPage]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.SalaryTypeController.findSalaryTypeByPage(com.jiemin.wages.domain.common.Pages,java.lang.String)
Mapped "{[/salaryType/delByGid]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.SalaryTypeController.deleteByGid(java.lang.Long)
Mapped "{[/salaryType/saveSalaryType]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.SalaryTypeController.saveSalaryType(com.jiemin.wages.domain.SalaryType)
Mapped "{[/salaryType/updateSalaryType]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.SalaryTypeController.updateSalaryType(com.jiemin.wages.domain.SalaryType)
Mapped "{[/staff/delByGid]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.deleteByGid(java.lang.Long)
Mapped "{[/staff/saveStaff]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.addStaff(com.jiemin.wages.domain.Staff)
Mapped "{[/staff/findStaffByPage]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.findStaffByPage(com.jiemin.wages.domain.common.Pages,java.lang.String)
Mapped "{[/staff/updateStaff]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.updateStaff(com.jiemin.wages.domain.Staff)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in exceptionHandle
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http) with context path ''
Started WagesApplication in 2.08 seconds (JVM running for 99.726)
Condition evaluation unchanged
Starting WagesApplication on SKY-20171023NXB with PID 12252 (D:\project\project\wages\target\classes started by Administrator in D:\project\project\wages)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@66f0785b: startup date [Sat Mar 24 17:45:51 CST 2018]; root of context hierarchy
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.SalaryTypeRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.jiemin.wages.domain.StaffRepository.
Cannot enhance @Configuration bean definition 'myBatisMapperScannerConfig' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Generic] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'dataSource' of type [com.alibaba.druid.pool.DruidDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'myBatisConfig' of type [com.jiemin.wages.config.MyBatisConfig$$EnhancerBySpringCGLIB$$c843a082] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'annotationDrivenTransactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$2a6cb6bc] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
Tomcat initialized with port(s): 8088 (http)
Initializing ProtocolHandler ["http-nio-8088"]
Starting service [Tomcat]
Starting Servlet Engine: Apache Tomcat/8.5.28
The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Java\jdk1.8.0_131\bin;D:\java\apache-maven-3.5.2\bin;C:\Program Files (x86)\Git\cmd;%ZOOKEEPER_HOME%\bin;.]
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 2357 ms
Servlet dispatcherServlet mapped to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Mapping filter: 'resourceUrlEncodingFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.2.14.Final}
HHH000206: hibernate.properties not found
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@66f0785b: startup date [Sat Mar 24 17:45:51 CST 2018]; root of context hierarchy
spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
Mapped "{[/salaryType/updateSalaryType]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.SalaryTypeController.updateSalaryType(com.jiemin.wages.domain.SalaryType)
Mapped "{[/salaryType/saveSalaryType]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.SalaryTypeController.saveSalaryType(com.jiemin.wages.domain.SalaryType)
Mapped "{[/salaryType/delByGid]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.SalaryTypeController.deleteByGid(java.lang.Long)
Mapped "{[/salaryType/findSalaryTypeByPage]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.SalaryTypeController.findSalaryTypeByPage(com.jiemin.wages.domain.common.Pages,java.lang.String)
Mapped "{[/staff/findStaffByPage]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.findStaffByPage(com.jiemin.wages.domain.common.Pages,java.lang.String)
Mapped "{[/staff/saveStaff]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.addStaff(com.jiemin.wages.domain.Staff)
Mapped "{[/staff/delByGid]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.deleteByGid(java.lang.Long)
Mapped "{[/staff/updateStaff]}" onto public com.jiemin.wages.domain.common.Result com.jiemin.wages.controller.StaffController.updateStaff(com.jiemin.wages.domain.Staff)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in exceptionHandle
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
[THYMELEAF][restartedMain] Template Mode 'HTML5' is deprecated. Using Template Mode 'HTML' instead.
Adding welcome page template: index
LiveReload server is running on port 35729
Registering beans for JMX exposure on startup
Bean with name 'dataSource' has been autodetected for JMX exposure
Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
Starting ProtocolHandler ["http-nio-8088"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8088 (http) with context path ''
Started WagesApplication in 6.998 seconds (JVM running for 7.941)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 22 ms
===========开始请求com.jiemin.wages.controller.SalaryTypeController.saveSalaryType============
===========请求时间:2018-03-24 17:46:06==========================
url=http://localhost:8088/salaryType/saveSalaryType
method=GET
ip=0:0:0:0:0:0:0:1
class_method=com.jiemin.wages.controller.SalaryTypeController.saveSalaryType
args=SalaryType(gid=null, typeId=1, typeName=医疗保险, typeMark=0, typeStatus=1)
=============结束请求时间:2018-03-24 17:46:06======================
response=Result(code=200, msg=成功, data=SalaryType(gid=null, typeId=1, typeName=医疗保险, typeMark=0, typeStatus=1), page=null)
===========开始请求com.jiemin.wages.controller.SalaryTypeController.updateSalaryType============
===========请求时间:2018-03-24 17:47:08==========================
url=http://localhost:8088/salaryType/updateSalaryType
method=GET
ip=0:0:0:0:0:0:0:1
class_method=com.jiemin.wages.controller.SalaryTypeController.updateSalaryType
args=SalaryType(gid=1, typeId=1, typeName=事业保险, typeMark=0, typeStatus=1)
=============结束请求时间:2018-03-24 17:47:08======================
response=Result(code=200, msg=成功, data=null, page=null)
===========开始请求com.jiemin.wages.controller.SalaryTypeController.updateSalaryType============
===========请求时间:2018-03-24 17:47:18==========================
url=http://localhost:8088/salaryType/updateSalaryType
method=GET
ip=0:0:0:0:0:0:0:1
class_method=com.jiemin.wages.controller.SalaryTypeController.updateSalaryType
args=SalaryType(gid=1, typeId=1, typeName=医疗保险, typeMark=0, typeStatus=1)
=============结束请求时间:2018-03-24 17:47:18======================
response=Result(code=200, msg=成功, data=null, page=null)
